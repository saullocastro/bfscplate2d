#cython: boundscheck=False
#cython: wraparound=False
#cython: cdivision=True
#cython: nonecheck=False
#cython: infer_types=False
import numpy as np


INT = np.int64
DOUBLE = np.float64
cdef int DOF = 10
cdef int num_nodes = 4
KC0_SPARSE_SIZE = 1600
KCNL_SPARSE_SIZE = 1024
KG_SPARSE_SIZE = 256
M_SPARSE_SIZE = 544


cdef class BFSCPlate2D(object):
    """
    Nodal connectivity for plate element
    similar to Nastran's CQUAD4

      ^ y
      |

     4 ________ 3
      |       |
      |       |   --> x
      |       |
      |_______|
     1         2

    """
    cdef public int n1, n2, n3, n4
    cdef public int c1, c2, c3, c4
    cdef public int init_k_KC0, init_k_KCNL, init_k_KG, init_k_M
    cdef public double lex, ley, rho, h
    cdef public double [:, ::1] ABD
    cdef public double [:, ::1] Bm
    cdef public double [:, ::1] Bb
    cdef public double [::1] Nu
    cdef public double [::1] Nu_x
    cdef public double [::1] Nu_y
    cdef public double [::1] Nv
    cdef public double [::1] Nv_x
    cdef public double [::1] Nv_y
    cdef public double [::1] Nw
    cdef public double [::1] Nw_x
    cdef public double [::1] Nw_y
    cdef public double [::1] u
    def __init__(BFSCPlate2D self):
        self.n1 = -1
        self.n2 = -1
        self.n3 = -1
        self.n4 = -1
        self.c1 = -1
        self.c2 = -1
        self.c3 = -1
        self.c4 = -1
        self.init_k_KC0 = 0
        self.init_k_KG = 0
        self.init_k_M = 0
        self.ABD = np.zeros((6, 6), dtype=DOUBLE)
        self.rho = 0
        self.lex = 0
        self.ley = 0
        self.h = 0
        self.Bm = np.zeros((3, num_nodes*DOF), dtype=DOUBLE)
        self.Bb = np.zeros((3, num_nodes*DOF), dtype=DOUBLE)
        self.Nu = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nu_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nu_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.u = np.zeros(num_nodes*DOF, dtype=DOUBLE)

    cpdef void update_Bm(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Bm[0, 0] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[0, 1] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[0, 2] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[0, 10] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 11] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 12] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 20] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 21] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 22] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[0, 30] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Bm[0, 31] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Bm[0, 32] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Bm[1, 3] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[1, 4] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Bm[1, 5] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[1, 13] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[1, 14] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Bm[1, 15] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[1, 23] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[1, 24] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Bm[1, 25] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[1, 33] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[1, 34] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Bm[1, 35] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[2, 0] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[2, 1] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Bm[2, 2] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[2, 3] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[2, 4] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[2, 5] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Bm[2, 10] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[2, 11] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Bm[2, 12] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[2, 13] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 14] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 15] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 20] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[2, 21] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Bm[2, 22] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Bm[2, 23] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 24] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 25] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Bm[2, 30] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[2, 31] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Bm[2, 32] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Bm[2, 33] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Bm[2, 34] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Bm[2, 35] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

    cpdef void update_Bb(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Bb[0, 6] = -4*(0.125*(-eta - 2)*(eta - 1)**2*(-xi - 2) - 0.125*(-eta - 2)*(eta - 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 7] = -4*(0.0625*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1) - 0.0625*lex*(-eta - 2)*(eta - 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 8] = -4*(0.0625*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2) - 0.0625*ley*(-eta - 1)*(eta - 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 9] = -4*(0.03125*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1) - 0.03125*lex*ley*(-eta - 1)*(eta - 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 16] = -4*(2*(-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125) + 0.125*(-eta - 2)*(eta - 1)**2*(xi - 2))/lex**2
            self.Bb[0, 17] = -4*(-0.0625*lex*(-eta - 2)*(eta - 1)**2*(xi - 1) - 0.0625*lex*(-eta - 2)*(eta - 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 18] = -4*(0.0625*ley*(-eta - 1)*(eta - 1)**2*(xi - 2) + 0.0625*ley*(-eta - 1)*(eta - 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 19] = -4*(-0.03125*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1) - 0.03125*lex*ley*(-eta - 1)*(eta - 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 26] = -4*(0.125*(eta - 2)*(eta + 1)**2*(xi - 2) + 0.125*(eta - 2)*(eta + 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 27] = -4*(-0.0625*lex*(eta - 2)*(eta + 1)**2*(xi - 1) - 0.0625*lex*(eta - 2)*(eta + 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 28] = -4*(-0.0625*ley*(eta - 1)*(eta + 1)**2*(xi - 2) - 0.0625*ley*(eta - 1)*(eta + 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 29] = -4*(0.03125*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1) + 0.03125*lex*ley*(eta - 1)*(eta + 1)**2*(2*xi + 2))/lex**2
            self.Bb[0, 36] = -4*(0.125*(eta - 2)*(eta + 1)**2*(-xi - 2) - 0.125*(eta - 2)*(eta + 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 37] = -4*(0.0625*lex*(eta - 2)*(eta + 1)**2*(-xi - 1) - 0.0625*lex*(eta - 2)*(eta + 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 38] = -4*(-0.0625*ley*(eta - 1)*(eta + 1)**2*(-xi - 2) + 0.0625*ley*(eta - 1)*(eta + 1)**2*(2*xi - 2))/lex**2
            self.Bb[0, 39] = -4*(-0.03125*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1) + 0.03125*lex*ley*(eta - 1)*(eta + 1)**2*(2*xi - 2))/lex**2
            self.Bb[1, 6] = -4*((0.125 - 0.125*eta)*(-xi - 2)*(xi - 1)**2 + 0.125*(-eta - 2)*(-xi - 2)*(xi - 1)**2 - (0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2)/ley**2
            self.Bb[1, 7] = -4*(0.0625*lex*(-eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.0625*lex*(2*eta - 2)*(-xi - 1)*(xi - 1)**2)/ley**2
            self.Bb[1, 8] = -4*(0.0625*ley*(-eta - 1)*(-xi - 2)*(xi - 1)**2 - 0.0625*ley*(2*eta - 2)*(-xi - 2)*(xi - 1)**2)/ley**2
            self.Bb[1, 9] = -4*(0.03125*lex*ley*(-eta - 1)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*ley*(2*eta - 2)*(-xi - 1)*(xi - 1)**2)/ley**2
            self.Bb[1, 16] = -4*(0.125*(-eta - 2)*(xi - 2)*(xi + 1)**2 - 0.125*(2*eta - 2)*(xi - 2)*(xi + 1)**2)/ley**2
            self.Bb[1, 17] = -4*(-0.0625*lex*(-eta - 2)*(xi - 1)*(xi + 1)**2 + 0.0625*lex*(2*eta - 2)*(xi - 1)*(xi + 1)**2)/ley**2
            self.Bb[1, 18] = -4*(0.0625*ley*(-eta - 1)*(xi - 2)*(xi + 1)**2 - 0.0625*ley*(2*eta - 2)*(xi - 2)*(xi + 1)**2)/ley**2
            self.Bb[1, 19] = -4*(-0.03125*lex*ley*(-eta - 1)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*ley*(2*eta - 2)*(xi - 1)*(xi + 1)**2)/ley**2
            self.Bb[1, 26] = -4*(2*(0.125*eta + 0.125)*(xi - 2)*(xi + 1)**2 + 0.125*(eta - 2)*(xi - 2)*(xi + 1)**2)/ley**2
            self.Bb[1, 27] = -4*(-0.0625*lex*(eta - 2)*(xi - 1)*(xi + 1)**2 - 0.0625*lex*(2*eta + 2)*(xi - 1)*(xi + 1)**2)/ley**2
            self.Bb[1, 28] = -4*(-0.0625*ley*(eta - 1)*(xi - 2)*(xi + 1)**2 - 0.0625*ley*(2*eta + 2)*(xi - 2)*(xi + 1)**2)/ley**2
            self.Bb[1, 29] = -4*(0.03125*lex*ley*(eta - 1)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*ley*(2*eta + 2)*(xi - 1)*(xi + 1)**2)/ley**2
            self.Bb[1, 36] = -4*(2*(0.125*eta + 0.125)*(-xi - 2)*(xi - 1)**2 + 0.125*(eta - 2)*(-xi - 2)*(xi - 1)**2)/ley**2
            self.Bb[1, 37] = -4*(0.0625*lex*(eta - 2)*(-xi - 1)*(xi - 1)**2 + 0.0625*lex*(2*eta + 2)*(-xi - 1)*(xi - 1)**2)/ley**2
            self.Bb[1, 38] = -4*(-0.0625*ley*(eta - 1)*(-xi - 2)*(xi - 1)**2 - 0.0625*ley*(2*eta + 2)*(-xi - 2)*(xi - 1)**2)/ley**2
            self.Bb[1, 39] = -4*(-0.03125*lex*ley*(eta - 1)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*ley*(2*eta + 2)*(-xi - 1)*(xi - 1)**2)/ley**2
            self.Bb[2, 6] = -4*((0.125 - 0.125*eta)*(-eta - 2)*(xi - 1)**2 + (-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 1)**2*(-xi - 2)*(2*xi - 2) + 0.0625*(eta - 1)**2*(xi - 1)**2)/(lex*ley) - 4*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(2*xi - 2) - (-eta - 2)*(0.125*eta - 0.125)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(2*xi - 2) + 0.0625*(eta - 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 7] = -8*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(2*xi - 2) + 0.03125*lex*(eta - 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 8] = -8*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 9] = -8*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 16] = -4*((-eta - 2)*(2*eta - 2)*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(2*eta - 2)*(xi + 1)**2 + (eta - 1)**2*(-0.125*xi - 0.125)*(xi - 2) - 0.0625*(eta - 1)**2*(xi + 1)**2)/(lex*ley) - 4*((-eta - 2)*(2*eta - 2)*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(2*eta - 2)*(xi + 1)**2 - (eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) - 0.0625*(eta - 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 17] = -8*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(2*xi + 2) + 0.03125*lex*(eta - 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 18] = -8*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 19] = -8*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 26] = -8*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(2*xi + 2) + (0.125*eta + 0.125)*(eta - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta + 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 27] = -8*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(2*eta + 2)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta + 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 28] = -8*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(2*eta + 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta + 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 29] = -8*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta + 1)**2*(xi + 1)**2)/(lex*ley)
            self.Bb[2, 36] = -4*((-0.125*eta - 0.125)*(eta - 2)*(xi - 1)**2 + (0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(2*xi - 2) + 0.0625*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta + 1)**2*(xi - 1)**2)/(lex*ley) - 4*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(2*xi - 2) - (0.125*eta + 0.125)*(eta - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta + 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 37] = -8*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta + 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 38] = -8*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta + 1)**2*(xi - 1)**2)/(lex*ley)
            self.Bb[2, 39] = -8*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)**2)/(lex*ley)

    cpdef void update_Nu(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nu[0] = 0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nu[1] = 0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nu[2] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nu[10] = 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nu[11] = -0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nu[12] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nu[20] = 0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nu[21] = -0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nu[22] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nu[30] = 0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nu[31] = 0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nu[32] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2

    cpdef void update_Nu_x(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nu_x[0] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nu_x[1] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nu_x[2] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nu_x[10] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nu_x[11] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nu_x[12] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nu_x[20] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nu_x[21] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nu_x[22] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nu_x[30] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nu_x[31] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nu_x[32] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

    cpdef void update_Nu_y(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nu_y[0] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nu_y[1] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nu_y[2] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nu_y[10] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nu_y[11] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nu_y[12] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nu_y[20] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nu_y[21] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nu_y[22] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nu_y[30] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nu_y[31] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nu_y[32] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley

    cpdef void update_Nv(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nv[3] = 0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nv[4] = 0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nv[5] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nv[13] = 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nv[14] = -0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nv[15] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nv[23] = 0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nv[24] = -0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nv[25] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nv[33] = 0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nv[34] = 0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nv[35] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2

    cpdef void update_Nv_x(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nv_x[3] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nv_x[4] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nv_x[5] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nv_x[13] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nv_x[14] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nv_x[15] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nv_x[23] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nv_x[24] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nv_x[25] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nv_x[33] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nv_x[34] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nv_x[35] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

    cpdef void update_Nv_y(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nv_y[3] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nv_y[4] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nv_y[5] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nv_y[13] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nv_y[14] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nv_y[15] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nv_y[23] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nv_y[24] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nv_y[25] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nv_y[33] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nv_y[34] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nv_y[35] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley

    cpdef void update_Nw(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw[6] = 0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[7] = 0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[8] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[9] = 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[16] = 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[17] = -0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[18] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[19] = -0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[26] = 0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[27] = -0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[28] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[29] = 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[36] = 0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[37] = 0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[38] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[39] = -0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2

    cpdef void update_Nw_x(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw_x[6] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[7] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[8] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[9] = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[16] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[17] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[18] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[19] = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[26] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[27] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[28] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[29] = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[36] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[37] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[38] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[39] = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

    cpdef void update_Nw_y(BFSCPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw_y[6] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[7] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[8] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[9] = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[16] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[17] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[18] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[19] = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[26] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[27] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[28] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[29] = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[36] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[37] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[38] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[39] = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley


cpdef void update_KC0(BFSCPlate2D plate,
                      double [::1] points,
                      double [::1] weights,
                      long [::1] KC0r,
                      long [::1] KC0c,
                      double [::1] KC0v,
                      ):
    """Update sparse vectors for linear constitutive stiffness matrix KC0

    Properties
    ----------
    plate : `.BFSCPlate2D` object
        The plate element being added to KC0
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KC0r : np.array
        Array to store row positions of sparse values
    KC0c : np.array
        Array to store column positions of sparse values
    KC0v : np.array
        Array to store sparse values

    """
    cdef int c1, c2, c3, c4, nint, i, j, k
    cdef double Bm1_01, Bm1_02, Bm1_03, Bm1_11, Bm1_12, Bm1_13, Bm1_21, Bm1_22, Bm1_23, Bm1_31, Bm1_32, Bm1_33, Bm2_04, Bm2_05, Bm2_06, Bm2_14, Bm2_15, Bm2_16, Bm2_24, Bm2_25, Bm2_26, Bm2_34, Bm2_35, Bm2_36, Bm3_01, Bm3_02, Bm3_03, Bm3_04, Bm3_05, Bm3_06, Bm3_11, Bm3_12, Bm3_13, Bm3_14, Bm3_15, Bm3_16, Bm3_21, Bm3_22, Bm3_23, Bm3_24, Bm3_25, Bm3_26, Bm3_31, Bm3_32, Bm3_33, Bm3_34, Bm3_35, Bm3_36
    cdef double Bb1_07, Bb1_08, Bb1_09, Bb1_10, Bb1_17, Bb1_18, Bb1_19, Bb1_20, Bb1_27, Bb1_28, Bb1_29, Bb1_30, Bb1_37, Bb1_38, Bb1_39, Bb1_40, Bb2_07, Bb2_08, Bb2_09, Bb2_10, Bb2_17, Bb2_18, Bb2_19, Bb2_20, Bb2_27, Bb2_28, Bb2_29, Bb2_30, Bb2_37, Bb2_38, Bb2_39, Bb2_40, Bb3_07, Bb3_08, Bb3_09, Bb3_10, Bb3_17, Bb3_18, Bb3_19, Bb3_20, Bb3_27, Bb3_28, Bb3_29, Bb3_30, Bb3_37, Bb3_38, Bb3_39, Bb3_40
    cdef double lex, ley
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66
    cdef double D11, D12, D16, D22, D26, D66

    with nogil:
        lex = plate.lex
        ley = plate.ley

        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]
        D11 = plate.ABD[0+3, 0+3]
        D12 = plate.ABD[0+3, 1+3]
        D16 = plate.ABD[0+3, 2+3]
        D22 = plate.ABD[1+3, 1+3]
        D26 = plate.ABD[1+3, 2+3]
        D66 = plate.ABD[2+3, 2+3]

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        nint = points.shape[0]

        k = plate.init_k_KC0
        KC0r[k] = 0+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 6+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 7+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 8+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 9+c1
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 6+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 7+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 8+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 9+c2
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 6+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 7+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 8+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 9+c3
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 6+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 7+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 8+c4
        KC0c[k] = 9+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 6+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 7+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 8+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 9+c1
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 6+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 7+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 8+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 9+c2
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 6+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 7+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 8+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 9+c3
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 6+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 7+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 8+c4
        k += 1
        KC0r[k] = 9+c4
        KC0c[k] = 9+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                Bm1_01 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm1_02 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_03 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm1_11 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm1_12 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm1_13 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm1_21 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm1_22 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm1_23 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm1_31 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm1_32 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_33 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                Bm2_04 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm2_05 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_06 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm2_14 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm2_15 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_16 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm2_24 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm2_25 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_26 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm2_34 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm2_35 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_36 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_01 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm3_02 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_03 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm3_04 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm3_05 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_06 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm3_11 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm3_12 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_13 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm3_14 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm3_15 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm3_16 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm3_21 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm3_22 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_23 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm3_24 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm3_25 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm3_26 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm3_31 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm3_32 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_33 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_34 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm3_35 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_36 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex

                Bb1_07 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_08 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_09 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_10 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_17 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_18 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_19 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_20 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_27 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_28 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_29 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_30 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_37 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_38 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_39 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_40 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_07 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_08 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_09 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_10 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_17 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_18 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_19 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_20 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_27 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_28 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_29 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_30 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_37 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_38 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_39 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_40 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_07 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_08 = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_09 = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_10 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_17 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_18 = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_19 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_20 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_27 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_28 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_29 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_30 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_37 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_38 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_39 = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_40 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                k = plate.init_k_KC0
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_01 + A16*Bm3_01) + Bm3_01*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_01 + A16*Bm3_01) + Bm3_02*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_01 + A16*Bm3_01) + Bm3_03*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_01 + A26*Bm3_01) + Bm3_04*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_01 + A26*Bm3_01) + Bm3_05*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_01 + A26*Bm3_01) + Bm3_06*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_01 + B16*Bm3_01) + Bb2_07*(B12*Bm1_01 + B26*Bm3_01) + Bb3_07*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_01 + B16*Bm3_01) + Bb2_08*(B12*Bm1_01 + B26*Bm3_01) + Bb3_08*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_01 + B16*Bm3_01) + Bb2_09*(B12*Bm1_01 + B26*Bm3_01) + Bb3_09*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_01 + B16*Bm3_01) + Bb2_10*(B12*Bm1_01 + B26*Bm3_01) + Bb3_10*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_01 + A16*Bm3_01) + Bm3_11*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_01 + A16*Bm3_01) + Bm3_12*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_01 + A16*Bm3_01) + Bm3_13*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_01 + A26*Bm3_01) + Bm3_14*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_01 + A26*Bm3_01) + Bm3_15*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_01 + A26*Bm3_01) + Bm3_16*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_01 + B16*Bm3_01) + Bb2_17*(B12*Bm1_01 + B26*Bm3_01) + Bb3_17*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_01 + B16*Bm3_01) + Bb2_18*(B12*Bm1_01 + B26*Bm3_01) + Bb3_18*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_01 + B16*Bm3_01) + Bb2_19*(B12*Bm1_01 + B26*Bm3_01) + Bb3_19*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_01 + B16*Bm3_01) + Bb2_20*(B12*Bm1_01 + B26*Bm3_01) + Bb3_20*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_01 + A16*Bm3_01) + Bm3_21*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_01 + A16*Bm3_01) + Bm3_22*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_01 + A16*Bm3_01) + Bm3_23*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_01 + A26*Bm3_01) + Bm3_24*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_01 + A26*Bm3_01) + Bm3_25*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_01 + A26*Bm3_01) + Bm3_26*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_01 + B16*Bm3_01) + Bb2_27*(B12*Bm1_01 + B26*Bm3_01) + Bb3_27*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_01 + B16*Bm3_01) + Bb2_28*(B12*Bm1_01 + B26*Bm3_01) + Bb3_28*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_01 + B16*Bm3_01) + Bb2_29*(B12*Bm1_01 + B26*Bm3_01) + Bb3_29*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_01 + B16*Bm3_01) + Bb2_30*(B12*Bm1_01 + B26*Bm3_01) + Bb3_30*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_01 + A16*Bm3_01) + Bm3_31*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_01 + A16*Bm3_01) + Bm3_32*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_01 + A16*Bm3_01) + Bm3_33*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_01 + A26*Bm3_01) + Bm3_34*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_01 + A26*Bm3_01) + Bm3_35*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_01 + A26*Bm3_01) + Bm3_36*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_01 + B16*Bm3_01) + Bb2_37*(B12*Bm1_01 + B26*Bm3_01) + Bb3_37*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_01 + B16*Bm3_01) + Bb2_38*(B12*Bm1_01 + B26*Bm3_01) + Bb3_38*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_01 + B16*Bm3_01) + Bb2_39*(B12*Bm1_01 + B26*Bm3_01) + Bb3_39*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_01 + B16*Bm3_01) + Bb2_40*(B12*Bm1_01 + B26*Bm3_01) + Bb3_40*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_02 + A16*Bm3_02) + Bm3_01*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_02 + A16*Bm3_02) + Bm3_02*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_02 + A16*Bm3_02) + Bm3_03*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_02 + A26*Bm3_02) + Bm3_04*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_02 + A26*Bm3_02) + Bm3_05*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_02 + A26*Bm3_02) + Bm3_06*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_02 + B16*Bm3_02) + Bb2_07*(B12*Bm1_02 + B26*Bm3_02) + Bb3_07*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_02 + B16*Bm3_02) + Bb2_08*(B12*Bm1_02 + B26*Bm3_02) + Bb3_08*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_02 + B16*Bm3_02) + Bb2_09*(B12*Bm1_02 + B26*Bm3_02) + Bb3_09*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_02 + B16*Bm3_02) + Bb2_10*(B12*Bm1_02 + B26*Bm3_02) + Bb3_10*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_02 + A16*Bm3_02) + Bm3_11*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_02 + A16*Bm3_02) + Bm3_12*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_02 + A16*Bm3_02) + Bm3_13*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_02 + A26*Bm3_02) + Bm3_14*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_02 + A26*Bm3_02) + Bm3_15*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_02 + A26*Bm3_02) + Bm3_16*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_02 + B16*Bm3_02) + Bb2_17*(B12*Bm1_02 + B26*Bm3_02) + Bb3_17*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_02 + B16*Bm3_02) + Bb2_18*(B12*Bm1_02 + B26*Bm3_02) + Bb3_18*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_02 + B16*Bm3_02) + Bb2_19*(B12*Bm1_02 + B26*Bm3_02) + Bb3_19*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_02 + B16*Bm3_02) + Bb2_20*(B12*Bm1_02 + B26*Bm3_02) + Bb3_20*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_02 + A16*Bm3_02) + Bm3_21*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_02 + A16*Bm3_02) + Bm3_22*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_02 + A16*Bm3_02) + Bm3_23*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_02 + A26*Bm3_02) + Bm3_24*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_02 + A26*Bm3_02) + Bm3_25*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_02 + A26*Bm3_02) + Bm3_26*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_02 + B16*Bm3_02) + Bb2_27*(B12*Bm1_02 + B26*Bm3_02) + Bb3_27*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_02 + B16*Bm3_02) + Bb2_28*(B12*Bm1_02 + B26*Bm3_02) + Bb3_28*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_02 + B16*Bm3_02) + Bb2_29*(B12*Bm1_02 + B26*Bm3_02) + Bb3_29*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_02 + B16*Bm3_02) + Bb2_30*(B12*Bm1_02 + B26*Bm3_02) + Bb3_30*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_02 + A16*Bm3_02) + Bm3_31*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_02 + A16*Bm3_02) + Bm3_32*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_02 + A16*Bm3_02) + Bm3_33*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_02 + A26*Bm3_02) + Bm3_34*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_02 + A26*Bm3_02) + Bm3_35*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_02 + A26*Bm3_02) + Bm3_36*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_02 + B16*Bm3_02) + Bb2_37*(B12*Bm1_02 + B26*Bm3_02) + Bb3_37*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_02 + B16*Bm3_02) + Bb2_38*(B12*Bm1_02 + B26*Bm3_02) + Bb3_38*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_02 + B16*Bm3_02) + Bb2_39*(B12*Bm1_02 + B26*Bm3_02) + Bb3_39*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_02 + B16*Bm3_02) + Bb2_40*(B12*Bm1_02 + B26*Bm3_02) + Bb3_40*(B16*Bm1_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_03 + A16*Bm3_03) + Bm3_01*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_03 + A16*Bm3_03) + Bm3_02*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_03 + A16*Bm3_03) + Bm3_03*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_03 + A26*Bm3_03) + Bm3_04*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_03 + A26*Bm3_03) + Bm3_05*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_03 + A26*Bm3_03) + Bm3_06*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_03 + B16*Bm3_03) + Bb2_07*(B12*Bm1_03 + B26*Bm3_03) + Bb3_07*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_03 + B16*Bm3_03) + Bb2_08*(B12*Bm1_03 + B26*Bm3_03) + Bb3_08*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_03 + B16*Bm3_03) + Bb2_09*(B12*Bm1_03 + B26*Bm3_03) + Bb3_09*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_03 + B16*Bm3_03) + Bb2_10*(B12*Bm1_03 + B26*Bm3_03) + Bb3_10*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_03 + A16*Bm3_03) + Bm3_11*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_03 + A16*Bm3_03) + Bm3_12*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_03 + A16*Bm3_03) + Bm3_13*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_03 + A26*Bm3_03) + Bm3_14*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_03 + A26*Bm3_03) + Bm3_15*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_03 + A26*Bm3_03) + Bm3_16*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_03 + B16*Bm3_03) + Bb2_17*(B12*Bm1_03 + B26*Bm3_03) + Bb3_17*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_03 + B16*Bm3_03) + Bb2_18*(B12*Bm1_03 + B26*Bm3_03) + Bb3_18*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_03 + B16*Bm3_03) + Bb2_19*(B12*Bm1_03 + B26*Bm3_03) + Bb3_19*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_03 + B16*Bm3_03) + Bb2_20*(B12*Bm1_03 + B26*Bm3_03) + Bb3_20*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_03 + A16*Bm3_03) + Bm3_21*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_03 + A16*Bm3_03) + Bm3_22*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_03 + A16*Bm3_03) + Bm3_23*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_03 + A26*Bm3_03) + Bm3_24*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_03 + A26*Bm3_03) + Bm3_25*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_03 + A26*Bm3_03) + Bm3_26*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_03 + B16*Bm3_03) + Bb2_27*(B12*Bm1_03 + B26*Bm3_03) + Bb3_27*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_03 + B16*Bm3_03) + Bb2_28*(B12*Bm1_03 + B26*Bm3_03) + Bb3_28*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_03 + B16*Bm3_03) + Bb2_29*(B12*Bm1_03 + B26*Bm3_03) + Bb3_29*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_03 + B16*Bm3_03) + Bb2_30*(B12*Bm1_03 + B26*Bm3_03) + Bb3_30*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_03 + A16*Bm3_03) + Bm3_31*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_03 + A16*Bm3_03) + Bm3_32*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_03 + A16*Bm3_03) + Bm3_33*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_03 + A26*Bm3_03) + Bm3_34*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_03 + A26*Bm3_03) + Bm3_35*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_03 + A26*Bm3_03) + Bm3_36*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_03 + B16*Bm3_03) + Bb2_37*(B12*Bm1_03 + B26*Bm3_03) + Bb3_37*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_03 + B16*Bm3_03) + Bb2_38*(B12*Bm1_03 + B26*Bm3_03) + Bb3_38*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_03 + B16*Bm3_03) + Bb2_39*(B12*Bm1_03 + B26*Bm3_03) + Bb3_39*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_03 + B16*Bm3_03) + Bb2_40*(B12*Bm1_03 + B26*Bm3_03) + Bb3_40*(B16*Bm1_03 + B66*Bm3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_04 + A16*Bm3_04) + Bm3_01*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_04 + A16*Bm3_04) + Bm3_02*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_04 + A16*Bm3_04) + Bm3_03*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_04 + A26*Bm3_04) + Bm3_04*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_04 + A26*Bm3_04) + Bm3_05*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_04 + A26*Bm3_04) + Bm3_06*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_04 + B16*Bm3_04) + Bb2_07*(B22*Bm2_04 + B26*Bm3_04) + Bb3_07*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_04 + B16*Bm3_04) + Bb2_08*(B22*Bm2_04 + B26*Bm3_04) + Bb3_08*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_04 + B16*Bm3_04) + Bb2_09*(B22*Bm2_04 + B26*Bm3_04) + Bb3_09*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_04 + B16*Bm3_04) + Bb2_10*(B22*Bm2_04 + B26*Bm3_04) + Bb3_10*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_04 + A16*Bm3_04) + Bm3_11*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_04 + A16*Bm3_04) + Bm3_12*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_04 + A16*Bm3_04) + Bm3_13*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_04 + A26*Bm3_04) + Bm3_14*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_04 + A26*Bm3_04) + Bm3_15*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_04 + A26*Bm3_04) + Bm3_16*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_04 + B16*Bm3_04) + Bb2_17*(B22*Bm2_04 + B26*Bm3_04) + Bb3_17*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_04 + B16*Bm3_04) + Bb2_18*(B22*Bm2_04 + B26*Bm3_04) + Bb3_18*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_04 + B16*Bm3_04) + Bb2_19*(B22*Bm2_04 + B26*Bm3_04) + Bb3_19*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_04 + B16*Bm3_04) + Bb2_20*(B22*Bm2_04 + B26*Bm3_04) + Bb3_20*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_04 + A16*Bm3_04) + Bm3_21*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_04 + A16*Bm3_04) + Bm3_22*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_04 + A16*Bm3_04) + Bm3_23*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_04 + A26*Bm3_04) + Bm3_24*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_04 + A26*Bm3_04) + Bm3_25*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_04 + A26*Bm3_04) + Bm3_26*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_04 + B16*Bm3_04) + Bb2_27*(B22*Bm2_04 + B26*Bm3_04) + Bb3_27*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_04 + B16*Bm3_04) + Bb2_28*(B22*Bm2_04 + B26*Bm3_04) + Bb3_28*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_04 + B16*Bm3_04) + Bb2_29*(B22*Bm2_04 + B26*Bm3_04) + Bb3_29*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_04 + B16*Bm3_04) + Bb2_30*(B22*Bm2_04 + B26*Bm3_04) + Bb3_30*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_04 + A16*Bm3_04) + Bm3_31*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_04 + A16*Bm3_04) + Bm3_32*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_04 + A16*Bm3_04) + Bm3_33*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_04 + A26*Bm3_04) + Bm3_34*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_04 + A26*Bm3_04) + Bm3_35*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_04 + A26*Bm3_04) + Bm3_36*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_04 + B16*Bm3_04) + Bb2_37*(B22*Bm2_04 + B26*Bm3_04) + Bb3_37*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_04 + B16*Bm3_04) + Bb2_38*(B22*Bm2_04 + B26*Bm3_04) + Bb3_38*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_04 + B16*Bm3_04) + Bb2_39*(B22*Bm2_04 + B26*Bm3_04) + Bb3_39*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_04 + B16*Bm3_04) + Bb2_40*(B22*Bm2_04 + B26*Bm3_04) + Bb3_40*(B26*Bm2_04 + B66*Bm3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_05 + A16*Bm3_05) + Bm3_01*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_05 + A16*Bm3_05) + Bm3_02*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_05 + A16*Bm3_05) + Bm3_03*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_05 + A26*Bm3_05) + Bm3_04*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_05 + A26*Bm3_05) + Bm3_05*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_05 + A26*Bm3_05) + Bm3_06*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_05 + B16*Bm3_05) + Bb2_07*(B22*Bm2_05 + B26*Bm3_05) + Bb3_07*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_05 + B16*Bm3_05) + Bb2_08*(B22*Bm2_05 + B26*Bm3_05) + Bb3_08*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_05 + B16*Bm3_05) + Bb2_09*(B22*Bm2_05 + B26*Bm3_05) + Bb3_09*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_05 + B16*Bm3_05) + Bb2_10*(B22*Bm2_05 + B26*Bm3_05) + Bb3_10*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_05 + A16*Bm3_05) + Bm3_11*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_05 + A16*Bm3_05) + Bm3_12*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_05 + A16*Bm3_05) + Bm3_13*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_05 + A26*Bm3_05) + Bm3_14*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_05 + A26*Bm3_05) + Bm3_15*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_05 + A26*Bm3_05) + Bm3_16*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_05 + B16*Bm3_05) + Bb2_17*(B22*Bm2_05 + B26*Bm3_05) + Bb3_17*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_05 + B16*Bm3_05) + Bb2_18*(B22*Bm2_05 + B26*Bm3_05) + Bb3_18*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_05 + B16*Bm3_05) + Bb2_19*(B22*Bm2_05 + B26*Bm3_05) + Bb3_19*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_05 + B16*Bm3_05) + Bb2_20*(B22*Bm2_05 + B26*Bm3_05) + Bb3_20*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_05 + A16*Bm3_05) + Bm3_21*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_05 + A16*Bm3_05) + Bm3_22*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_05 + A16*Bm3_05) + Bm3_23*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_05 + A26*Bm3_05) + Bm3_24*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_05 + A26*Bm3_05) + Bm3_25*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_05 + A26*Bm3_05) + Bm3_26*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_05 + B16*Bm3_05) + Bb2_27*(B22*Bm2_05 + B26*Bm3_05) + Bb3_27*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_05 + B16*Bm3_05) + Bb2_28*(B22*Bm2_05 + B26*Bm3_05) + Bb3_28*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_05 + B16*Bm3_05) + Bb2_29*(B22*Bm2_05 + B26*Bm3_05) + Bb3_29*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_05 + B16*Bm3_05) + Bb2_30*(B22*Bm2_05 + B26*Bm3_05) + Bb3_30*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_05 + A16*Bm3_05) + Bm3_31*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_05 + A16*Bm3_05) + Bm3_32*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_05 + A16*Bm3_05) + Bm3_33*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_05 + A26*Bm3_05) + Bm3_34*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_05 + A26*Bm3_05) + Bm3_35*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_05 + A26*Bm3_05) + Bm3_36*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_05 + B16*Bm3_05) + Bb2_37*(B22*Bm2_05 + B26*Bm3_05) + Bb3_37*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_05 + B16*Bm3_05) + Bb2_38*(B22*Bm2_05 + B26*Bm3_05) + Bb3_38*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_05 + B16*Bm3_05) + Bb2_39*(B22*Bm2_05 + B26*Bm3_05) + Bb3_39*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_05 + B16*Bm3_05) + Bb2_40*(B22*Bm2_05 + B26*Bm3_05) + Bb3_40*(B26*Bm2_05 + B66*Bm3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_06 + A16*Bm3_06) + Bm3_01*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_06 + A16*Bm3_06) + Bm3_02*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_06 + A16*Bm3_06) + Bm3_03*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_06 + A26*Bm3_06) + Bm3_04*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_06 + A26*Bm3_06) + Bm3_05*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_06 + A26*Bm3_06) + Bm3_06*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_06 + B16*Bm3_06) + Bb2_07*(B22*Bm2_06 + B26*Bm3_06) + Bb3_07*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_06 + B16*Bm3_06) + Bb2_08*(B22*Bm2_06 + B26*Bm3_06) + Bb3_08*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_06 + B16*Bm3_06) + Bb2_09*(B22*Bm2_06 + B26*Bm3_06) + Bb3_09*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_06 + B16*Bm3_06) + Bb2_10*(B22*Bm2_06 + B26*Bm3_06) + Bb3_10*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_06 + A16*Bm3_06) + Bm3_11*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_06 + A16*Bm3_06) + Bm3_12*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_06 + A16*Bm3_06) + Bm3_13*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_06 + A26*Bm3_06) + Bm3_14*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_06 + A26*Bm3_06) + Bm3_15*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_06 + A26*Bm3_06) + Bm3_16*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_06 + B16*Bm3_06) + Bb2_17*(B22*Bm2_06 + B26*Bm3_06) + Bb3_17*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_06 + B16*Bm3_06) + Bb2_18*(B22*Bm2_06 + B26*Bm3_06) + Bb3_18*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_06 + B16*Bm3_06) + Bb2_19*(B22*Bm2_06 + B26*Bm3_06) + Bb3_19*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_06 + B16*Bm3_06) + Bb2_20*(B22*Bm2_06 + B26*Bm3_06) + Bb3_20*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_06 + A16*Bm3_06) + Bm3_21*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_06 + A16*Bm3_06) + Bm3_22*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_06 + A16*Bm3_06) + Bm3_23*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_06 + A26*Bm3_06) + Bm3_24*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_06 + A26*Bm3_06) + Bm3_25*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_06 + A26*Bm3_06) + Bm3_26*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_06 + B16*Bm3_06) + Bb2_27*(B22*Bm2_06 + B26*Bm3_06) + Bb3_27*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_06 + B16*Bm3_06) + Bb2_28*(B22*Bm2_06 + B26*Bm3_06) + Bb3_28*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_06 + B16*Bm3_06) + Bb2_29*(B22*Bm2_06 + B26*Bm3_06) + Bb3_29*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_06 + B16*Bm3_06) + Bb2_30*(B22*Bm2_06 + B26*Bm3_06) + Bb3_30*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_06 + A16*Bm3_06) + Bm3_31*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_06 + A16*Bm3_06) + Bm3_32*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_06 + A16*Bm3_06) + Bm3_33*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_06 + A26*Bm3_06) + Bm3_34*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_06 + A26*Bm3_06) + Bm3_35*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_06 + A26*Bm3_06) + Bm3_36*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_06 + B16*Bm3_06) + Bb2_37*(B22*Bm2_06 + B26*Bm3_06) + Bb3_37*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_06 + B16*Bm3_06) + Bb2_38*(B22*Bm2_06 + B26*Bm3_06) + Bb3_38*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_06 + B16*Bm3_06) + Bb2_39*(B22*Bm2_06 + B26*Bm3_06) + Bb3_39*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_06 + B16*Bm3_06) + Bb2_40*(B22*Bm2_06 + B26*Bm3_06) + Bb3_40*(B26*Bm2_06 + B66*Bm3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_01*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_02*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_03*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_04*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_05*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_06*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_07*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_07*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_08*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_08*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_09*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_09*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_10*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_10*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_11*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_12*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_13*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_14*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_15*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_16*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_17*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_17*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_18*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_18*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_19*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_19*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_20*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_20*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_21*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_22*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_23*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_24*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_25*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_26*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_27*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_27*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_28*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_28*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_29*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_29*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_30*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_30*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_31*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_32*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + Bm3_33*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_34*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_35*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + Bm3_36*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_37*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_37*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_38*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_38*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_39*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_39*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + Bb2_40*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + Bb3_40*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_01*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_02*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_03*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_04*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_05*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_06*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_07*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_07*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_08*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_08*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_09*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_09*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_10*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_10*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_11*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_12*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_13*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_14*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_15*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_16*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_17*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_17*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_18*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_18*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_19*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_19*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_20*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_20*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_21*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_22*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_23*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_24*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_25*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_26*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_27*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_27*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_28*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_28*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_29*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_29*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_30*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_30*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_31*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_32*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + Bm3_33*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_34*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_35*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + Bm3_36*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_37*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_37*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_38*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_38*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_39*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_39*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + Bb2_40*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + Bb3_40*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_01*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_02*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_03*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_04*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_05*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_06*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_07*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_07*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_08*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_08*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_09*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_09*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_10*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_10*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_11*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_12*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_13*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_14*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_15*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_16*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_17*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_17*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_18*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_18*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_19*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_19*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_20*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_20*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_21*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_22*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_23*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_24*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_25*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_26*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_27*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_27*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_28*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_28*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_29*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_29*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_30*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_30*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_31*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_32*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_33*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_34*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_35*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_36*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_37*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_37*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_38*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_38*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_39*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_39*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_40*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_40*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_01*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_02*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_03*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_04*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_05*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_06*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_07*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_07*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_08*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_08*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_09*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_09*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_10*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_10*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_11*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_12*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_13*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_14*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_15*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_16*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_17*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_17*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_18*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_18*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_19*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_19*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_20*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_20*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_21*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_22*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_23*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_24*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_25*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_26*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_27*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_27*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_28*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_28*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_29*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_29*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_30*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_30*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_31*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_32*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_33*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_34*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_35*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_36*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_37*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_37*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_38*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_38*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_39*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_39*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_40*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_40*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_11 + A16*Bm3_11) + Bm3_01*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_11 + A16*Bm3_11) + Bm3_02*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_11 + A16*Bm3_11) + Bm3_03*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_11 + A26*Bm3_11) + Bm3_04*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_11 + A26*Bm3_11) + Bm3_05*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_11 + A26*Bm3_11) + Bm3_06*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_11 + B16*Bm3_11) + Bb2_07*(B12*Bm1_11 + B26*Bm3_11) + Bb3_07*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_11 + B16*Bm3_11) + Bb2_08*(B12*Bm1_11 + B26*Bm3_11) + Bb3_08*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_11 + B16*Bm3_11) + Bb2_09*(B12*Bm1_11 + B26*Bm3_11) + Bb3_09*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_11 + B16*Bm3_11) + Bb2_10*(B12*Bm1_11 + B26*Bm3_11) + Bb3_10*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_11 + A16*Bm3_11) + Bm3_11*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_11 + A16*Bm3_11) + Bm3_12*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_11 + A16*Bm3_11) + Bm3_13*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_11 + A26*Bm3_11) + Bm3_14*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_11 + A26*Bm3_11) + Bm3_15*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_11 + A26*Bm3_11) + Bm3_16*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_11 + B16*Bm3_11) + Bb2_17*(B12*Bm1_11 + B26*Bm3_11) + Bb3_17*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_11 + B16*Bm3_11) + Bb2_18*(B12*Bm1_11 + B26*Bm3_11) + Bb3_18*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_11 + B16*Bm3_11) + Bb2_19*(B12*Bm1_11 + B26*Bm3_11) + Bb3_19*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_11 + B16*Bm3_11) + Bb2_20*(B12*Bm1_11 + B26*Bm3_11) + Bb3_20*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_11 + A16*Bm3_11) + Bm3_21*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_11 + A16*Bm3_11) + Bm3_22*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_11 + A16*Bm3_11) + Bm3_23*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_11 + A26*Bm3_11) + Bm3_24*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_11 + A26*Bm3_11) + Bm3_25*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_11 + A26*Bm3_11) + Bm3_26*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_11 + B16*Bm3_11) + Bb2_27*(B12*Bm1_11 + B26*Bm3_11) + Bb3_27*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_11 + B16*Bm3_11) + Bb2_28*(B12*Bm1_11 + B26*Bm3_11) + Bb3_28*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_11 + B16*Bm3_11) + Bb2_29*(B12*Bm1_11 + B26*Bm3_11) + Bb3_29*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_11 + B16*Bm3_11) + Bb2_30*(B12*Bm1_11 + B26*Bm3_11) + Bb3_30*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_11 + A16*Bm3_11) + Bm3_31*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_11 + A16*Bm3_11) + Bm3_32*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_11 + A16*Bm3_11) + Bm3_33*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_11 + A26*Bm3_11) + Bm3_34*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_11 + A26*Bm3_11) + Bm3_35*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_11 + A26*Bm3_11) + Bm3_36*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_11 + B16*Bm3_11) + Bb2_37*(B12*Bm1_11 + B26*Bm3_11) + Bb3_37*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_11 + B16*Bm3_11) + Bb2_38*(B12*Bm1_11 + B26*Bm3_11) + Bb3_38*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_11 + B16*Bm3_11) + Bb2_39*(B12*Bm1_11 + B26*Bm3_11) + Bb3_39*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_11 + B16*Bm3_11) + Bb2_40*(B12*Bm1_11 + B26*Bm3_11) + Bb3_40*(B16*Bm1_11 + B66*Bm3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_12 + A16*Bm3_12) + Bm3_01*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_12 + A16*Bm3_12) + Bm3_02*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_12 + A16*Bm3_12) + Bm3_03*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_12 + A26*Bm3_12) + Bm3_04*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_12 + A26*Bm3_12) + Bm3_05*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_12 + A26*Bm3_12) + Bm3_06*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_12 + B16*Bm3_12) + Bb2_07*(B12*Bm1_12 + B26*Bm3_12) + Bb3_07*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_12 + B16*Bm3_12) + Bb2_08*(B12*Bm1_12 + B26*Bm3_12) + Bb3_08*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_12 + B16*Bm3_12) + Bb2_09*(B12*Bm1_12 + B26*Bm3_12) + Bb3_09*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_12 + B16*Bm3_12) + Bb2_10*(B12*Bm1_12 + B26*Bm3_12) + Bb3_10*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_12 + A16*Bm3_12) + Bm3_11*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_12 + A16*Bm3_12) + Bm3_12*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_12 + A16*Bm3_12) + Bm3_13*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_12 + A26*Bm3_12) + Bm3_14*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_12 + A26*Bm3_12) + Bm3_15*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_12 + A26*Bm3_12) + Bm3_16*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_12 + B16*Bm3_12) + Bb2_17*(B12*Bm1_12 + B26*Bm3_12) + Bb3_17*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_12 + B16*Bm3_12) + Bb2_18*(B12*Bm1_12 + B26*Bm3_12) + Bb3_18*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_12 + B16*Bm3_12) + Bb2_19*(B12*Bm1_12 + B26*Bm3_12) + Bb3_19*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_12 + B16*Bm3_12) + Bb2_20*(B12*Bm1_12 + B26*Bm3_12) + Bb3_20*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_12 + A16*Bm3_12) + Bm3_21*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_12 + A16*Bm3_12) + Bm3_22*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_12 + A16*Bm3_12) + Bm3_23*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_12 + A26*Bm3_12) + Bm3_24*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_12 + A26*Bm3_12) + Bm3_25*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_12 + A26*Bm3_12) + Bm3_26*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_12 + B16*Bm3_12) + Bb2_27*(B12*Bm1_12 + B26*Bm3_12) + Bb3_27*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_12 + B16*Bm3_12) + Bb2_28*(B12*Bm1_12 + B26*Bm3_12) + Bb3_28*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_12 + B16*Bm3_12) + Bb2_29*(B12*Bm1_12 + B26*Bm3_12) + Bb3_29*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_12 + B16*Bm3_12) + Bb2_30*(B12*Bm1_12 + B26*Bm3_12) + Bb3_30*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_12 + A16*Bm3_12) + Bm3_31*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_12 + A16*Bm3_12) + Bm3_32*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_12 + A16*Bm3_12) + Bm3_33*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_12 + A26*Bm3_12) + Bm3_34*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_12 + A26*Bm3_12) + Bm3_35*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_12 + A26*Bm3_12) + Bm3_36*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_12 + B16*Bm3_12) + Bb2_37*(B12*Bm1_12 + B26*Bm3_12) + Bb3_37*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_12 + B16*Bm3_12) + Bb2_38*(B12*Bm1_12 + B26*Bm3_12) + Bb3_38*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_12 + B16*Bm3_12) + Bb2_39*(B12*Bm1_12 + B26*Bm3_12) + Bb3_39*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_12 + B16*Bm3_12) + Bb2_40*(B12*Bm1_12 + B26*Bm3_12) + Bb3_40*(B16*Bm1_12 + B66*Bm3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_13 + A16*Bm3_13) + Bm3_01*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_13 + A16*Bm3_13) + Bm3_02*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_13 + A16*Bm3_13) + Bm3_03*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_13 + A26*Bm3_13) + Bm3_04*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_13 + A26*Bm3_13) + Bm3_05*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_13 + A26*Bm3_13) + Bm3_06*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_13 + B16*Bm3_13) + Bb2_07*(B12*Bm1_13 + B26*Bm3_13) + Bb3_07*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_13 + B16*Bm3_13) + Bb2_08*(B12*Bm1_13 + B26*Bm3_13) + Bb3_08*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_13 + B16*Bm3_13) + Bb2_09*(B12*Bm1_13 + B26*Bm3_13) + Bb3_09*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_13 + B16*Bm3_13) + Bb2_10*(B12*Bm1_13 + B26*Bm3_13) + Bb3_10*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_13 + A16*Bm3_13) + Bm3_11*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_13 + A16*Bm3_13) + Bm3_12*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_13 + A16*Bm3_13) + Bm3_13*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_13 + A26*Bm3_13) + Bm3_14*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_13 + A26*Bm3_13) + Bm3_15*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_13 + A26*Bm3_13) + Bm3_16*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_13 + B16*Bm3_13) + Bb2_17*(B12*Bm1_13 + B26*Bm3_13) + Bb3_17*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_13 + B16*Bm3_13) + Bb2_18*(B12*Bm1_13 + B26*Bm3_13) + Bb3_18*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_13 + B16*Bm3_13) + Bb2_19*(B12*Bm1_13 + B26*Bm3_13) + Bb3_19*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_13 + B16*Bm3_13) + Bb2_20*(B12*Bm1_13 + B26*Bm3_13) + Bb3_20*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_13 + A16*Bm3_13) + Bm3_21*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_13 + A16*Bm3_13) + Bm3_22*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_13 + A16*Bm3_13) + Bm3_23*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_13 + A26*Bm3_13) + Bm3_24*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_13 + A26*Bm3_13) + Bm3_25*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_13 + A26*Bm3_13) + Bm3_26*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_13 + B16*Bm3_13) + Bb2_27*(B12*Bm1_13 + B26*Bm3_13) + Bb3_27*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_13 + B16*Bm3_13) + Bb2_28*(B12*Bm1_13 + B26*Bm3_13) + Bb3_28*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_13 + B16*Bm3_13) + Bb2_29*(B12*Bm1_13 + B26*Bm3_13) + Bb3_29*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_13 + B16*Bm3_13) + Bb2_30*(B12*Bm1_13 + B26*Bm3_13) + Bb3_30*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_13 + A16*Bm3_13) + Bm3_31*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_13 + A16*Bm3_13) + Bm3_32*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_13 + A16*Bm3_13) + Bm3_33*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_13 + A26*Bm3_13) + Bm3_34*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_13 + A26*Bm3_13) + Bm3_35*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_13 + A26*Bm3_13) + Bm3_36*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_13 + B16*Bm3_13) + Bb2_37*(B12*Bm1_13 + B26*Bm3_13) + Bb3_37*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_13 + B16*Bm3_13) + Bb2_38*(B12*Bm1_13 + B26*Bm3_13) + Bb3_38*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_13 + B16*Bm3_13) + Bb2_39*(B12*Bm1_13 + B26*Bm3_13) + Bb3_39*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_13 + B16*Bm3_13) + Bb2_40*(B12*Bm1_13 + B26*Bm3_13) + Bb3_40*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_14 + A16*Bm3_14) + Bm3_01*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_14 + A16*Bm3_14) + Bm3_02*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_14 + A16*Bm3_14) + Bm3_03*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_14 + A26*Bm3_14) + Bm3_04*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_14 + A26*Bm3_14) + Bm3_05*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_14 + A26*Bm3_14) + Bm3_06*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_14 + B16*Bm3_14) + Bb2_07*(B22*Bm2_14 + B26*Bm3_14) + Bb3_07*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_14 + B16*Bm3_14) + Bb2_08*(B22*Bm2_14 + B26*Bm3_14) + Bb3_08*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_14 + B16*Bm3_14) + Bb2_09*(B22*Bm2_14 + B26*Bm3_14) + Bb3_09*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_14 + B16*Bm3_14) + Bb2_10*(B22*Bm2_14 + B26*Bm3_14) + Bb3_10*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_14 + A16*Bm3_14) + Bm3_11*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_14 + A16*Bm3_14) + Bm3_12*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_14 + A16*Bm3_14) + Bm3_13*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_14 + A26*Bm3_14) + Bm3_14*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_14 + A26*Bm3_14) + Bm3_15*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_14 + A26*Bm3_14) + Bm3_16*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_14 + B16*Bm3_14) + Bb2_17*(B22*Bm2_14 + B26*Bm3_14) + Bb3_17*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_14 + B16*Bm3_14) + Bb2_18*(B22*Bm2_14 + B26*Bm3_14) + Bb3_18*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_14 + B16*Bm3_14) + Bb2_19*(B22*Bm2_14 + B26*Bm3_14) + Bb3_19*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_14 + B16*Bm3_14) + Bb2_20*(B22*Bm2_14 + B26*Bm3_14) + Bb3_20*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_14 + A16*Bm3_14) + Bm3_21*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_14 + A16*Bm3_14) + Bm3_22*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_14 + A16*Bm3_14) + Bm3_23*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_14 + A26*Bm3_14) + Bm3_24*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_14 + A26*Bm3_14) + Bm3_25*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_14 + A26*Bm3_14) + Bm3_26*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_14 + B16*Bm3_14) + Bb2_27*(B22*Bm2_14 + B26*Bm3_14) + Bb3_27*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_14 + B16*Bm3_14) + Bb2_28*(B22*Bm2_14 + B26*Bm3_14) + Bb3_28*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_14 + B16*Bm3_14) + Bb2_29*(B22*Bm2_14 + B26*Bm3_14) + Bb3_29*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_14 + B16*Bm3_14) + Bb2_30*(B22*Bm2_14 + B26*Bm3_14) + Bb3_30*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_14 + A16*Bm3_14) + Bm3_31*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_14 + A16*Bm3_14) + Bm3_32*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_14 + A16*Bm3_14) + Bm3_33*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_14 + A26*Bm3_14) + Bm3_34*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_14 + A26*Bm3_14) + Bm3_35*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_14 + A26*Bm3_14) + Bm3_36*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_14 + B16*Bm3_14) + Bb2_37*(B22*Bm2_14 + B26*Bm3_14) + Bb3_37*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_14 + B16*Bm3_14) + Bb2_38*(B22*Bm2_14 + B26*Bm3_14) + Bb3_38*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_14 + B16*Bm3_14) + Bb2_39*(B22*Bm2_14 + B26*Bm3_14) + Bb3_39*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_14 + B16*Bm3_14) + Bb2_40*(B22*Bm2_14 + B26*Bm3_14) + Bb3_40*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_15 + A16*Bm3_15) + Bm3_01*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_15 + A16*Bm3_15) + Bm3_02*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_15 + A16*Bm3_15) + Bm3_03*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_15 + A26*Bm3_15) + Bm3_04*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_15 + A26*Bm3_15) + Bm3_05*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_15 + A26*Bm3_15) + Bm3_06*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_15 + B16*Bm3_15) + Bb2_07*(B22*Bm2_15 + B26*Bm3_15) + Bb3_07*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_15 + B16*Bm3_15) + Bb2_08*(B22*Bm2_15 + B26*Bm3_15) + Bb3_08*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_15 + B16*Bm3_15) + Bb2_09*(B22*Bm2_15 + B26*Bm3_15) + Bb3_09*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_15 + B16*Bm3_15) + Bb2_10*(B22*Bm2_15 + B26*Bm3_15) + Bb3_10*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_15 + A16*Bm3_15) + Bm3_11*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_15 + A16*Bm3_15) + Bm3_12*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_15 + A16*Bm3_15) + Bm3_13*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_15 + A26*Bm3_15) + Bm3_14*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_15 + A26*Bm3_15) + Bm3_15*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_15 + A26*Bm3_15) + Bm3_16*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_15 + B16*Bm3_15) + Bb2_17*(B22*Bm2_15 + B26*Bm3_15) + Bb3_17*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_15 + B16*Bm3_15) + Bb2_18*(B22*Bm2_15 + B26*Bm3_15) + Bb3_18*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_15 + B16*Bm3_15) + Bb2_19*(B22*Bm2_15 + B26*Bm3_15) + Bb3_19*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_15 + B16*Bm3_15) + Bb2_20*(B22*Bm2_15 + B26*Bm3_15) + Bb3_20*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_15 + A16*Bm3_15) + Bm3_21*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_15 + A16*Bm3_15) + Bm3_22*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_15 + A16*Bm3_15) + Bm3_23*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_15 + A26*Bm3_15) + Bm3_24*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_15 + A26*Bm3_15) + Bm3_25*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_15 + A26*Bm3_15) + Bm3_26*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_15 + B16*Bm3_15) + Bb2_27*(B22*Bm2_15 + B26*Bm3_15) + Bb3_27*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_15 + B16*Bm3_15) + Bb2_28*(B22*Bm2_15 + B26*Bm3_15) + Bb3_28*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_15 + B16*Bm3_15) + Bb2_29*(B22*Bm2_15 + B26*Bm3_15) + Bb3_29*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_15 + B16*Bm3_15) + Bb2_30*(B22*Bm2_15 + B26*Bm3_15) + Bb3_30*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_15 + A16*Bm3_15) + Bm3_31*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_15 + A16*Bm3_15) + Bm3_32*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_15 + A16*Bm3_15) + Bm3_33*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_15 + A26*Bm3_15) + Bm3_34*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_15 + A26*Bm3_15) + Bm3_35*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_15 + A26*Bm3_15) + Bm3_36*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_15 + B16*Bm3_15) + Bb2_37*(B22*Bm2_15 + B26*Bm3_15) + Bb3_37*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_15 + B16*Bm3_15) + Bb2_38*(B22*Bm2_15 + B26*Bm3_15) + Bb3_38*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_15 + B16*Bm3_15) + Bb2_39*(B22*Bm2_15 + B26*Bm3_15) + Bb3_39*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_15 + B16*Bm3_15) + Bb2_40*(B22*Bm2_15 + B26*Bm3_15) + Bb3_40*(B26*Bm2_15 + B66*Bm3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_16 + A16*Bm3_16) + Bm3_01*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_16 + A16*Bm3_16) + Bm3_02*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_16 + A16*Bm3_16) + Bm3_03*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_16 + A26*Bm3_16) + Bm3_04*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_16 + A26*Bm3_16) + Bm3_05*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_16 + A26*Bm3_16) + Bm3_06*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_16 + B16*Bm3_16) + Bb2_07*(B22*Bm2_16 + B26*Bm3_16) + Bb3_07*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_16 + B16*Bm3_16) + Bb2_08*(B22*Bm2_16 + B26*Bm3_16) + Bb3_08*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_16 + B16*Bm3_16) + Bb2_09*(B22*Bm2_16 + B26*Bm3_16) + Bb3_09*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_16 + B16*Bm3_16) + Bb2_10*(B22*Bm2_16 + B26*Bm3_16) + Bb3_10*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_16 + A16*Bm3_16) + Bm3_11*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_16 + A16*Bm3_16) + Bm3_12*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_16 + A16*Bm3_16) + Bm3_13*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_16 + A26*Bm3_16) + Bm3_14*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_16 + A26*Bm3_16) + Bm3_15*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_16 + A26*Bm3_16) + Bm3_16*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_16 + B16*Bm3_16) + Bb2_17*(B22*Bm2_16 + B26*Bm3_16) + Bb3_17*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_16 + B16*Bm3_16) + Bb2_18*(B22*Bm2_16 + B26*Bm3_16) + Bb3_18*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_16 + B16*Bm3_16) + Bb2_19*(B22*Bm2_16 + B26*Bm3_16) + Bb3_19*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_16 + B16*Bm3_16) + Bb2_20*(B22*Bm2_16 + B26*Bm3_16) + Bb3_20*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_16 + A16*Bm3_16) + Bm3_21*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_16 + A16*Bm3_16) + Bm3_22*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_16 + A16*Bm3_16) + Bm3_23*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_16 + A26*Bm3_16) + Bm3_24*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_16 + A26*Bm3_16) + Bm3_25*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_16 + A26*Bm3_16) + Bm3_26*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_16 + B16*Bm3_16) + Bb2_27*(B22*Bm2_16 + B26*Bm3_16) + Bb3_27*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_16 + B16*Bm3_16) + Bb2_28*(B22*Bm2_16 + B26*Bm3_16) + Bb3_28*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_16 + B16*Bm3_16) + Bb2_29*(B22*Bm2_16 + B26*Bm3_16) + Bb3_29*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_16 + B16*Bm3_16) + Bb2_30*(B22*Bm2_16 + B26*Bm3_16) + Bb3_30*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_16 + A16*Bm3_16) + Bm3_31*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_16 + A16*Bm3_16) + Bm3_32*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_16 + A16*Bm3_16) + Bm3_33*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_16 + A26*Bm3_16) + Bm3_34*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_16 + A26*Bm3_16) + Bm3_35*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_16 + A26*Bm3_16) + Bm3_36*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_16 + B16*Bm3_16) + Bb2_37*(B22*Bm2_16 + B26*Bm3_16) + Bb3_37*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_16 + B16*Bm3_16) + Bb2_38*(B22*Bm2_16 + B26*Bm3_16) + Bb3_38*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_16 + B16*Bm3_16) + Bb2_39*(B22*Bm2_16 + B26*Bm3_16) + Bb3_39*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_16 + B16*Bm3_16) + Bb2_40*(B22*Bm2_16 + B26*Bm3_16) + Bb3_40*(B26*Bm2_16 + B66*Bm3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_01*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_02*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_03*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_04*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_05*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_06*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_07*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_07*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_08*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_08*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_09*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_09*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_10*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_10*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_11*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_12*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_13*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_14*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_15*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_16*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_17*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_17*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_18*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_18*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_19*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_19*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_20*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_20*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_21*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_22*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_23*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_24*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_25*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_26*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_27*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_27*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_28*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_28*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_29*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_29*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_30*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_30*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_31*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_32*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_33*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_34*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_35*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_36*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_37*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_37*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_38*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_38*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_39*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_39*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_40*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_40*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_01*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_02*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_03*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_04*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_05*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_06*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_07*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_07*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_08*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_08*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_09*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_09*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_10*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_10*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_11*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_12*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_13*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_14*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_15*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_16*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_17*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_17*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_18*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_18*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_19*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_19*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_20*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_20*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_21*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_22*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_23*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_24*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_25*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_26*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_27*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_27*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_28*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_28*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_29*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_29*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_30*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_30*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_31*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_32*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_33*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_34*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_35*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_36*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_37*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_37*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_38*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_38*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_39*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_39*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_40*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_40*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_01*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_02*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_03*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_04*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_05*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_06*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_07*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_07*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_08*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_08*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_09*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_09*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_10*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_10*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_11*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_12*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_13*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_14*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_15*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_16*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_17*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_17*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_18*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_18*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_19*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_19*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_20*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_20*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_21*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_22*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_23*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_24*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_25*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_26*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_27*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_27*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_28*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_28*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_29*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_29*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_30*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_30*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_31*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_32*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + Bm3_33*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_34*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_35*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + Bm3_36*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_37*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_37*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_38*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_38*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_39*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_39*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + Bb2_40*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + Bb3_40*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_01*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_02*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_03*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_04*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_05*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_06*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_07*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_07*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_08*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_08*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_09*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_09*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_10*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_10*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_11*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_12*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_13*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_14*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_15*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_16*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_17*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_17*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_18*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_18*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_19*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_19*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_20*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_20*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_21*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_22*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_23*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_24*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_25*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_26*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_27*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_27*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_28*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_28*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_29*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_29*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_30*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_30*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_31*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_32*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + Bm3_33*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_34*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_35*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + Bm3_36*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_37*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_37*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_38*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_38*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_39*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_39*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + Bb2_40*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + Bb3_40*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_21 + A16*Bm3_21) + Bm3_01*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_21 + A16*Bm3_21) + Bm3_02*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_21 + A16*Bm3_21) + Bm3_03*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_21 + A26*Bm3_21) + Bm3_04*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_21 + A26*Bm3_21) + Bm3_05*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_21 + A26*Bm3_21) + Bm3_06*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_21 + B16*Bm3_21) + Bb2_07*(B12*Bm1_21 + B26*Bm3_21) + Bb3_07*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_21 + B16*Bm3_21) + Bb2_08*(B12*Bm1_21 + B26*Bm3_21) + Bb3_08*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_21 + B16*Bm3_21) + Bb2_09*(B12*Bm1_21 + B26*Bm3_21) + Bb3_09*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_21 + B16*Bm3_21) + Bb2_10*(B12*Bm1_21 + B26*Bm3_21) + Bb3_10*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_21 + A16*Bm3_21) + Bm3_11*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_21 + A16*Bm3_21) + Bm3_12*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_21 + A16*Bm3_21) + Bm3_13*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_21 + A26*Bm3_21) + Bm3_14*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_21 + A26*Bm3_21) + Bm3_15*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_21 + A26*Bm3_21) + Bm3_16*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_21 + B16*Bm3_21) + Bb2_17*(B12*Bm1_21 + B26*Bm3_21) + Bb3_17*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_21 + B16*Bm3_21) + Bb2_18*(B12*Bm1_21 + B26*Bm3_21) + Bb3_18*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_21 + B16*Bm3_21) + Bb2_19*(B12*Bm1_21 + B26*Bm3_21) + Bb3_19*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_21 + B16*Bm3_21) + Bb2_20*(B12*Bm1_21 + B26*Bm3_21) + Bb3_20*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_21 + A16*Bm3_21) + Bm3_21*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_21 + A16*Bm3_21) + Bm3_22*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_21 + A16*Bm3_21) + Bm3_23*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_21 + A26*Bm3_21) + Bm3_24*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_21 + A26*Bm3_21) + Bm3_25*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_21 + A26*Bm3_21) + Bm3_26*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_21 + B16*Bm3_21) + Bb2_27*(B12*Bm1_21 + B26*Bm3_21) + Bb3_27*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_21 + B16*Bm3_21) + Bb2_28*(B12*Bm1_21 + B26*Bm3_21) + Bb3_28*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_21 + B16*Bm3_21) + Bb2_29*(B12*Bm1_21 + B26*Bm3_21) + Bb3_29*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_21 + B16*Bm3_21) + Bb2_30*(B12*Bm1_21 + B26*Bm3_21) + Bb3_30*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_21 + A16*Bm3_21) + Bm3_31*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_21 + A16*Bm3_21) + Bm3_32*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_21 + A16*Bm3_21) + Bm3_33*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_21 + A26*Bm3_21) + Bm3_34*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_21 + A26*Bm3_21) + Bm3_35*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_21 + A26*Bm3_21) + Bm3_36*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_21 + B16*Bm3_21) + Bb2_37*(B12*Bm1_21 + B26*Bm3_21) + Bb3_37*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_21 + B16*Bm3_21) + Bb2_38*(B12*Bm1_21 + B26*Bm3_21) + Bb3_38*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_21 + B16*Bm3_21) + Bb2_39*(B12*Bm1_21 + B26*Bm3_21) + Bb3_39*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_21 + B16*Bm3_21) + Bb2_40*(B12*Bm1_21 + B26*Bm3_21) + Bb3_40*(B16*Bm1_21 + B66*Bm3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_22 + A16*Bm3_22) + Bm3_01*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_22 + A16*Bm3_22) + Bm3_02*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_22 + A16*Bm3_22) + Bm3_03*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_22 + A26*Bm3_22) + Bm3_04*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_22 + A26*Bm3_22) + Bm3_05*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_22 + A26*Bm3_22) + Bm3_06*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_22 + B16*Bm3_22) + Bb2_07*(B12*Bm1_22 + B26*Bm3_22) + Bb3_07*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_22 + B16*Bm3_22) + Bb2_08*(B12*Bm1_22 + B26*Bm3_22) + Bb3_08*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_22 + B16*Bm3_22) + Bb2_09*(B12*Bm1_22 + B26*Bm3_22) + Bb3_09*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_22 + B16*Bm3_22) + Bb2_10*(B12*Bm1_22 + B26*Bm3_22) + Bb3_10*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_22 + A16*Bm3_22) + Bm3_11*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_22 + A16*Bm3_22) + Bm3_12*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_22 + A16*Bm3_22) + Bm3_13*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_22 + A26*Bm3_22) + Bm3_14*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_22 + A26*Bm3_22) + Bm3_15*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_22 + A26*Bm3_22) + Bm3_16*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_22 + B16*Bm3_22) + Bb2_17*(B12*Bm1_22 + B26*Bm3_22) + Bb3_17*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_22 + B16*Bm3_22) + Bb2_18*(B12*Bm1_22 + B26*Bm3_22) + Bb3_18*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_22 + B16*Bm3_22) + Bb2_19*(B12*Bm1_22 + B26*Bm3_22) + Bb3_19*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_22 + B16*Bm3_22) + Bb2_20*(B12*Bm1_22 + B26*Bm3_22) + Bb3_20*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_22 + A16*Bm3_22) + Bm3_21*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_22 + A16*Bm3_22) + Bm3_22*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_22 + A16*Bm3_22) + Bm3_23*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_22 + A26*Bm3_22) + Bm3_24*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_22 + A26*Bm3_22) + Bm3_25*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_22 + A26*Bm3_22) + Bm3_26*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_22 + B16*Bm3_22) + Bb2_27*(B12*Bm1_22 + B26*Bm3_22) + Bb3_27*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_22 + B16*Bm3_22) + Bb2_28*(B12*Bm1_22 + B26*Bm3_22) + Bb3_28*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_22 + B16*Bm3_22) + Bb2_29*(B12*Bm1_22 + B26*Bm3_22) + Bb3_29*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_22 + B16*Bm3_22) + Bb2_30*(B12*Bm1_22 + B26*Bm3_22) + Bb3_30*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_22 + A16*Bm3_22) + Bm3_31*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_22 + A16*Bm3_22) + Bm3_32*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_22 + A16*Bm3_22) + Bm3_33*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_22 + A26*Bm3_22) + Bm3_34*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_22 + A26*Bm3_22) + Bm3_35*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_22 + A26*Bm3_22) + Bm3_36*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_22 + B16*Bm3_22) + Bb2_37*(B12*Bm1_22 + B26*Bm3_22) + Bb3_37*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_22 + B16*Bm3_22) + Bb2_38*(B12*Bm1_22 + B26*Bm3_22) + Bb3_38*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_22 + B16*Bm3_22) + Bb2_39*(B12*Bm1_22 + B26*Bm3_22) + Bb3_39*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_22 + B16*Bm3_22) + Bb2_40*(B12*Bm1_22 + B26*Bm3_22) + Bb3_40*(B16*Bm1_22 + B66*Bm3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_23 + A16*Bm3_23) + Bm3_01*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_23 + A16*Bm3_23) + Bm3_02*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_23 + A16*Bm3_23) + Bm3_03*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_23 + A26*Bm3_23) + Bm3_04*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_23 + A26*Bm3_23) + Bm3_05*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_23 + A26*Bm3_23) + Bm3_06*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_23 + B16*Bm3_23) + Bb2_07*(B12*Bm1_23 + B26*Bm3_23) + Bb3_07*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_23 + B16*Bm3_23) + Bb2_08*(B12*Bm1_23 + B26*Bm3_23) + Bb3_08*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_23 + B16*Bm3_23) + Bb2_09*(B12*Bm1_23 + B26*Bm3_23) + Bb3_09*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_23 + B16*Bm3_23) + Bb2_10*(B12*Bm1_23 + B26*Bm3_23) + Bb3_10*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_23 + A16*Bm3_23) + Bm3_11*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_23 + A16*Bm3_23) + Bm3_12*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_23 + A16*Bm3_23) + Bm3_13*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_23 + A26*Bm3_23) + Bm3_14*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_23 + A26*Bm3_23) + Bm3_15*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_23 + A26*Bm3_23) + Bm3_16*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_23 + B16*Bm3_23) + Bb2_17*(B12*Bm1_23 + B26*Bm3_23) + Bb3_17*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_23 + B16*Bm3_23) + Bb2_18*(B12*Bm1_23 + B26*Bm3_23) + Bb3_18*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_23 + B16*Bm3_23) + Bb2_19*(B12*Bm1_23 + B26*Bm3_23) + Bb3_19*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_23 + B16*Bm3_23) + Bb2_20*(B12*Bm1_23 + B26*Bm3_23) + Bb3_20*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_23 + A16*Bm3_23) + Bm3_21*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_23 + A16*Bm3_23) + Bm3_22*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_23 + A16*Bm3_23) + Bm3_23*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_23 + A26*Bm3_23) + Bm3_24*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_23 + A26*Bm3_23) + Bm3_25*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_23 + A26*Bm3_23) + Bm3_26*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_23 + B16*Bm3_23) + Bb2_27*(B12*Bm1_23 + B26*Bm3_23) + Bb3_27*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_23 + B16*Bm3_23) + Bb2_28*(B12*Bm1_23 + B26*Bm3_23) + Bb3_28*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_23 + B16*Bm3_23) + Bb2_29*(B12*Bm1_23 + B26*Bm3_23) + Bb3_29*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_23 + B16*Bm3_23) + Bb2_30*(B12*Bm1_23 + B26*Bm3_23) + Bb3_30*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_23 + A16*Bm3_23) + Bm3_31*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_23 + A16*Bm3_23) + Bm3_32*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_23 + A16*Bm3_23) + Bm3_33*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_23 + A26*Bm3_23) + Bm3_34*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_23 + A26*Bm3_23) + Bm3_35*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_23 + A26*Bm3_23) + Bm3_36*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_23 + B16*Bm3_23) + Bb2_37*(B12*Bm1_23 + B26*Bm3_23) + Bb3_37*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_23 + B16*Bm3_23) + Bb2_38*(B12*Bm1_23 + B26*Bm3_23) + Bb3_38*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_23 + B16*Bm3_23) + Bb2_39*(B12*Bm1_23 + B26*Bm3_23) + Bb3_39*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_23 + B16*Bm3_23) + Bb2_40*(B12*Bm1_23 + B26*Bm3_23) + Bb3_40*(B16*Bm1_23 + B66*Bm3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_24 + A16*Bm3_24) + Bm3_01*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_24 + A16*Bm3_24) + Bm3_02*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_24 + A16*Bm3_24) + Bm3_03*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_24 + A26*Bm3_24) + Bm3_04*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_24 + A26*Bm3_24) + Bm3_05*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_24 + A26*Bm3_24) + Bm3_06*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_24 + B16*Bm3_24) + Bb2_07*(B22*Bm2_24 + B26*Bm3_24) + Bb3_07*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_24 + B16*Bm3_24) + Bb2_08*(B22*Bm2_24 + B26*Bm3_24) + Bb3_08*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_24 + B16*Bm3_24) + Bb2_09*(B22*Bm2_24 + B26*Bm3_24) + Bb3_09*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_24 + B16*Bm3_24) + Bb2_10*(B22*Bm2_24 + B26*Bm3_24) + Bb3_10*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_24 + A16*Bm3_24) + Bm3_11*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_24 + A16*Bm3_24) + Bm3_12*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_24 + A16*Bm3_24) + Bm3_13*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_24 + A26*Bm3_24) + Bm3_14*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_24 + A26*Bm3_24) + Bm3_15*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_24 + A26*Bm3_24) + Bm3_16*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_24 + B16*Bm3_24) + Bb2_17*(B22*Bm2_24 + B26*Bm3_24) + Bb3_17*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_24 + B16*Bm3_24) + Bb2_18*(B22*Bm2_24 + B26*Bm3_24) + Bb3_18*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_24 + B16*Bm3_24) + Bb2_19*(B22*Bm2_24 + B26*Bm3_24) + Bb3_19*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_24 + B16*Bm3_24) + Bb2_20*(B22*Bm2_24 + B26*Bm3_24) + Bb3_20*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_24 + A16*Bm3_24) + Bm3_21*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_24 + A16*Bm3_24) + Bm3_22*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_24 + A16*Bm3_24) + Bm3_23*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_24 + A26*Bm3_24) + Bm3_24*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_24 + A26*Bm3_24) + Bm3_25*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_24 + A26*Bm3_24) + Bm3_26*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_24 + B16*Bm3_24) + Bb2_27*(B22*Bm2_24 + B26*Bm3_24) + Bb3_27*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_24 + B16*Bm3_24) + Bb2_28*(B22*Bm2_24 + B26*Bm3_24) + Bb3_28*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_24 + B16*Bm3_24) + Bb2_29*(B22*Bm2_24 + B26*Bm3_24) + Bb3_29*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_24 + B16*Bm3_24) + Bb2_30*(B22*Bm2_24 + B26*Bm3_24) + Bb3_30*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_24 + A16*Bm3_24) + Bm3_31*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_24 + A16*Bm3_24) + Bm3_32*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_24 + A16*Bm3_24) + Bm3_33*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_24 + A26*Bm3_24) + Bm3_34*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_24 + A26*Bm3_24) + Bm3_35*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_24 + A26*Bm3_24) + Bm3_36*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_24 + B16*Bm3_24) + Bb2_37*(B22*Bm2_24 + B26*Bm3_24) + Bb3_37*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_24 + B16*Bm3_24) + Bb2_38*(B22*Bm2_24 + B26*Bm3_24) + Bb3_38*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_24 + B16*Bm3_24) + Bb2_39*(B22*Bm2_24 + B26*Bm3_24) + Bb3_39*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_24 + B16*Bm3_24) + Bb2_40*(B22*Bm2_24 + B26*Bm3_24) + Bb3_40*(B26*Bm2_24 + B66*Bm3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_25 + A16*Bm3_25) + Bm3_01*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_25 + A16*Bm3_25) + Bm3_02*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_25 + A16*Bm3_25) + Bm3_03*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_25 + A26*Bm3_25) + Bm3_04*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_25 + A26*Bm3_25) + Bm3_05*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_25 + A26*Bm3_25) + Bm3_06*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_25 + B16*Bm3_25) + Bb2_07*(B22*Bm2_25 + B26*Bm3_25) + Bb3_07*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_25 + B16*Bm3_25) + Bb2_08*(B22*Bm2_25 + B26*Bm3_25) + Bb3_08*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_25 + B16*Bm3_25) + Bb2_09*(B22*Bm2_25 + B26*Bm3_25) + Bb3_09*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_25 + B16*Bm3_25) + Bb2_10*(B22*Bm2_25 + B26*Bm3_25) + Bb3_10*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_25 + A16*Bm3_25) + Bm3_11*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_25 + A16*Bm3_25) + Bm3_12*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_25 + A16*Bm3_25) + Bm3_13*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_25 + A26*Bm3_25) + Bm3_14*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_25 + A26*Bm3_25) + Bm3_15*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_25 + A26*Bm3_25) + Bm3_16*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_25 + B16*Bm3_25) + Bb2_17*(B22*Bm2_25 + B26*Bm3_25) + Bb3_17*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_25 + B16*Bm3_25) + Bb2_18*(B22*Bm2_25 + B26*Bm3_25) + Bb3_18*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_25 + B16*Bm3_25) + Bb2_19*(B22*Bm2_25 + B26*Bm3_25) + Bb3_19*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_25 + B16*Bm3_25) + Bb2_20*(B22*Bm2_25 + B26*Bm3_25) + Bb3_20*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_25 + A16*Bm3_25) + Bm3_21*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_25 + A16*Bm3_25) + Bm3_22*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_25 + A16*Bm3_25) + Bm3_23*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_25 + A26*Bm3_25) + Bm3_24*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_25 + A26*Bm3_25) + Bm3_25*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_25 + A26*Bm3_25) + Bm3_26*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_25 + B16*Bm3_25) + Bb2_27*(B22*Bm2_25 + B26*Bm3_25) + Bb3_27*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_25 + B16*Bm3_25) + Bb2_28*(B22*Bm2_25 + B26*Bm3_25) + Bb3_28*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_25 + B16*Bm3_25) + Bb2_29*(B22*Bm2_25 + B26*Bm3_25) + Bb3_29*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_25 + B16*Bm3_25) + Bb2_30*(B22*Bm2_25 + B26*Bm3_25) + Bb3_30*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_25 + A16*Bm3_25) + Bm3_31*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_25 + A16*Bm3_25) + Bm3_32*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_25 + A16*Bm3_25) + Bm3_33*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_25 + A26*Bm3_25) + Bm3_34*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_25 + A26*Bm3_25) + Bm3_35*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_25 + A26*Bm3_25) + Bm3_36*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_25 + B16*Bm3_25) + Bb2_37*(B22*Bm2_25 + B26*Bm3_25) + Bb3_37*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_25 + B16*Bm3_25) + Bb2_38*(B22*Bm2_25 + B26*Bm3_25) + Bb3_38*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_25 + B16*Bm3_25) + Bb2_39*(B22*Bm2_25 + B26*Bm3_25) + Bb3_39*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_25 + B16*Bm3_25) + Bb2_40*(B22*Bm2_25 + B26*Bm3_25) + Bb3_40*(B26*Bm2_25 + B66*Bm3_25))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_26 + A16*Bm3_26) + Bm3_01*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_26 + A16*Bm3_26) + Bm3_02*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_26 + A16*Bm3_26) + Bm3_03*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_26 + A26*Bm3_26) + Bm3_04*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_26 + A26*Bm3_26) + Bm3_05*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_26 + A26*Bm3_26) + Bm3_06*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_26 + B16*Bm3_26) + Bb2_07*(B22*Bm2_26 + B26*Bm3_26) + Bb3_07*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_26 + B16*Bm3_26) + Bb2_08*(B22*Bm2_26 + B26*Bm3_26) + Bb3_08*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_26 + B16*Bm3_26) + Bb2_09*(B22*Bm2_26 + B26*Bm3_26) + Bb3_09*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_26 + B16*Bm3_26) + Bb2_10*(B22*Bm2_26 + B26*Bm3_26) + Bb3_10*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_26 + A16*Bm3_26) + Bm3_11*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_26 + A16*Bm3_26) + Bm3_12*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_26 + A16*Bm3_26) + Bm3_13*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_26 + A26*Bm3_26) + Bm3_14*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_26 + A26*Bm3_26) + Bm3_15*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_26 + A26*Bm3_26) + Bm3_16*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_26 + B16*Bm3_26) + Bb2_17*(B22*Bm2_26 + B26*Bm3_26) + Bb3_17*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_26 + B16*Bm3_26) + Bb2_18*(B22*Bm2_26 + B26*Bm3_26) + Bb3_18*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_26 + B16*Bm3_26) + Bb2_19*(B22*Bm2_26 + B26*Bm3_26) + Bb3_19*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_26 + B16*Bm3_26) + Bb2_20*(B22*Bm2_26 + B26*Bm3_26) + Bb3_20*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_26 + A16*Bm3_26) + Bm3_21*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_26 + A16*Bm3_26) + Bm3_22*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_26 + A16*Bm3_26) + Bm3_23*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_26 + A26*Bm3_26) + Bm3_24*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_26 + A26*Bm3_26) + Bm3_25*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_26 + A26*Bm3_26) + Bm3_26*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_26 + B16*Bm3_26) + Bb2_27*(B22*Bm2_26 + B26*Bm3_26) + Bb3_27*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_26 + B16*Bm3_26) + Bb2_28*(B22*Bm2_26 + B26*Bm3_26) + Bb3_28*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_26 + B16*Bm3_26) + Bb2_29*(B22*Bm2_26 + B26*Bm3_26) + Bb3_29*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_26 + B16*Bm3_26) + Bb2_30*(B22*Bm2_26 + B26*Bm3_26) + Bb3_30*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_26 + A16*Bm3_26) + Bm3_31*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_26 + A16*Bm3_26) + Bm3_32*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_26 + A16*Bm3_26) + Bm3_33*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_26 + A26*Bm3_26) + Bm3_34*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_26 + A26*Bm3_26) + Bm3_35*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_26 + A26*Bm3_26) + Bm3_36*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_26 + B16*Bm3_26) + Bb2_37*(B22*Bm2_26 + B26*Bm3_26) + Bb3_37*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_26 + B16*Bm3_26) + Bb2_38*(B22*Bm2_26 + B26*Bm3_26) + Bb3_38*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_26 + B16*Bm3_26) + Bb2_39*(B22*Bm2_26 + B26*Bm3_26) + Bb3_39*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_26 + B16*Bm3_26) + Bb2_40*(B22*Bm2_26 + B26*Bm3_26) + Bb3_40*(B26*Bm2_26 + B66*Bm3_26))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_01*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_02*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_03*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_04*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_05*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_06*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_07*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_07*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_08*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_08*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_09*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_09*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_10*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_10*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_11*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_12*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_13*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_14*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_15*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_16*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_17*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_17*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_18*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_18*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_19*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_19*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_20*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_20*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_21*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_22*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_23*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_24*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_25*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_26*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_27*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_27*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_28*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_28*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_29*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_29*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_30*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_30*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_31*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_32*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + Bm3_33*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_34*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_35*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + Bm3_36*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_37*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_37*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_38*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_38*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_39*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_39*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + Bb2_40*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + Bb3_40*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_01*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_02*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_03*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_04*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_05*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_06*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_07*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_07*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_08*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_08*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_09*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_09*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_10*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_10*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_11*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_12*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_13*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_14*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_15*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_16*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_17*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_17*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_18*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_18*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_19*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_19*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_20*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_20*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_21*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_22*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_23*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_24*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_25*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_26*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_27*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_27*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_28*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_28*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_29*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_29*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_30*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_30*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_31*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_32*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + Bm3_33*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_34*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_35*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + Bm3_36*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_37*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_37*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_38*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_38*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_39*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_39*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + Bb2_40*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + Bb3_40*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_01*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_02*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_03*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_04*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_05*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_06*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_07*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_07*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_08*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_08*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_09*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_09*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_10*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_10*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_11*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_12*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_13*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_14*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_15*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_16*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_17*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_17*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_18*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_18*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_19*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_19*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_20*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_20*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_21*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_22*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_23*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_24*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_25*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_26*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_27*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_27*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_28*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_28*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_29*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_29*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_30*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_30*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_31*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_32*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + Bm3_33*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_34*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_35*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + Bm3_36*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_37*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_37*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_38*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_38*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_39*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_39*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + Bb2_40*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + Bb3_40*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_01*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_02*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_03*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_04*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_05*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_06*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_07*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_07*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_08*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_08*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_09*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_09*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_10*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_10*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_11*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_12*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_13*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_14*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_15*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_16*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_17*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_17*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_18*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_18*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_19*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_19*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_20*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_20*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_21*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_22*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_23*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_24*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_25*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_26*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_27*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_27*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_28*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_28*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_29*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_29*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_30*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_30*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_31*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_32*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + Bm3_33*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_34*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_35*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + Bm3_36*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_37*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_37*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_38*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_38*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_39*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_39*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + Bb2_40*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + Bb3_40*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_31 + A16*Bm3_31) + Bm3_01*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_31 + A16*Bm3_31) + Bm3_02*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_31 + A16*Bm3_31) + Bm3_03*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_31 + A26*Bm3_31) + Bm3_04*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_31 + A26*Bm3_31) + Bm3_05*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_31 + A26*Bm3_31) + Bm3_06*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_31 + B16*Bm3_31) + Bb2_07*(B12*Bm1_31 + B26*Bm3_31) + Bb3_07*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_31 + B16*Bm3_31) + Bb2_08*(B12*Bm1_31 + B26*Bm3_31) + Bb3_08*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_31 + B16*Bm3_31) + Bb2_09*(B12*Bm1_31 + B26*Bm3_31) + Bb3_09*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_31 + B16*Bm3_31) + Bb2_10*(B12*Bm1_31 + B26*Bm3_31) + Bb3_10*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_31 + A16*Bm3_31) + Bm3_11*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_31 + A16*Bm3_31) + Bm3_12*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_31 + A16*Bm3_31) + Bm3_13*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_31 + A26*Bm3_31) + Bm3_14*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_31 + A26*Bm3_31) + Bm3_15*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_31 + A26*Bm3_31) + Bm3_16*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_31 + B16*Bm3_31) + Bb2_17*(B12*Bm1_31 + B26*Bm3_31) + Bb3_17*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_31 + B16*Bm3_31) + Bb2_18*(B12*Bm1_31 + B26*Bm3_31) + Bb3_18*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_31 + B16*Bm3_31) + Bb2_19*(B12*Bm1_31 + B26*Bm3_31) + Bb3_19*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_31 + B16*Bm3_31) + Bb2_20*(B12*Bm1_31 + B26*Bm3_31) + Bb3_20*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_31 + A16*Bm3_31) + Bm3_21*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_31 + A16*Bm3_31) + Bm3_22*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_31 + A16*Bm3_31) + Bm3_23*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_31 + A26*Bm3_31) + Bm3_24*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_31 + A26*Bm3_31) + Bm3_25*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_31 + A26*Bm3_31) + Bm3_26*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_31 + B16*Bm3_31) + Bb2_27*(B12*Bm1_31 + B26*Bm3_31) + Bb3_27*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_31 + B16*Bm3_31) + Bb2_28*(B12*Bm1_31 + B26*Bm3_31) + Bb3_28*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_31 + B16*Bm3_31) + Bb2_29*(B12*Bm1_31 + B26*Bm3_31) + Bb3_29*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_31 + B16*Bm3_31) + Bb2_30*(B12*Bm1_31 + B26*Bm3_31) + Bb3_30*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_31 + A16*Bm3_31) + Bm3_31*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_31 + A16*Bm3_31) + Bm3_32*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_31 + A16*Bm3_31) + Bm3_33*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_31 + A26*Bm3_31) + Bm3_34*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_31 + A26*Bm3_31) + Bm3_35*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_31 + A26*Bm3_31) + Bm3_36*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_31 + B16*Bm3_31) + Bb2_37*(B12*Bm1_31 + B26*Bm3_31) + Bb3_37*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_31 + B16*Bm3_31) + Bb2_38*(B12*Bm1_31 + B26*Bm3_31) + Bb3_38*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_31 + B16*Bm3_31) + Bb2_39*(B12*Bm1_31 + B26*Bm3_31) + Bb3_39*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_31 + B16*Bm3_31) + Bb2_40*(B12*Bm1_31 + B26*Bm3_31) + Bb3_40*(B16*Bm1_31 + B66*Bm3_31))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_32 + A16*Bm3_32) + Bm3_01*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_32 + A16*Bm3_32) + Bm3_02*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_32 + A16*Bm3_32) + Bm3_03*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_32 + A26*Bm3_32) + Bm3_04*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_32 + A26*Bm3_32) + Bm3_05*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_32 + A26*Bm3_32) + Bm3_06*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_32 + B16*Bm3_32) + Bb2_07*(B12*Bm1_32 + B26*Bm3_32) + Bb3_07*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_32 + B16*Bm3_32) + Bb2_08*(B12*Bm1_32 + B26*Bm3_32) + Bb3_08*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_32 + B16*Bm3_32) + Bb2_09*(B12*Bm1_32 + B26*Bm3_32) + Bb3_09*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_32 + B16*Bm3_32) + Bb2_10*(B12*Bm1_32 + B26*Bm3_32) + Bb3_10*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_32 + A16*Bm3_32) + Bm3_11*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_32 + A16*Bm3_32) + Bm3_12*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_32 + A16*Bm3_32) + Bm3_13*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_32 + A26*Bm3_32) + Bm3_14*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_32 + A26*Bm3_32) + Bm3_15*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_32 + A26*Bm3_32) + Bm3_16*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_32 + B16*Bm3_32) + Bb2_17*(B12*Bm1_32 + B26*Bm3_32) + Bb3_17*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_32 + B16*Bm3_32) + Bb2_18*(B12*Bm1_32 + B26*Bm3_32) + Bb3_18*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_32 + B16*Bm3_32) + Bb2_19*(B12*Bm1_32 + B26*Bm3_32) + Bb3_19*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_32 + B16*Bm3_32) + Bb2_20*(B12*Bm1_32 + B26*Bm3_32) + Bb3_20*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_32 + A16*Bm3_32) + Bm3_21*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_32 + A16*Bm3_32) + Bm3_22*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_32 + A16*Bm3_32) + Bm3_23*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_32 + A26*Bm3_32) + Bm3_24*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_32 + A26*Bm3_32) + Bm3_25*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_32 + A26*Bm3_32) + Bm3_26*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_32 + B16*Bm3_32) + Bb2_27*(B12*Bm1_32 + B26*Bm3_32) + Bb3_27*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_32 + B16*Bm3_32) + Bb2_28*(B12*Bm1_32 + B26*Bm3_32) + Bb3_28*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_32 + B16*Bm3_32) + Bb2_29*(B12*Bm1_32 + B26*Bm3_32) + Bb3_29*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_32 + B16*Bm3_32) + Bb2_30*(B12*Bm1_32 + B26*Bm3_32) + Bb3_30*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_32 + A16*Bm3_32) + Bm3_31*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_32 + A16*Bm3_32) + Bm3_32*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_32 + A16*Bm3_32) + Bm3_33*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_32 + A26*Bm3_32) + Bm3_34*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_32 + A26*Bm3_32) + Bm3_35*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_32 + A26*Bm3_32) + Bm3_36*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_32 + B16*Bm3_32) + Bb2_37*(B12*Bm1_32 + B26*Bm3_32) + Bb3_37*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_32 + B16*Bm3_32) + Bb2_38*(B12*Bm1_32 + B26*Bm3_32) + Bb3_38*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_32 + B16*Bm3_32) + Bb2_39*(B12*Bm1_32 + B26*Bm3_32) + Bb3_39*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_32 + B16*Bm3_32) + Bb2_40*(B12*Bm1_32 + B26*Bm3_32) + Bb3_40*(B16*Bm1_32 + B66*Bm3_32))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_33 + A16*Bm3_33) + Bm3_01*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*Bm1_33 + A16*Bm3_33) + Bm3_02*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*Bm1_33 + A16*Bm3_33) + Bm3_03*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*Bm1_33 + A26*Bm3_33) + Bm3_04*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*Bm1_33 + A26*Bm3_33) + Bm3_05*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*Bm1_33 + A26*Bm3_33) + Bm3_06*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*Bm1_33 + B16*Bm3_33) + Bb2_07*(B12*Bm1_33 + B26*Bm3_33) + Bb3_07*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*Bm1_33 + B16*Bm3_33) + Bb2_08*(B12*Bm1_33 + B26*Bm3_33) + Bb3_08*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_33 + B16*Bm3_33) + Bb2_09*(B12*Bm1_33 + B26*Bm3_33) + Bb3_09*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_33 + B16*Bm3_33) + Bb2_10*(B12*Bm1_33 + B26*Bm3_33) + Bb3_10*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*Bm1_33 + A16*Bm3_33) + Bm3_11*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*Bm1_33 + A16*Bm3_33) + Bm3_12*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_33 + A16*Bm3_33) + Bm3_13*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_33 + A26*Bm3_33) + Bm3_14*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*Bm1_33 + A26*Bm3_33) + Bm3_15*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*Bm1_33 + A26*Bm3_33) + Bm3_16*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_33 + B16*Bm3_33) + Bb2_17*(B12*Bm1_33 + B26*Bm3_33) + Bb3_17*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_33 + B16*Bm3_33) + Bb2_18*(B12*Bm1_33 + B26*Bm3_33) + Bb3_18*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*Bm1_33 + B16*Bm3_33) + Bb2_19*(B12*Bm1_33 + B26*Bm3_33) + Bb3_19*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*Bm1_33 + B16*Bm3_33) + Bb2_20*(B12*Bm1_33 + B26*Bm3_33) + Bb3_20*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*Bm1_33 + A16*Bm3_33) + Bm3_21*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*Bm1_33 + A16*Bm3_33) + Bm3_22*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*Bm1_33 + A16*Bm3_33) + Bm3_23*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*Bm1_33 + A26*Bm3_33) + Bm3_24*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*Bm1_33 + A26*Bm3_33) + Bm3_25*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*Bm1_33 + A26*Bm3_33) + Bm3_26*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*Bm1_33 + B16*Bm3_33) + Bb2_27*(B12*Bm1_33 + B26*Bm3_33) + Bb3_27*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*Bm1_33 + B16*Bm3_33) + Bb2_28*(B12*Bm1_33 + B26*Bm3_33) + Bb3_28*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*Bm1_33 + B16*Bm3_33) + Bb2_29*(B12*Bm1_33 + B26*Bm3_33) + Bb3_29*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*Bm1_33 + B16*Bm3_33) + Bb2_30*(B12*Bm1_33 + B26*Bm3_33) + Bb3_30*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*Bm1_33 + A16*Bm3_33) + Bm3_31*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*Bm1_33 + A16*Bm3_33) + Bm3_32*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*Bm1_33 + A16*Bm3_33) + Bm3_33*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*Bm1_33 + A26*Bm3_33) + Bm3_34*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*Bm1_33 + A26*Bm3_33) + Bm3_35*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*Bm1_33 + A26*Bm3_33) + Bm3_36*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*Bm1_33 + B16*Bm3_33) + Bb2_37*(B12*Bm1_33 + B26*Bm3_33) + Bb3_37*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*Bm1_33 + B16*Bm3_33) + Bb2_38*(B12*Bm1_33 + B26*Bm3_33) + Bb3_38*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*Bm1_33 + B16*Bm3_33) + Bb2_39*(B12*Bm1_33 + B26*Bm3_33) + Bb3_39*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*Bm1_33 + B16*Bm3_33) + Bb2_40*(B12*Bm1_33 + B26*Bm3_33) + Bb3_40*(B16*Bm1_33 + B66*Bm3_33))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_34 + A16*Bm3_34) + Bm3_01*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_34 + A16*Bm3_34) + Bm3_02*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_34 + A16*Bm3_34) + Bm3_03*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_34 + A26*Bm3_34) + Bm3_04*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_34 + A26*Bm3_34) + Bm3_05*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_34 + A26*Bm3_34) + Bm3_06*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_34 + B16*Bm3_34) + Bb2_07*(B22*Bm2_34 + B26*Bm3_34) + Bb3_07*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_34 + B16*Bm3_34) + Bb2_08*(B22*Bm2_34 + B26*Bm3_34) + Bb3_08*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_34 + B16*Bm3_34) + Bb2_09*(B22*Bm2_34 + B26*Bm3_34) + Bb3_09*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_34 + B16*Bm3_34) + Bb2_10*(B22*Bm2_34 + B26*Bm3_34) + Bb3_10*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_34 + A16*Bm3_34) + Bm3_11*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_34 + A16*Bm3_34) + Bm3_12*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_34 + A16*Bm3_34) + Bm3_13*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_34 + A26*Bm3_34) + Bm3_14*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_34 + A26*Bm3_34) + Bm3_15*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_34 + A26*Bm3_34) + Bm3_16*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_34 + B16*Bm3_34) + Bb2_17*(B22*Bm2_34 + B26*Bm3_34) + Bb3_17*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_34 + B16*Bm3_34) + Bb2_18*(B22*Bm2_34 + B26*Bm3_34) + Bb3_18*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_34 + B16*Bm3_34) + Bb2_19*(B22*Bm2_34 + B26*Bm3_34) + Bb3_19*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_34 + B16*Bm3_34) + Bb2_20*(B22*Bm2_34 + B26*Bm3_34) + Bb3_20*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_34 + A16*Bm3_34) + Bm3_21*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_34 + A16*Bm3_34) + Bm3_22*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_34 + A16*Bm3_34) + Bm3_23*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_34 + A26*Bm3_34) + Bm3_24*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_34 + A26*Bm3_34) + Bm3_25*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_34 + A26*Bm3_34) + Bm3_26*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_34 + B16*Bm3_34) + Bb2_27*(B22*Bm2_34 + B26*Bm3_34) + Bb3_27*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_34 + B16*Bm3_34) + Bb2_28*(B22*Bm2_34 + B26*Bm3_34) + Bb3_28*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_34 + B16*Bm3_34) + Bb2_29*(B22*Bm2_34 + B26*Bm3_34) + Bb3_29*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_34 + B16*Bm3_34) + Bb2_30*(B22*Bm2_34 + B26*Bm3_34) + Bb3_30*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_34 + A16*Bm3_34) + Bm3_31*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_34 + A16*Bm3_34) + Bm3_32*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_34 + A16*Bm3_34) + Bm3_33*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_34 + A26*Bm3_34) + Bm3_34*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_34 + A26*Bm3_34) + Bm3_35*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_34 + A26*Bm3_34) + Bm3_36*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_34 + B16*Bm3_34) + Bb2_37*(B22*Bm2_34 + B26*Bm3_34) + Bb3_37*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_34 + B16*Bm3_34) + Bb2_38*(B22*Bm2_34 + B26*Bm3_34) + Bb3_38*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_34 + B16*Bm3_34) + Bb2_39*(B22*Bm2_34 + B26*Bm3_34) + Bb3_39*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_34 + B16*Bm3_34) + Bb2_40*(B22*Bm2_34 + B26*Bm3_34) + Bb3_40*(B26*Bm2_34 + B66*Bm3_34))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_35 + A16*Bm3_35) + Bm3_01*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_35 + A16*Bm3_35) + Bm3_02*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_35 + A16*Bm3_35) + Bm3_03*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_35 + A26*Bm3_35) + Bm3_04*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_35 + A26*Bm3_35) + Bm3_05*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_35 + A26*Bm3_35) + Bm3_06*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_35 + B16*Bm3_35) + Bb2_07*(B22*Bm2_35 + B26*Bm3_35) + Bb3_07*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_35 + B16*Bm3_35) + Bb2_08*(B22*Bm2_35 + B26*Bm3_35) + Bb3_08*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_35 + B16*Bm3_35) + Bb2_09*(B22*Bm2_35 + B26*Bm3_35) + Bb3_09*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_35 + B16*Bm3_35) + Bb2_10*(B22*Bm2_35 + B26*Bm3_35) + Bb3_10*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_35 + A16*Bm3_35) + Bm3_11*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_35 + A16*Bm3_35) + Bm3_12*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_35 + A16*Bm3_35) + Bm3_13*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_35 + A26*Bm3_35) + Bm3_14*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_35 + A26*Bm3_35) + Bm3_15*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_35 + A26*Bm3_35) + Bm3_16*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_35 + B16*Bm3_35) + Bb2_17*(B22*Bm2_35 + B26*Bm3_35) + Bb3_17*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_35 + B16*Bm3_35) + Bb2_18*(B22*Bm2_35 + B26*Bm3_35) + Bb3_18*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_35 + B16*Bm3_35) + Bb2_19*(B22*Bm2_35 + B26*Bm3_35) + Bb3_19*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_35 + B16*Bm3_35) + Bb2_20*(B22*Bm2_35 + B26*Bm3_35) + Bb3_20*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_35 + A16*Bm3_35) + Bm3_21*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_35 + A16*Bm3_35) + Bm3_22*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_35 + A16*Bm3_35) + Bm3_23*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_35 + A26*Bm3_35) + Bm3_24*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_35 + A26*Bm3_35) + Bm3_25*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_35 + A26*Bm3_35) + Bm3_26*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_35 + B16*Bm3_35) + Bb2_27*(B22*Bm2_35 + B26*Bm3_35) + Bb3_27*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_35 + B16*Bm3_35) + Bb2_28*(B22*Bm2_35 + B26*Bm3_35) + Bb3_28*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_35 + B16*Bm3_35) + Bb2_29*(B22*Bm2_35 + B26*Bm3_35) + Bb3_29*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_35 + B16*Bm3_35) + Bb2_30*(B22*Bm2_35 + B26*Bm3_35) + Bb3_30*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_35 + A16*Bm3_35) + Bm3_31*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_35 + A16*Bm3_35) + Bm3_32*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_35 + A16*Bm3_35) + Bm3_33*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_35 + A26*Bm3_35) + Bm3_34*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_35 + A26*Bm3_35) + Bm3_35*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_35 + A26*Bm3_35) + Bm3_36*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_35 + B16*Bm3_35) + Bb2_37*(B22*Bm2_35 + B26*Bm3_35) + Bb3_37*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_35 + B16*Bm3_35) + Bb2_38*(B22*Bm2_35 + B26*Bm3_35) + Bb3_38*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_35 + B16*Bm3_35) + Bb2_39*(B22*Bm2_35 + B26*Bm3_35) + Bb3_39*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_35 + B16*Bm3_35) + Bb2_40*(B22*Bm2_35 + B26*Bm3_35) + Bb3_40*(B26*Bm2_35 + B66*Bm3_35))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_36 + A16*Bm3_36) + Bm3_01*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(A12*Bm2_36 + A16*Bm3_36) + Bm3_02*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(A12*Bm2_36 + A16*Bm3_36) + Bm3_03*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(A22*Bm2_36 + A26*Bm3_36) + Bm3_04*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(A22*Bm2_36 + A26*Bm3_36) + Bm3_05*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(A22*Bm2_36 + A26*Bm3_36) + Bm3_06*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(B12*Bm2_36 + B16*Bm3_36) + Bb2_07*(B22*Bm2_36 + B26*Bm3_36) + Bb3_07*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(B12*Bm2_36 + B16*Bm3_36) + Bb2_08*(B22*Bm2_36 + B26*Bm3_36) + Bb3_08*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_36 + B16*Bm3_36) + Bb2_09*(B22*Bm2_36 + B26*Bm3_36) + Bb3_09*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_36 + B16*Bm3_36) + Bb2_10*(B22*Bm2_36 + B26*Bm3_36) + Bb3_10*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(A12*Bm2_36 + A16*Bm3_36) + Bm3_11*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(A12*Bm2_36 + A16*Bm3_36) + Bm3_12*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_36 + A16*Bm3_36) + Bm3_13*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_36 + A26*Bm3_36) + Bm3_14*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(A22*Bm2_36 + A26*Bm3_36) + Bm3_15*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(A22*Bm2_36 + A26*Bm3_36) + Bm3_16*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_36 + B16*Bm3_36) + Bb2_17*(B22*Bm2_36 + B26*Bm3_36) + Bb3_17*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_36 + B16*Bm3_36) + Bb2_18*(B22*Bm2_36 + B26*Bm3_36) + Bb3_18*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(B12*Bm2_36 + B16*Bm3_36) + Bb2_19*(B22*Bm2_36 + B26*Bm3_36) + Bb3_19*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(B12*Bm2_36 + B16*Bm3_36) + Bb2_20*(B22*Bm2_36 + B26*Bm3_36) + Bb3_20*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(A12*Bm2_36 + A16*Bm3_36) + Bm3_21*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(A12*Bm2_36 + A16*Bm3_36) + Bm3_22*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(A12*Bm2_36 + A16*Bm3_36) + Bm3_23*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(A22*Bm2_36 + A26*Bm3_36) + Bm3_24*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(A22*Bm2_36 + A26*Bm3_36) + Bm3_25*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(A22*Bm2_36 + A26*Bm3_36) + Bm3_26*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(B12*Bm2_36 + B16*Bm3_36) + Bb2_27*(B22*Bm2_36 + B26*Bm3_36) + Bb3_27*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(B12*Bm2_36 + B16*Bm3_36) + Bb2_28*(B22*Bm2_36 + B26*Bm3_36) + Bb3_28*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(B12*Bm2_36 + B16*Bm3_36) + Bb2_29*(B22*Bm2_36 + B26*Bm3_36) + Bb3_29*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(B12*Bm2_36 + B16*Bm3_36) + Bb2_30*(B22*Bm2_36 + B26*Bm3_36) + Bb3_30*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(A12*Bm2_36 + A16*Bm3_36) + Bm3_31*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(A12*Bm2_36 + A16*Bm3_36) + Bm3_32*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(A12*Bm2_36 + A16*Bm3_36) + Bm3_33*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(A22*Bm2_36 + A26*Bm3_36) + Bm3_34*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(A22*Bm2_36 + A26*Bm3_36) + Bm3_35*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(A22*Bm2_36 + A26*Bm3_36) + Bm3_36*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(B12*Bm2_36 + B16*Bm3_36) + Bb2_37*(B22*Bm2_36 + B26*Bm3_36) + Bb3_37*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(B12*Bm2_36 + B16*Bm3_36) + Bb2_38*(B22*Bm2_36 + B26*Bm3_36) + Bb3_38*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(B12*Bm2_36 + B16*Bm3_36) + Bb2_39*(B22*Bm2_36 + B26*Bm3_36) + Bb3_39*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(B12*Bm2_36 + B16*Bm3_36) + Bb2_40*(B22*Bm2_36 + B26*Bm3_36) + Bb3_40*(B26*Bm2_36 + B66*Bm3_36))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_01*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_02*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_03*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_04*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_05*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_06*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_07*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_07*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_08*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_08*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_09*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_09*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_10*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_10*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_11*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_12*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_13*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_14*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_15*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_16*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_17*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_17*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_18*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_18*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_19*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_19*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_20*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_20*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_21*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_22*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_23*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_24*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_25*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_26*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_27*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_27*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_28*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_28*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_29*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_29*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_30*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_30*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_31*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_32*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + Bm3_33*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_34*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_35*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + Bm3_36*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_37*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_37*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_38*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_38*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_39*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_39*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + Bb2_40*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + Bb3_40*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_01*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_02*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_03*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_04*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_05*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_06*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_07*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_07*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_08*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_08*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_09*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_09*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_10*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_10*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_11*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_12*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_13*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_14*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_15*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_16*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_17*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_17*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_18*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_18*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_19*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_19*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_20*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_20*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_21*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_22*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_23*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_24*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_25*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_26*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_27*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_27*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_28*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_28*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_29*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_29*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_30*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_30*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_31*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_32*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + Bm3_33*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_34*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_35*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + Bm3_36*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_37*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_37*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_38*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_38*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_39*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_39*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + Bb2_40*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + Bb3_40*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_01*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_02*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_03*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_04*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_05*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_06*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_07*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_07*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_08*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_08*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_09*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_09*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_10*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_10*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_11*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_12*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_13*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_14*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_15*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_16*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_17*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_17*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_18*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_18*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_19*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_19*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_20*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_20*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_21*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_22*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_23*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_24*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_25*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_26*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_27*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_27*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_28*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_28*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_29*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_29*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_30*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_30*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_31*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_32*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + Bm3_33*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_34*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_35*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + Bm3_36*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_37*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_37*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_38*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_38*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_39*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_39*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + Bb2_40*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + Bb3_40*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_01*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_02*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_02*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_03*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_03*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_04*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_04*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_05*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_05*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_06*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_06*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_07*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_07*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_07*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_08*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_08*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_08*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_09*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_09*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_10*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_10*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_11*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_11*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_12*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_12*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_13*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_14*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_15*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_15*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_16*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_16*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_17*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_17*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_18*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_18*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_19*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_19*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_19*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_20*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_20*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_20*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_21*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_21*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_22*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_22*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_23*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_23*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_24*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_24*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_25*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_25*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_26*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_26*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_27*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_27*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_27*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_28*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_28*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_28*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_29*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_29*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_29*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_30*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_30*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_30*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_31*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_31*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_32*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_32*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_33*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + Bm3_33*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_34*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_34*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_35*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_35*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_36*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + Bm3_36*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_37*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_37*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_37*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_38*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_38*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_38*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_39*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_39*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_39*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_40*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + Bb2_40*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + Bb3_40*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66))


cpdef void update_KCNL(double [::1] u,
                       BFSCPlate2D plate,
                       double [::1] points,
                       double [::1] weights,
                       long [::1] KCNLr,
                       long [::1] KCNLc,
                       double [::1] KCNLv,
                       ):
    """Update sparse vectors for nonlinear constitutive stiffness matrix KCNL

    Assuming that KCNL = KC0L + KCL0 + KCLL

    Properties
    ----------
    u : np.array
        Global displacement vector
    plate : `.BFSCPlate2D` object
        The plate element being added to K
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KCNLr : np.array
        Array to store row positions of sparse values
    KCNLc : np.array
        Array to store column positions of sparse values
    KCNLv : np.array
        Array to store sparse values

    """
    cdef double *ue
    cdef int c1, c2, c3, c4, nint, i, j, k
    cdef double Bm1_01, Bm1_02, Bm1_03, Bm1_11, Bm1_12, Bm1_13, Bm1_21, Bm1_22, Bm1_23, Bm1_31, Bm1_32, Bm1_33, Bm2_04, Bm2_05, Bm2_06, Bm2_14, Bm2_15, Bm2_16, Bm2_24, Bm2_25, Bm2_26, Bm2_34, Bm2_35, Bm2_36, Bm3_01, Bm3_02, Bm3_03, Bm3_04, Bm3_05, Bm3_06, Bm3_11, Bm3_12, Bm3_13, Bm3_14, Bm3_15, Bm3_16, Bm3_21, Bm3_22, Bm3_23, Bm3_24, Bm3_25, Bm3_26, Bm3_31, Bm3_32, Bm3_33, Bm3_34, Bm3_35, Bm3_36
    cdef double BmL1_07, BmL1_08, BmL1_09, BmL1_10, BmL1_17, BmL1_18, BmL1_19, BmL1_20, BmL1_27, BmL1_28, BmL1_29, BmL1_30, BmL1_37, BmL1_38, BmL1_39, BmL1_40, BmL2_07, BmL2_08, BmL2_09, BmL2_10, BmL2_17, BmL2_18, BmL2_19, BmL2_20, BmL2_27, BmL2_28, BmL2_29, BmL2_30, BmL2_37, BmL2_38, BmL2_39, BmL2_40, BmL3_07, BmL3_08, BmL3_09, BmL3_10, BmL3_17, BmL3_18, BmL3_19, BmL3_20, BmL3_27, BmL3_28, BmL3_29, BmL3_30, BmL3_37, BmL3_38, BmL3_39, BmL3_40
    cdef double Bb1_07, Bb1_08, Bb1_09, Bb1_10, Bb1_17, Bb1_18, Bb1_19, Bb1_20, Bb1_27, Bb1_28, Bb1_29, Bb1_30, Bb1_37, Bb1_38, Bb1_39, Bb1_40, Bb2_07, Bb2_08, Bb2_09, Bb2_10, Bb2_17, Bb2_18, Bb2_19, Bb2_20, Bb2_27, Bb2_28, Bb2_29, Bb2_30, Bb2_37, Bb2_38, Bb2_39, Bb2_40, Bb3_07, Bb3_08, Bb3_09, Bb3_10, Bb3_17, Bb3_18, Bb3_19, Bb3_20, Bb3_27, Bb3_28, Bb3_29, Bb3_30, Bb3_37, Bb3_38, Bb3_39, Bb3_40
    cdef double lex, ley, w_x, w_y
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66

    with nogil:
        lex = plate.lex
        ley = plate.ley

        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        for i in range(DOF):
            plate.u[0*DOF + i] = u[c1 + i]
        for i in range(DOF):
            plate.u[1*DOF + i] = u[c2 + i]
        for i in range(DOF):
            plate.u[2*DOF + i] = u[c3 + i]
        for i in range(DOF):
            plate.u[3*DOF + i] = u[c4 + i]

        ue = &plate.u[0]

        nint = points.shape[0]

        k = plate.init_k_KCNL
        KCNLr[k] = 0+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 0+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 1+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 2+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 3+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 4+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 5+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 6+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 7+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 8+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 9+c1
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 0+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 1+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 2+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 3+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 4+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 5+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 6+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 7+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 8+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 9+c2
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 0+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 1+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 2+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 3+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 4+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 5+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 6+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 7+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 8+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 9+c3
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 0+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 1+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 2+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 3+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 4+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 5+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 6+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 7+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 8+c4
        KCNLc[k] = 9+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 0+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 1+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 2+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 3+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 4+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 5+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 6+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 7+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 8+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 9+c1
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 0+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 1+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 2+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 3+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 4+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 5+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 6+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 7+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 8+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 9+c2
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 0+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 1+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 2+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 3+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 4+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 5+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 6+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 7+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 8+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 9+c3
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 0+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 1+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 2+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 3+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 4+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 5+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 6+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 7+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 8+c4
        k += 1
        KCNLr[k] = 9+c4
        KCNLc[k] = 9+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                w_x = 2*(lex*ley*ue[19]*(eta - 1)**2*(eta + 1)*(0.046875*xi - 0.015625)*(xi + 1) + lex*ley*ue[29]*(eta - 1)*(eta + 1)**2*(0.046875*xi - 0.015625)*(xi + 1) + lex*ley*ue[39]*(eta - 1)*(eta + 1)**2*(0.046875*xi + 0.015625)*(xi - 1) + lex*ley*ue[9]*(eta - 1)**2*(eta + 1)*(0.046875*xi + 0.015625)*(xi - 1) + lex*ue[17]*(eta - 1)**2*(eta + 2)*(0.09375*xi - 0.03125)*(xi + 1) - lex*ue[27]*(eta - 2)*(eta + 1)**2*(0.09375*xi - 0.03125)*(xi + 1) - lex*ue[37]*(eta - 2)*(eta + 1)**2*(0.09375*xi + 0.03125)*(xi - 1) + lex*ue[7]*(eta - 1)**2*(eta + 2)*(0.09375*xi + 0.03125)*(xi - 1) - 0.09375*ley*ue[18]*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1) - 0.09375*ley*ue[28]*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1) + 0.09375*ley*ue[38]*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1) + 0.09375*ley*ue[8]*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1) - ue[16]*(eta - 1)**2*(xi + 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2)) + ue[26]*(eta + 1)**2*(xi + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2)) - ue[36]*(eta + 1)**2*(xi - 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2)) + ue[6]*(eta - 1)**2*(xi - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2)))/lex
                w_y = 2*(lex*ley*ue[19]*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)*(xi + 1)**2 + lex*ley*ue[29]*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)*(xi + 1)**2 + lex*ley*ue[39]*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)**2*(xi + 1) + lex*ley*ue[9]*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)**2*(xi + 1) + 0.09375*lex*ue[17]*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2 - 0.09375*lex*ue[27]*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2 - 0.09375*lex*ue[37]*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1) + 0.09375*lex*ue[7]*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1) - ley*ue[18]*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 2)*(xi + 1)**2 - ley*ue[28]*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 2)*(xi + 1)**2 + ley*ue[38]*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 1)**2*(xi + 2) + ley*ue[8]*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 1)**2*(xi + 2) - ue[16]*(eta - 1)*(xi + 1)**2*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2)) + ue[26]*(eta + 1)*(xi + 1)**2*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125)) - ue[36]*(eta + 1)*(xi - 1)**2*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125)) + ue[6]*(eta - 1)*(xi - 1)**2*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2)))/ley

                Bm1_01 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm1_02 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_03 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm1_11 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm1_12 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm1_13 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm1_21 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm1_22 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm1_23 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm1_31 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm1_32 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_33 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                Bm2_04 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm2_05 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_06 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm2_14 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm2_15 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_16 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm2_24 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm2_25 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_26 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm2_34 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm2_35 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_36 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_01 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm3_02 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_03 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm3_04 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm3_05 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_06 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm3_11 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm3_12 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_13 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm3_14 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm3_15 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm3_16 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm3_21 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm3_22 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_23 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm3_24 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm3_25 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm3_26 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm3_31 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm3_32 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_33 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_34 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm3_35 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_36 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex

                BmL1_07 = 2*w_x*(eta - 1)**2*(xi - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2))/lex
                BmL1_08 = 2*w_x*(eta - 1)**2*(eta + 2)*(0.09375*xi + 0.03125)*(xi - 1)
                BmL1_09 = 0.1875*ley*w_x*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                BmL1_10 = 2*ley*w_x*(eta - 1)**2*(eta + 1)*(0.046875*xi + 0.015625)*(xi - 1)
                BmL1_17 = -2*w_x*(eta - 1)**2*(xi + 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2))/lex
                BmL1_18 = 2*w_x*(eta - 1)**2*(eta + 2)*(0.09375*xi - 0.03125)*(xi + 1)
                BmL1_19 = -0.1875*ley*w_x*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                BmL1_20 = 2*ley*w_x*(eta - 1)**2*(eta + 1)*(0.046875*xi - 0.015625)*(xi + 1)
                BmL1_27 = 2*w_x*(eta + 1)**2*(xi + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2))/lex
                BmL1_28 = -2*w_x*(eta - 2)*(eta + 1)**2*(0.09375*xi - 0.03125)*(xi + 1)
                BmL1_29 = -0.1875*ley*w_x*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                BmL1_30 = 2*ley*w_x*(eta - 1)*(eta + 1)**2*(0.046875*xi - 0.015625)*(xi + 1)
                BmL1_37 = -2*w_x*(eta + 1)**2*(xi - 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2))/lex
                BmL1_38 = -2*w_x*(eta - 2)*(eta + 1)**2*(0.09375*xi + 0.03125)*(xi - 1)
                BmL1_39 = 0.1875*ley*w_x*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                BmL1_40 = 2*ley*w_x*(eta - 1)*(eta + 1)**2*(0.046875*xi + 0.015625)*(xi - 1)
                BmL2_07 = 2*w_y*(eta - 1)*(xi - 1)**2*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2))/ley
                BmL2_08 = 0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                BmL2_09 = 2*w_y*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 1)**2*(xi + 2)
                BmL2_10 = 2*lex*w_y*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)**2*(xi + 1)
                BmL2_17 = -2*w_y*(eta - 1)*(xi + 1)**2*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2))/ley
                BmL2_18 = 0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                BmL2_19 = -2*w_y*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 2)*(xi + 1)**2
                BmL2_20 = 2*lex*w_y*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)*(xi + 1)**2
                BmL2_27 = 2*w_y*(eta + 1)*(xi + 1)**2*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125))/ley
                BmL2_28 = -0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                BmL2_29 = -2*w_y*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 2)*(xi + 1)**2
                BmL2_30 = 2*lex*w_y*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)*(xi + 1)**2
                BmL2_37 = -2*w_y*(eta + 1)*(xi - 1)**2*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125))/ley
                BmL2_38 = -0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                BmL2_39 = 2*w_y*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 1)**2*(xi + 2)
                BmL2_40 = 2*lex*w_y*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)**2*(xi + 1)
                BmL3_07 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(xi - 1)*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2)) + ley*w_y*(eta - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2)))/(lex*ley)
                BmL3_08 = 2*(eta - 1)*(xi - 1)*(0.09375*lex*w_x*(eta + 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 2)*(0.09375*xi + 0.03125))/ley
                BmL3_09 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(0.09375*eta + 0.03125)*(xi - 1)*(xi + 2) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi + 1))/lex
                BmL3_10 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(0.046875*eta + 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi + 0.015625))
                BmL3_17 = -2*(eta - 1)*(xi + 1)*(lex*w_x*(xi + 1)*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2)) + ley*w_y*(eta - 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2)))/(lex*ley)
                BmL3_18 = 2*(eta - 1)*(xi + 1)*(0.09375*lex*w_x*(eta + 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 2)*(0.09375*xi - 0.03125))/ley
                BmL3_19 = -2*(eta - 1)*(xi + 1)*(lex*w_x*(0.09375*eta + 0.03125)*(xi - 2)*(xi + 1) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi - 1))/lex
                BmL3_20 = 2*(eta - 1)*(xi + 1)*(lex*w_x*(0.046875*eta + 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi - 0.015625))
                BmL3_27 = 2*(eta + 1)*(xi + 1)*(lex*w_x*(xi + 1)*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125)) + ley*w_y*(eta + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2)))/(lex*ley)
                BmL3_28 = -2*(eta + 1)*(xi + 1)*(0.09375*lex*w_x*(eta - 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 2)*(eta + 1)*(0.09375*xi - 0.03125))/ley
                BmL3_29 = -2*(eta + 1)*(xi + 1)*(lex*w_x*(0.09375*eta - 0.03125)*(xi - 2)*(xi + 1) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi - 1))/lex
                BmL3_30 = 2*(eta + 1)*(xi + 1)*(lex*w_x*(0.046875*eta - 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi - 0.015625))
                BmL3_37 = -2*(eta + 1)*(xi - 1)*(lex*w_x*(xi - 1)*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125)) + ley*w_y*(eta + 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2)))/(lex*ley)
                BmL3_38 = -2*(eta + 1)*(xi - 1)*(0.09375*lex*w_x*(eta - 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 2)*(eta + 1)*(0.09375*xi + 0.03125))/ley
                BmL3_39 = 2*(eta + 1)*(xi - 1)*(lex*w_x*(0.09375*eta - 0.03125)*(xi - 1)*(xi + 2) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi + 1))/lex
                BmL3_40 = 2*(eta + 1)*(xi - 1)*(lex*w_x*(0.046875*eta - 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi + 0.015625))

                Bb1_07 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_08 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_09 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_10 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_17 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_18 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_19 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_20 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_27 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_28 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_29 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_30 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_37 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_38 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_39 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_40 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_07 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_08 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_09 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_10 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_17 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_18 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_19 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_20 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_27 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_28 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_29 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_30 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_37 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_38 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_39 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_40 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_07 = 4.5*(-eta**2*xi**2 + eta**2 + xi**2 - 1)/(lex*ley)
                Bb3_08 = 1.0*(-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_09 = 1.0*(-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_10 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_17 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_18 = 1.0*(-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_19 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_20 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_27 = 4.5*(-eta**2*xi**2 + eta**2 + xi**2 - 1)/(lex*ley)
                Bb3_28 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_29 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_30 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_37 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_38 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_39 = 1.0*(-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_40 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                k = plate.init_k_KCNL
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_01 + A16*Bm3_01) + BmL2_07*(A12*Bm1_01 + A26*Bm3_01) + BmL3_07*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_01 + A16*Bm3_01) + BmL2_08*(A12*Bm1_01 + A26*Bm3_01) + BmL3_08*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_01 + A16*Bm3_01) + BmL2_09*(A12*Bm1_01 + A26*Bm3_01) + BmL3_09*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_01 + A16*Bm3_01) + BmL2_10*(A12*Bm1_01 + A26*Bm3_01) + BmL3_10*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_01 + A16*Bm3_01) + BmL2_17*(A12*Bm1_01 + A26*Bm3_01) + BmL3_17*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_01 + A16*Bm3_01) + BmL2_18*(A12*Bm1_01 + A26*Bm3_01) + BmL3_18*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_01 + A16*Bm3_01) + BmL2_19*(A12*Bm1_01 + A26*Bm3_01) + BmL3_19*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_01 + A16*Bm3_01) + BmL2_20*(A12*Bm1_01 + A26*Bm3_01) + BmL3_20*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_01 + A16*Bm3_01) + BmL2_27*(A12*Bm1_01 + A26*Bm3_01) + BmL3_27*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_01 + A16*Bm3_01) + BmL2_28*(A12*Bm1_01 + A26*Bm3_01) + BmL3_28*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_01 + A16*Bm3_01) + BmL2_29*(A12*Bm1_01 + A26*Bm3_01) + BmL3_29*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_01 + A16*Bm3_01) + BmL2_30*(A12*Bm1_01 + A26*Bm3_01) + BmL3_30*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_01 + A16*Bm3_01) + BmL2_37*(A12*Bm1_01 + A26*Bm3_01) + BmL3_37*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_01 + A16*Bm3_01) + BmL2_38*(A12*Bm1_01 + A26*Bm3_01) + BmL3_38*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_01 + A16*Bm3_01) + BmL2_39*(A12*Bm1_01 + A26*Bm3_01) + BmL3_39*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_01 + A16*Bm3_01) + BmL2_40*(A12*Bm1_01 + A26*Bm3_01) + BmL3_40*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_02 + A16*Bm3_02) + BmL2_07*(A12*Bm1_02 + A26*Bm3_02) + BmL3_07*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_02 + A16*Bm3_02) + BmL2_08*(A12*Bm1_02 + A26*Bm3_02) + BmL3_08*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_02 + A16*Bm3_02) + BmL2_09*(A12*Bm1_02 + A26*Bm3_02) + BmL3_09*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_02 + A16*Bm3_02) + BmL2_10*(A12*Bm1_02 + A26*Bm3_02) + BmL3_10*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_02 + A16*Bm3_02) + BmL2_17*(A12*Bm1_02 + A26*Bm3_02) + BmL3_17*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_02 + A16*Bm3_02) + BmL2_18*(A12*Bm1_02 + A26*Bm3_02) + BmL3_18*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_02 + A16*Bm3_02) + BmL2_19*(A12*Bm1_02 + A26*Bm3_02) + BmL3_19*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_02 + A16*Bm3_02) + BmL2_20*(A12*Bm1_02 + A26*Bm3_02) + BmL3_20*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_02 + A16*Bm3_02) + BmL2_27*(A12*Bm1_02 + A26*Bm3_02) + BmL3_27*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_02 + A16*Bm3_02) + BmL2_28*(A12*Bm1_02 + A26*Bm3_02) + BmL3_28*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_02 + A16*Bm3_02) + BmL2_29*(A12*Bm1_02 + A26*Bm3_02) + BmL3_29*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_02 + A16*Bm3_02) + BmL2_30*(A12*Bm1_02 + A26*Bm3_02) + BmL3_30*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_02 + A16*Bm3_02) + BmL2_37*(A12*Bm1_02 + A26*Bm3_02) + BmL3_37*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_02 + A16*Bm3_02) + BmL2_38*(A12*Bm1_02 + A26*Bm3_02) + BmL3_38*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_02 + A16*Bm3_02) + BmL2_39*(A12*Bm1_02 + A26*Bm3_02) + BmL3_39*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_02 + A16*Bm3_02) + BmL2_40*(A12*Bm1_02 + A26*Bm3_02) + BmL3_40*(A16*Bm1_02 + A66*Bm3_02))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_03 + A16*Bm3_03) + BmL2_07*(A12*Bm1_03 + A26*Bm3_03) + BmL3_07*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_03 + A16*Bm3_03) + BmL2_08*(A12*Bm1_03 + A26*Bm3_03) + BmL3_08*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_03 + A16*Bm3_03) + BmL2_09*(A12*Bm1_03 + A26*Bm3_03) + BmL3_09*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_03 + A16*Bm3_03) + BmL2_10*(A12*Bm1_03 + A26*Bm3_03) + BmL3_10*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_03 + A16*Bm3_03) + BmL2_17*(A12*Bm1_03 + A26*Bm3_03) + BmL3_17*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_03 + A16*Bm3_03) + BmL2_18*(A12*Bm1_03 + A26*Bm3_03) + BmL3_18*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_03 + A16*Bm3_03) + BmL2_19*(A12*Bm1_03 + A26*Bm3_03) + BmL3_19*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_03 + A16*Bm3_03) + BmL2_20*(A12*Bm1_03 + A26*Bm3_03) + BmL3_20*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_03 + A16*Bm3_03) + BmL2_27*(A12*Bm1_03 + A26*Bm3_03) + BmL3_27*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_03 + A16*Bm3_03) + BmL2_28*(A12*Bm1_03 + A26*Bm3_03) + BmL3_28*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_03 + A16*Bm3_03) + BmL2_29*(A12*Bm1_03 + A26*Bm3_03) + BmL3_29*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_03 + A16*Bm3_03) + BmL2_30*(A12*Bm1_03 + A26*Bm3_03) + BmL3_30*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_03 + A16*Bm3_03) + BmL2_37*(A12*Bm1_03 + A26*Bm3_03) + BmL3_37*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_03 + A16*Bm3_03) + BmL2_38*(A12*Bm1_03 + A26*Bm3_03) + BmL3_38*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_03 + A16*Bm3_03) + BmL2_39*(A12*Bm1_03 + A26*Bm3_03) + BmL3_39*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_03 + A16*Bm3_03) + BmL2_40*(A12*Bm1_03 + A26*Bm3_03) + BmL3_40*(A16*Bm1_03 + A66*Bm3_03))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_04 + A16*Bm3_04) + BmL2_07*(A22*Bm2_04 + A26*Bm3_04) + BmL3_07*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_04 + A16*Bm3_04) + BmL2_08*(A22*Bm2_04 + A26*Bm3_04) + BmL3_08*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_04 + A16*Bm3_04) + BmL2_09*(A22*Bm2_04 + A26*Bm3_04) + BmL3_09*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_04 + A16*Bm3_04) + BmL2_10*(A22*Bm2_04 + A26*Bm3_04) + BmL3_10*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_04 + A16*Bm3_04) + BmL2_17*(A22*Bm2_04 + A26*Bm3_04) + BmL3_17*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_04 + A16*Bm3_04) + BmL2_18*(A22*Bm2_04 + A26*Bm3_04) + BmL3_18*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_04 + A16*Bm3_04) + BmL2_19*(A22*Bm2_04 + A26*Bm3_04) + BmL3_19*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_04 + A16*Bm3_04) + BmL2_20*(A22*Bm2_04 + A26*Bm3_04) + BmL3_20*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_04 + A16*Bm3_04) + BmL2_27*(A22*Bm2_04 + A26*Bm3_04) + BmL3_27*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_04 + A16*Bm3_04) + BmL2_28*(A22*Bm2_04 + A26*Bm3_04) + BmL3_28*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_04 + A16*Bm3_04) + BmL2_29*(A22*Bm2_04 + A26*Bm3_04) + BmL3_29*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_04 + A16*Bm3_04) + BmL2_30*(A22*Bm2_04 + A26*Bm3_04) + BmL3_30*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_04 + A16*Bm3_04) + BmL2_37*(A22*Bm2_04 + A26*Bm3_04) + BmL3_37*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_04 + A16*Bm3_04) + BmL2_38*(A22*Bm2_04 + A26*Bm3_04) + BmL3_38*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_04 + A16*Bm3_04) + BmL2_39*(A22*Bm2_04 + A26*Bm3_04) + BmL3_39*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_04 + A16*Bm3_04) + BmL2_40*(A22*Bm2_04 + A26*Bm3_04) + BmL3_40*(A26*Bm2_04 + A66*Bm3_04))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_05 + A16*Bm3_05) + BmL2_07*(A22*Bm2_05 + A26*Bm3_05) + BmL3_07*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_05 + A16*Bm3_05) + BmL2_08*(A22*Bm2_05 + A26*Bm3_05) + BmL3_08*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_05 + A16*Bm3_05) + BmL2_09*(A22*Bm2_05 + A26*Bm3_05) + BmL3_09*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_05 + A16*Bm3_05) + BmL2_10*(A22*Bm2_05 + A26*Bm3_05) + BmL3_10*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_05 + A16*Bm3_05) + BmL2_17*(A22*Bm2_05 + A26*Bm3_05) + BmL3_17*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_05 + A16*Bm3_05) + BmL2_18*(A22*Bm2_05 + A26*Bm3_05) + BmL3_18*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_05 + A16*Bm3_05) + BmL2_19*(A22*Bm2_05 + A26*Bm3_05) + BmL3_19*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_05 + A16*Bm3_05) + BmL2_20*(A22*Bm2_05 + A26*Bm3_05) + BmL3_20*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_05 + A16*Bm3_05) + BmL2_27*(A22*Bm2_05 + A26*Bm3_05) + BmL3_27*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_05 + A16*Bm3_05) + BmL2_28*(A22*Bm2_05 + A26*Bm3_05) + BmL3_28*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_05 + A16*Bm3_05) + BmL2_29*(A22*Bm2_05 + A26*Bm3_05) + BmL3_29*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_05 + A16*Bm3_05) + BmL2_30*(A22*Bm2_05 + A26*Bm3_05) + BmL3_30*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_05 + A16*Bm3_05) + BmL2_37*(A22*Bm2_05 + A26*Bm3_05) + BmL3_37*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_05 + A16*Bm3_05) + BmL2_38*(A22*Bm2_05 + A26*Bm3_05) + BmL3_38*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_05 + A16*Bm3_05) + BmL2_39*(A22*Bm2_05 + A26*Bm3_05) + BmL3_39*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_05 + A16*Bm3_05) + BmL2_40*(A22*Bm2_05 + A26*Bm3_05) + BmL3_40*(A26*Bm2_05 + A66*Bm3_05))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_06 + A16*Bm3_06) + BmL2_07*(A22*Bm2_06 + A26*Bm3_06) + BmL3_07*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_06 + A16*Bm3_06) + BmL2_08*(A22*Bm2_06 + A26*Bm3_06) + BmL3_08*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_06 + A16*Bm3_06) + BmL2_09*(A22*Bm2_06 + A26*Bm3_06) + BmL3_09*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_06 + A16*Bm3_06) + BmL2_10*(A22*Bm2_06 + A26*Bm3_06) + BmL3_10*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_06 + A16*Bm3_06) + BmL2_17*(A22*Bm2_06 + A26*Bm3_06) + BmL3_17*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_06 + A16*Bm3_06) + BmL2_18*(A22*Bm2_06 + A26*Bm3_06) + BmL3_18*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_06 + A16*Bm3_06) + BmL2_19*(A22*Bm2_06 + A26*Bm3_06) + BmL3_19*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_06 + A16*Bm3_06) + BmL2_20*(A22*Bm2_06 + A26*Bm3_06) + BmL3_20*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_06 + A16*Bm3_06) + BmL2_27*(A22*Bm2_06 + A26*Bm3_06) + BmL3_27*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_06 + A16*Bm3_06) + BmL2_28*(A22*Bm2_06 + A26*Bm3_06) + BmL3_28*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_06 + A16*Bm3_06) + BmL2_29*(A22*Bm2_06 + A26*Bm3_06) + BmL3_29*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_06 + A16*Bm3_06) + BmL2_30*(A22*Bm2_06 + A26*Bm3_06) + BmL3_30*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_06 + A16*Bm3_06) + BmL2_37*(A22*Bm2_06 + A26*Bm3_06) + BmL3_37*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_06 + A16*Bm3_06) + BmL2_38*(A22*Bm2_06 + A26*Bm3_06) + BmL3_38*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_06 + A16*Bm3_06) + BmL2_39*(A22*Bm2_06 + A26*Bm3_06) + BmL3_39*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_06 + A16*Bm3_06) + BmL2_40*(A22*Bm2_06 + A26*Bm3_06) + BmL3_40*(A26*Bm2_06 + A66*Bm3_06))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_01*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_02*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_03*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_04*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_05*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_06*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_07*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_07*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_07*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_07*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_07*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_07*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_07*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_07*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_08*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_08*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_08*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_08*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_08*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_08*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_08*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_08*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_09*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_09*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_09*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_09*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_09*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_09*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_09*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_09*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_10*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_10*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_10*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_10*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_10*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_10*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_10*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_10*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_11*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_12*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_13*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_14*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_15*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_16*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_17*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_17*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_17*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_17*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_17*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_17*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_17*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_17*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_18*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_18*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_18*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_18*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_18*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_18*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_18*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_18*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_19*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_19*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_19*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_19*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_19*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_19*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_19*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_19*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_20*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_20*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_20*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_20*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_20*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_20*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_20*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_20*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_21*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_22*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_23*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_24*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_25*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_26*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_27*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_27*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_27*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_27*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_27*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_27*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_27*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_27*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_28*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_28*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_28*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_28*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_28*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_28*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_28*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_28*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_29*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_29*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_29*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_29*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_29*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_29*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_29*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_29*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_30*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_30*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_30*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_30*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_30*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_30*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_30*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_30*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_31*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_32*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + Bm3_33*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_34*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_35*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + Bm3_36*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_37*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_37*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_37*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_37*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_37*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_37*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_37*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_37*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_38*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_38*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_38*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_38*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_38*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_38*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_38*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_38*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_39*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_39*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_39*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_39*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_39*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_39*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_39*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_39*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_07 + B12*BmL2_07 + B16*BmL3_07) + Bb2_40*(B12*BmL1_07 + B22*BmL2_07 + B26*BmL3_07) + Bb3_40*(B16*BmL1_07 + B26*BmL2_07 + B66*BmL3_07) + BmL1_40*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + BmL1_40*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + BmL2_40*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + BmL2_40*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + BmL3_40*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + BmL3_40*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_01*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_02*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_03*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_04*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_05*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_06*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_07*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_07*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_07*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_07*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_07*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_07*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_07*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_07*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_08*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_08*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_08*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_08*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_08*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_08*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_08*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_08*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_09*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_09*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_09*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_09*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_09*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_09*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_09*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_09*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_10*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_10*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_10*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_10*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_10*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_10*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_10*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_10*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_11*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_12*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_13*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_14*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_15*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_16*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_17*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_17*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_17*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_17*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_17*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_17*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_17*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_17*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_18*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_18*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_18*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_18*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_18*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_18*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_18*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_18*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_19*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_19*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_19*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_19*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_19*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_19*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_19*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_19*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_20*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_20*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_20*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_20*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_20*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_20*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_20*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_20*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_21*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_22*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_23*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_24*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_25*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_26*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_27*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_27*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_27*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_27*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_27*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_27*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_27*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_27*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_28*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_28*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_28*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_28*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_28*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_28*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_28*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_28*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_29*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_29*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_29*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_29*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_29*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_29*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_29*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_29*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_30*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_30*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_30*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_30*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_30*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_30*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_30*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_30*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_31*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_32*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + Bm3_33*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_34*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_35*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + Bm3_36*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_37*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_37*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_37*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_37*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_37*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_37*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_37*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_37*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_38*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_38*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_38*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_38*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_38*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_38*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_38*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_38*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_39*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_39*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_39*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_39*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_39*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_39*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_39*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_39*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_08 + B12*BmL2_08 + B16*BmL3_08) + Bb2_40*(B12*BmL1_08 + B22*BmL2_08 + B26*BmL3_08) + Bb3_40*(B16*BmL1_08 + B26*BmL2_08 + B66*BmL3_08) + BmL1_40*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + BmL1_40*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + BmL2_40*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + BmL2_40*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + BmL3_40*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + BmL3_40*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_01*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_02*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_03*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_04*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_05*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_06*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_07*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_07*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_07*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_07*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_07*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_07*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_07*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_07*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_08*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_08*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_08*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_08*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_08*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_08*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_08*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_08*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_09*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_09*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_09*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_09*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_09*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_09*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_09*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_09*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_10*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_10*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_10*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_10*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_10*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_10*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_10*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_10*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_11*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_12*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_13*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_14*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_15*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_16*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_17*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_17*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_17*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_17*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_17*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_17*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_17*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_17*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_18*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_18*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_18*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_18*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_18*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_18*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_18*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_18*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_19*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_19*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_19*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_19*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_19*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_19*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_19*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_19*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_20*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_20*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_20*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_20*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_20*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_20*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_20*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_20*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_21*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_22*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_23*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_24*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_25*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_26*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_27*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_27*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_27*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_27*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_27*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_27*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_27*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_27*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_28*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_28*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_28*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_28*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_28*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_28*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_28*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_28*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_29*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_29*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_29*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_29*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_29*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_29*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_29*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_29*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_30*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_30*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_30*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_30*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_30*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_30*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_30*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_30*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_31*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_32*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + Bm3_33*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_34*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_35*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + Bm3_36*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_37*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_37*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_37*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_37*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_37*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_37*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_37*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_37*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_38*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_38*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_38*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_38*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_38*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_38*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_38*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_38*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_39*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_39*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_39*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_39*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_39*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_39*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_39*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_39*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_09 + B12*BmL2_09 + B16*BmL3_09) + Bb2_40*(B12*BmL1_09 + B22*BmL2_09 + B26*BmL3_09) + Bb3_40*(B16*BmL1_09 + B26*BmL2_09 + B66*BmL3_09) + BmL1_40*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + BmL1_40*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + BmL2_40*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + BmL2_40*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + BmL3_40*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + BmL3_40*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_01*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_02*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_03*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_04*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_05*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_06*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_07*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_07*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_07*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_07*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_07*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_07*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_07*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_07*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_08*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_08*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_08*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_08*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_08*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_08*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_08*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_08*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_09*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_09*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_09*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_09*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_09*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_09*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_09*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_09*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_10*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_10*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_10*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_10*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_10*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_10*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_10*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_10*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_11*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_12*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_13*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_14*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_15*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_16*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_17*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_17*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_17*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_17*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_17*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_17*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_17*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_17*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_18*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_18*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_18*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_18*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_18*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_18*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_18*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_18*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_19*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_19*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_19*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_19*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_19*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_19*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_19*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_19*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_20*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_20*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_20*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_20*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_20*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_20*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_20*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_20*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_21*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_22*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_23*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_24*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_25*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_26*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_27*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_27*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_27*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_27*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_27*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_27*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_27*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_27*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_28*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_28*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_28*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_28*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_28*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_28*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_28*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_28*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_29*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_29*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_29*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_29*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_29*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_29*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_29*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_29*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_30*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_30*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_30*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_30*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_30*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_30*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_30*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_30*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_31*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_32*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + Bm3_33*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_34*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_35*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + Bm3_36*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_37*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_37*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_37*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_37*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_37*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_37*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_37*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_37*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_38*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_38*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_38*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_38*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_38*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_38*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_38*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_38*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_39*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_39*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_39*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_39*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_39*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_39*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_39*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_39*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_10 + B12*BmL2_10 + B16*BmL3_10) + Bb2_40*(B12*BmL1_10 + B22*BmL2_10 + B26*BmL3_10) + Bb3_40*(B16*BmL1_10 + B26*BmL2_10 + B66*BmL3_10) + BmL1_40*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10) + BmL1_40*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + BmL2_40*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10) + BmL2_40*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + BmL3_40*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10) + BmL3_40*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_11 + A16*Bm3_11) + BmL2_07*(A12*Bm1_11 + A26*Bm3_11) + BmL3_07*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_11 + A16*Bm3_11) + BmL2_08*(A12*Bm1_11 + A26*Bm3_11) + BmL3_08*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_11 + A16*Bm3_11) + BmL2_09*(A12*Bm1_11 + A26*Bm3_11) + BmL3_09*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_11 + A16*Bm3_11) + BmL2_10*(A12*Bm1_11 + A26*Bm3_11) + BmL3_10*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_11 + A16*Bm3_11) + BmL2_17*(A12*Bm1_11 + A26*Bm3_11) + BmL3_17*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_11 + A16*Bm3_11) + BmL2_18*(A12*Bm1_11 + A26*Bm3_11) + BmL3_18*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_11 + A16*Bm3_11) + BmL2_19*(A12*Bm1_11 + A26*Bm3_11) + BmL3_19*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_11 + A16*Bm3_11) + BmL2_20*(A12*Bm1_11 + A26*Bm3_11) + BmL3_20*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_11 + A16*Bm3_11) + BmL2_27*(A12*Bm1_11 + A26*Bm3_11) + BmL3_27*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_11 + A16*Bm3_11) + BmL2_28*(A12*Bm1_11 + A26*Bm3_11) + BmL3_28*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_11 + A16*Bm3_11) + BmL2_29*(A12*Bm1_11 + A26*Bm3_11) + BmL3_29*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_11 + A16*Bm3_11) + BmL2_30*(A12*Bm1_11 + A26*Bm3_11) + BmL3_30*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_11 + A16*Bm3_11) + BmL2_37*(A12*Bm1_11 + A26*Bm3_11) + BmL3_37*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_11 + A16*Bm3_11) + BmL2_38*(A12*Bm1_11 + A26*Bm3_11) + BmL3_38*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_11 + A16*Bm3_11) + BmL2_39*(A12*Bm1_11 + A26*Bm3_11) + BmL3_39*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_11 + A16*Bm3_11) + BmL2_40*(A12*Bm1_11 + A26*Bm3_11) + BmL3_40*(A16*Bm1_11 + A66*Bm3_11))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_12 + A16*Bm3_12) + BmL2_07*(A12*Bm1_12 + A26*Bm3_12) + BmL3_07*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_12 + A16*Bm3_12) + BmL2_08*(A12*Bm1_12 + A26*Bm3_12) + BmL3_08*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_12 + A16*Bm3_12) + BmL2_09*(A12*Bm1_12 + A26*Bm3_12) + BmL3_09*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_12 + A16*Bm3_12) + BmL2_10*(A12*Bm1_12 + A26*Bm3_12) + BmL3_10*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_12 + A16*Bm3_12) + BmL2_17*(A12*Bm1_12 + A26*Bm3_12) + BmL3_17*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_12 + A16*Bm3_12) + BmL2_18*(A12*Bm1_12 + A26*Bm3_12) + BmL3_18*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_12 + A16*Bm3_12) + BmL2_19*(A12*Bm1_12 + A26*Bm3_12) + BmL3_19*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_12 + A16*Bm3_12) + BmL2_20*(A12*Bm1_12 + A26*Bm3_12) + BmL3_20*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_12 + A16*Bm3_12) + BmL2_27*(A12*Bm1_12 + A26*Bm3_12) + BmL3_27*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_12 + A16*Bm3_12) + BmL2_28*(A12*Bm1_12 + A26*Bm3_12) + BmL3_28*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_12 + A16*Bm3_12) + BmL2_29*(A12*Bm1_12 + A26*Bm3_12) + BmL3_29*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_12 + A16*Bm3_12) + BmL2_30*(A12*Bm1_12 + A26*Bm3_12) + BmL3_30*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_12 + A16*Bm3_12) + BmL2_37*(A12*Bm1_12 + A26*Bm3_12) + BmL3_37*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_12 + A16*Bm3_12) + BmL2_38*(A12*Bm1_12 + A26*Bm3_12) + BmL3_38*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_12 + A16*Bm3_12) + BmL2_39*(A12*Bm1_12 + A26*Bm3_12) + BmL3_39*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_12 + A16*Bm3_12) + BmL2_40*(A12*Bm1_12 + A26*Bm3_12) + BmL3_40*(A16*Bm1_12 + A66*Bm3_12))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_13 + A16*Bm3_13) + BmL2_07*(A12*Bm1_13 + A26*Bm3_13) + BmL3_07*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_13 + A16*Bm3_13) + BmL2_08*(A12*Bm1_13 + A26*Bm3_13) + BmL3_08*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_13 + A16*Bm3_13) + BmL2_09*(A12*Bm1_13 + A26*Bm3_13) + BmL3_09*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_13 + A16*Bm3_13) + BmL2_10*(A12*Bm1_13 + A26*Bm3_13) + BmL3_10*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_13 + A16*Bm3_13) + BmL2_17*(A12*Bm1_13 + A26*Bm3_13) + BmL3_17*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_13 + A16*Bm3_13) + BmL2_18*(A12*Bm1_13 + A26*Bm3_13) + BmL3_18*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_13 + A16*Bm3_13) + BmL2_19*(A12*Bm1_13 + A26*Bm3_13) + BmL3_19*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_13 + A16*Bm3_13) + BmL2_20*(A12*Bm1_13 + A26*Bm3_13) + BmL3_20*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_13 + A16*Bm3_13) + BmL2_27*(A12*Bm1_13 + A26*Bm3_13) + BmL3_27*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_13 + A16*Bm3_13) + BmL2_28*(A12*Bm1_13 + A26*Bm3_13) + BmL3_28*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_13 + A16*Bm3_13) + BmL2_29*(A12*Bm1_13 + A26*Bm3_13) + BmL3_29*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_13 + A16*Bm3_13) + BmL2_30*(A12*Bm1_13 + A26*Bm3_13) + BmL3_30*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_13 + A16*Bm3_13) + BmL2_37*(A12*Bm1_13 + A26*Bm3_13) + BmL3_37*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_13 + A16*Bm3_13) + BmL2_38*(A12*Bm1_13 + A26*Bm3_13) + BmL3_38*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_13 + A16*Bm3_13) + BmL2_39*(A12*Bm1_13 + A26*Bm3_13) + BmL3_39*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_13 + A16*Bm3_13) + BmL2_40*(A12*Bm1_13 + A26*Bm3_13) + BmL3_40*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_14 + A16*Bm3_14) + BmL2_07*(A22*Bm2_14 + A26*Bm3_14) + BmL3_07*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_14 + A16*Bm3_14) + BmL2_08*(A22*Bm2_14 + A26*Bm3_14) + BmL3_08*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_14 + A16*Bm3_14) + BmL2_09*(A22*Bm2_14 + A26*Bm3_14) + BmL3_09*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_14 + A16*Bm3_14) + BmL2_10*(A22*Bm2_14 + A26*Bm3_14) + BmL3_10*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_14 + A16*Bm3_14) + BmL2_17*(A22*Bm2_14 + A26*Bm3_14) + BmL3_17*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_14 + A16*Bm3_14) + BmL2_18*(A22*Bm2_14 + A26*Bm3_14) + BmL3_18*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_14 + A16*Bm3_14) + BmL2_19*(A22*Bm2_14 + A26*Bm3_14) + BmL3_19*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_14 + A16*Bm3_14) + BmL2_20*(A22*Bm2_14 + A26*Bm3_14) + BmL3_20*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_14 + A16*Bm3_14) + BmL2_27*(A22*Bm2_14 + A26*Bm3_14) + BmL3_27*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_14 + A16*Bm3_14) + BmL2_28*(A22*Bm2_14 + A26*Bm3_14) + BmL3_28*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_14 + A16*Bm3_14) + BmL2_29*(A22*Bm2_14 + A26*Bm3_14) + BmL3_29*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_14 + A16*Bm3_14) + BmL2_30*(A22*Bm2_14 + A26*Bm3_14) + BmL3_30*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_14 + A16*Bm3_14) + BmL2_37*(A22*Bm2_14 + A26*Bm3_14) + BmL3_37*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_14 + A16*Bm3_14) + BmL2_38*(A22*Bm2_14 + A26*Bm3_14) + BmL3_38*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_14 + A16*Bm3_14) + BmL2_39*(A22*Bm2_14 + A26*Bm3_14) + BmL3_39*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_14 + A16*Bm3_14) + BmL2_40*(A22*Bm2_14 + A26*Bm3_14) + BmL3_40*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_15 + A16*Bm3_15) + BmL2_07*(A22*Bm2_15 + A26*Bm3_15) + BmL3_07*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_15 + A16*Bm3_15) + BmL2_08*(A22*Bm2_15 + A26*Bm3_15) + BmL3_08*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_15 + A16*Bm3_15) + BmL2_09*(A22*Bm2_15 + A26*Bm3_15) + BmL3_09*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_15 + A16*Bm3_15) + BmL2_10*(A22*Bm2_15 + A26*Bm3_15) + BmL3_10*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_15 + A16*Bm3_15) + BmL2_17*(A22*Bm2_15 + A26*Bm3_15) + BmL3_17*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_15 + A16*Bm3_15) + BmL2_18*(A22*Bm2_15 + A26*Bm3_15) + BmL3_18*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_15 + A16*Bm3_15) + BmL2_19*(A22*Bm2_15 + A26*Bm3_15) + BmL3_19*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_15 + A16*Bm3_15) + BmL2_20*(A22*Bm2_15 + A26*Bm3_15) + BmL3_20*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_15 + A16*Bm3_15) + BmL2_27*(A22*Bm2_15 + A26*Bm3_15) + BmL3_27*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_15 + A16*Bm3_15) + BmL2_28*(A22*Bm2_15 + A26*Bm3_15) + BmL3_28*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_15 + A16*Bm3_15) + BmL2_29*(A22*Bm2_15 + A26*Bm3_15) + BmL3_29*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_15 + A16*Bm3_15) + BmL2_30*(A22*Bm2_15 + A26*Bm3_15) + BmL3_30*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_15 + A16*Bm3_15) + BmL2_37*(A22*Bm2_15 + A26*Bm3_15) + BmL3_37*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_15 + A16*Bm3_15) + BmL2_38*(A22*Bm2_15 + A26*Bm3_15) + BmL3_38*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_15 + A16*Bm3_15) + BmL2_39*(A22*Bm2_15 + A26*Bm3_15) + BmL3_39*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_15 + A16*Bm3_15) + BmL2_40*(A22*Bm2_15 + A26*Bm3_15) + BmL3_40*(A26*Bm2_15 + A66*Bm3_15))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_16 + A16*Bm3_16) + BmL2_07*(A22*Bm2_16 + A26*Bm3_16) + BmL3_07*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_16 + A16*Bm3_16) + BmL2_08*(A22*Bm2_16 + A26*Bm3_16) + BmL3_08*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_16 + A16*Bm3_16) + BmL2_09*(A22*Bm2_16 + A26*Bm3_16) + BmL3_09*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_16 + A16*Bm3_16) + BmL2_10*(A22*Bm2_16 + A26*Bm3_16) + BmL3_10*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_16 + A16*Bm3_16) + BmL2_17*(A22*Bm2_16 + A26*Bm3_16) + BmL3_17*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_16 + A16*Bm3_16) + BmL2_18*(A22*Bm2_16 + A26*Bm3_16) + BmL3_18*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_16 + A16*Bm3_16) + BmL2_19*(A22*Bm2_16 + A26*Bm3_16) + BmL3_19*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_16 + A16*Bm3_16) + BmL2_20*(A22*Bm2_16 + A26*Bm3_16) + BmL3_20*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_16 + A16*Bm3_16) + BmL2_27*(A22*Bm2_16 + A26*Bm3_16) + BmL3_27*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_16 + A16*Bm3_16) + BmL2_28*(A22*Bm2_16 + A26*Bm3_16) + BmL3_28*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_16 + A16*Bm3_16) + BmL2_29*(A22*Bm2_16 + A26*Bm3_16) + BmL3_29*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_16 + A16*Bm3_16) + BmL2_30*(A22*Bm2_16 + A26*Bm3_16) + BmL3_30*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_16 + A16*Bm3_16) + BmL2_37*(A22*Bm2_16 + A26*Bm3_16) + BmL3_37*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_16 + A16*Bm3_16) + BmL2_38*(A22*Bm2_16 + A26*Bm3_16) + BmL3_38*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_16 + A16*Bm3_16) + BmL2_39*(A22*Bm2_16 + A26*Bm3_16) + BmL3_39*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_16 + A16*Bm3_16) + BmL2_40*(A22*Bm2_16 + A26*Bm3_16) + BmL3_40*(A26*Bm2_16 + A66*Bm3_16))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_01*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_02*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_03*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_04*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_05*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_06*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_07*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_07*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_07*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_07*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_07*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_07*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_07*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_07*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_08*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_08*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_08*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_08*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_08*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_08*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_08*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_08*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_09*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_09*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_09*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_09*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_09*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_09*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_09*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_09*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_10*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_10*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_10*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_10*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_10*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_10*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_10*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_10*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_11*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_12*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_13*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_14*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_15*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_16*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_17*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_17*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_17*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_17*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_17*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_17*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_17*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_17*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_18*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_18*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_18*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_18*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_18*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_18*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_18*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_18*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_19*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_19*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_19*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_19*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_19*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_19*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_19*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_19*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_20*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_20*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_20*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_20*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_20*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_20*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_20*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_20*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_21*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_22*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_23*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_24*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_25*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_26*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_27*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_27*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_27*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_27*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_27*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_27*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_27*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_27*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_28*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_28*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_28*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_28*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_28*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_28*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_28*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_28*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_29*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_29*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_29*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_29*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_29*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_29*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_29*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_29*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_30*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_30*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_30*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_30*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_30*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_30*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_30*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_30*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_31*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_32*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + Bm3_33*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_34*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_35*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + Bm3_36*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_37*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_37*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_37*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_37*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_37*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_37*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_37*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_37*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_38*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_38*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_38*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_38*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_38*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_38*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_38*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_38*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_39*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_39*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_39*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_39*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_39*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_39*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_39*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_39*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_17 + B12*BmL2_17 + B16*BmL3_17) + Bb2_40*(B12*BmL1_17 + B22*BmL2_17 + B26*BmL3_17) + Bb3_40*(B16*BmL1_17 + B26*BmL2_17 + B66*BmL3_17) + BmL1_40*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + BmL1_40*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + BmL2_40*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + BmL2_40*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + BmL3_40*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + BmL3_40*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_01*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_02*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_03*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_04*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_05*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_06*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_07*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_07*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_07*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_07*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_07*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_07*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_07*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_07*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_08*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_08*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_08*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_08*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_08*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_08*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_08*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_08*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_09*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_09*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_09*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_09*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_09*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_09*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_09*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_09*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_10*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_10*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_10*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_10*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_10*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_10*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_10*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_10*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_11*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_12*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_13*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_14*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_15*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_16*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_17*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_17*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_17*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_17*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_17*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_17*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_17*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_17*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_18*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_18*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_18*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_18*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_18*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_18*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_18*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_18*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_19*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_19*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_19*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_19*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_19*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_19*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_19*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_19*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_20*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_20*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_20*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_20*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_20*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_20*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_20*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_20*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_21*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_22*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_23*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_24*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_25*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_26*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_27*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_27*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_27*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_27*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_27*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_27*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_27*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_27*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_28*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_28*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_28*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_28*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_28*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_28*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_28*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_28*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_29*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_29*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_29*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_29*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_29*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_29*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_29*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_29*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_30*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_30*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_30*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_30*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_30*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_30*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_30*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_30*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_31*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_32*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + Bm3_33*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_34*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_35*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + Bm3_36*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_37*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_37*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_37*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_37*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_37*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_37*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_37*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_37*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_38*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_38*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_38*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_38*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_38*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_38*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_38*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_38*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_39*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_39*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_39*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_39*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_39*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_39*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_39*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_39*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_18 + B12*BmL2_18 + B16*BmL3_18) + Bb2_40*(B12*BmL1_18 + B22*BmL2_18 + B26*BmL3_18) + Bb3_40*(B16*BmL1_18 + B26*BmL2_18 + B66*BmL3_18) + BmL1_40*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + BmL1_40*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + BmL2_40*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + BmL2_40*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + BmL3_40*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + BmL3_40*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_01*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_02*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_03*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_04*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_05*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_06*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_07*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_07*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_07*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_07*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_07*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_07*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_07*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_07*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_08*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_08*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_08*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_08*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_08*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_08*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_08*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_08*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_09*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_09*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_09*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_09*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_09*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_09*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_09*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_09*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_10*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_10*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_10*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_10*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_10*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_10*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_10*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_10*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_11*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_12*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_13*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_14*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_15*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_16*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_17*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_17*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_17*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_17*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_17*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_17*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_17*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_17*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_18*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_18*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_18*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_18*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_18*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_18*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_18*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_18*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_19*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_19*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_19*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_19*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_19*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_19*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_19*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_19*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_20*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_20*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_20*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_20*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_20*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_20*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_20*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_20*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_21*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_22*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_23*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_24*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_25*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_26*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_27*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_27*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_27*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_27*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_27*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_27*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_27*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_27*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_28*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_28*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_28*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_28*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_28*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_28*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_28*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_28*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_29*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_29*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_29*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_29*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_29*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_29*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_29*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_29*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_30*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_30*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_30*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_30*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_30*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_30*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_30*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_30*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_31*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_32*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + Bm3_33*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_34*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_35*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + Bm3_36*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_37*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_37*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_37*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_37*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_37*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_37*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_37*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_37*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_38*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_38*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_38*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_38*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_38*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_38*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_38*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_38*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_39*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_39*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_39*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_39*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_39*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_39*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_39*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_39*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_19 + B12*BmL2_19 + B16*BmL3_19) + Bb2_40*(B12*BmL1_19 + B22*BmL2_19 + B26*BmL3_19) + Bb3_40*(B16*BmL1_19 + B26*BmL2_19 + B66*BmL3_19) + BmL1_40*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + BmL1_40*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + BmL2_40*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + BmL2_40*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + BmL3_40*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + BmL3_40*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_01*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_02*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_03*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_04*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_05*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_06*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_07*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_07*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_07*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_07*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_07*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_07*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_07*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_07*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_08*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_08*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_08*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_08*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_08*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_08*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_08*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_08*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_09*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_09*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_09*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_09*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_09*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_09*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_09*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_09*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_10*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_10*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_10*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_10*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_10*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_10*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_10*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_10*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_11*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_12*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_13*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_14*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_15*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_16*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_17*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_17*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_17*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_17*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_17*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_17*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_17*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_17*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_18*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_18*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_18*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_18*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_18*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_18*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_18*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_18*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_19*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_19*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_19*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_19*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_19*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_19*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_19*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_19*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_20*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_20*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_20*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_20*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_20*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_20*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_20*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_20*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_21*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_22*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_23*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_24*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_25*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_26*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_27*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_27*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_27*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_27*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_27*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_27*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_27*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_27*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_28*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_28*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_28*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_28*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_28*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_28*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_28*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_28*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_29*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_29*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_29*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_29*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_29*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_29*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_29*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_29*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_30*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_30*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_30*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_30*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_30*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_30*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_30*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_30*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_31*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_32*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + Bm3_33*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_34*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_35*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + Bm3_36*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_37*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_37*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_37*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_37*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_37*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_37*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_37*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_37*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_38*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_38*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_38*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_38*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_38*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_38*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_38*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_38*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_39*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_39*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_39*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_39*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_39*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_39*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_39*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_39*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_20 + B12*BmL2_20 + B16*BmL3_20) + Bb2_40*(B12*BmL1_20 + B22*BmL2_20 + B26*BmL3_20) + Bb3_40*(B16*BmL1_20 + B26*BmL2_20 + B66*BmL3_20) + BmL1_40*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + BmL1_40*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + BmL2_40*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + BmL2_40*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + BmL3_40*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + BmL3_40*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_21 + A16*Bm3_21) + BmL2_07*(A12*Bm1_21 + A26*Bm3_21) + BmL3_07*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_21 + A16*Bm3_21) + BmL2_08*(A12*Bm1_21 + A26*Bm3_21) + BmL3_08*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_21 + A16*Bm3_21) + BmL2_09*(A12*Bm1_21 + A26*Bm3_21) + BmL3_09*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_21 + A16*Bm3_21) + BmL2_10*(A12*Bm1_21 + A26*Bm3_21) + BmL3_10*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_21 + A16*Bm3_21) + BmL2_17*(A12*Bm1_21 + A26*Bm3_21) + BmL3_17*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_21 + A16*Bm3_21) + BmL2_18*(A12*Bm1_21 + A26*Bm3_21) + BmL3_18*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_21 + A16*Bm3_21) + BmL2_19*(A12*Bm1_21 + A26*Bm3_21) + BmL3_19*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_21 + A16*Bm3_21) + BmL2_20*(A12*Bm1_21 + A26*Bm3_21) + BmL3_20*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_21 + A16*Bm3_21) + BmL2_27*(A12*Bm1_21 + A26*Bm3_21) + BmL3_27*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_21 + A16*Bm3_21) + BmL2_28*(A12*Bm1_21 + A26*Bm3_21) + BmL3_28*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_21 + A16*Bm3_21) + BmL2_29*(A12*Bm1_21 + A26*Bm3_21) + BmL3_29*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_21 + A16*Bm3_21) + BmL2_30*(A12*Bm1_21 + A26*Bm3_21) + BmL3_30*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_21 + A16*Bm3_21) + BmL2_37*(A12*Bm1_21 + A26*Bm3_21) + BmL3_37*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_21 + A16*Bm3_21) + BmL2_38*(A12*Bm1_21 + A26*Bm3_21) + BmL3_38*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_21 + A16*Bm3_21) + BmL2_39*(A12*Bm1_21 + A26*Bm3_21) + BmL3_39*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_21 + A16*Bm3_21) + BmL2_40*(A12*Bm1_21 + A26*Bm3_21) + BmL3_40*(A16*Bm1_21 + A66*Bm3_21))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_22 + A16*Bm3_22) + BmL2_07*(A12*Bm1_22 + A26*Bm3_22) + BmL3_07*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_22 + A16*Bm3_22) + BmL2_08*(A12*Bm1_22 + A26*Bm3_22) + BmL3_08*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_22 + A16*Bm3_22) + BmL2_09*(A12*Bm1_22 + A26*Bm3_22) + BmL3_09*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_22 + A16*Bm3_22) + BmL2_10*(A12*Bm1_22 + A26*Bm3_22) + BmL3_10*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_22 + A16*Bm3_22) + BmL2_17*(A12*Bm1_22 + A26*Bm3_22) + BmL3_17*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_22 + A16*Bm3_22) + BmL2_18*(A12*Bm1_22 + A26*Bm3_22) + BmL3_18*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_22 + A16*Bm3_22) + BmL2_19*(A12*Bm1_22 + A26*Bm3_22) + BmL3_19*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_22 + A16*Bm3_22) + BmL2_20*(A12*Bm1_22 + A26*Bm3_22) + BmL3_20*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_22 + A16*Bm3_22) + BmL2_27*(A12*Bm1_22 + A26*Bm3_22) + BmL3_27*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_22 + A16*Bm3_22) + BmL2_28*(A12*Bm1_22 + A26*Bm3_22) + BmL3_28*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_22 + A16*Bm3_22) + BmL2_29*(A12*Bm1_22 + A26*Bm3_22) + BmL3_29*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_22 + A16*Bm3_22) + BmL2_30*(A12*Bm1_22 + A26*Bm3_22) + BmL3_30*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_22 + A16*Bm3_22) + BmL2_37*(A12*Bm1_22 + A26*Bm3_22) + BmL3_37*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_22 + A16*Bm3_22) + BmL2_38*(A12*Bm1_22 + A26*Bm3_22) + BmL3_38*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_22 + A16*Bm3_22) + BmL2_39*(A12*Bm1_22 + A26*Bm3_22) + BmL3_39*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_22 + A16*Bm3_22) + BmL2_40*(A12*Bm1_22 + A26*Bm3_22) + BmL3_40*(A16*Bm1_22 + A66*Bm3_22))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_23 + A16*Bm3_23) + BmL2_07*(A12*Bm1_23 + A26*Bm3_23) + BmL3_07*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_23 + A16*Bm3_23) + BmL2_08*(A12*Bm1_23 + A26*Bm3_23) + BmL3_08*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_23 + A16*Bm3_23) + BmL2_09*(A12*Bm1_23 + A26*Bm3_23) + BmL3_09*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_23 + A16*Bm3_23) + BmL2_10*(A12*Bm1_23 + A26*Bm3_23) + BmL3_10*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_23 + A16*Bm3_23) + BmL2_17*(A12*Bm1_23 + A26*Bm3_23) + BmL3_17*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_23 + A16*Bm3_23) + BmL2_18*(A12*Bm1_23 + A26*Bm3_23) + BmL3_18*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_23 + A16*Bm3_23) + BmL2_19*(A12*Bm1_23 + A26*Bm3_23) + BmL3_19*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_23 + A16*Bm3_23) + BmL2_20*(A12*Bm1_23 + A26*Bm3_23) + BmL3_20*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_23 + A16*Bm3_23) + BmL2_27*(A12*Bm1_23 + A26*Bm3_23) + BmL3_27*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_23 + A16*Bm3_23) + BmL2_28*(A12*Bm1_23 + A26*Bm3_23) + BmL3_28*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_23 + A16*Bm3_23) + BmL2_29*(A12*Bm1_23 + A26*Bm3_23) + BmL3_29*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_23 + A16*Bm3_23) + BmL2_30*(A12*Bm1_23 + A26*Bm3_23) + BmL3_30*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_23 + A16*Bm3_23) + BmL2_37*(A12*Bm1_23 + A26*Bm3_23) + BmL3_37*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_23 + A16*Bm3_23) + BmL2_38*(A12*Bm1_23 + A26*Bm3_23) + BmL3_38*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_23 + A16*Bm3_23) + BmL2_39*(A12*Bm1_23 + A26*Bm3_23) + BmL3_39*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_23 + A16*Bm3_23) + BmL2_40*(A12*Bm1_23 + A26*Bm3_23) + BmL3_40*(A16*Bm1_23 + A66*Bm3_23))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_24 + A16*Bm3_24) + BmL2_07*(A22*Bm2_24 + A26*Bm3_24) + BmL3_07*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_24 + A16*Bm3_24) + BmL2_08*(A22*Bm2_24 + A26*Bm3_24) + BmL3_08*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_24 + A16*Bm3_24) + BmL2_09*(A22*Bm2_24 + A26*Bm3_24) + BmL3_09*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_24 + A16*Bm3_24) + BmL2_10*(A22*Bm2_24 + A26*Bm3_24) + BmL3_10*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_24 + A16*Bm3_24) + BmL2_17*(A22*Bm2_24 + A26*Bm3_24) + BmL3_17*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_24 + A16*Bm3_24) + BmL2_18*(A22*Bm2_24 + A26*Bm3_24) + BmL3_18*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_24 + A16*Bm3_24) + BmL2_19*(A22*Bm2_24 + A26*Bm3_24) + BmL3_19*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_24 + A16*Bm3_24) + BmL2_20*(A22*Bm2_24 + A26*Bm3_24) + BmL3_20*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_24 + A16*Bm3_24) + BmL2_27*(A22*Bm2_24 + A26*Bm3_24) + BmL3_27*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_24 + A16*Bm3_24) + BmL2_28*(A22*Bm2_24 + A26*Bm3_24) + BmL3_28*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_24 + A16*Bm3_24) + BmL2_29*(A22*Bm2_24 + A26*Bm3_24) + BmL3_29*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_24 + A16*Bm3_24) + BmL2_30*(A22*Bm2_24 + A26*Bm3_24) + BmL3_30*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_24 + A16*Bm3_24) + BmL2_37*(A22*Bm2_24 + A26*Bm3_24) + BmL3_37*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_24 + A16*Bm3_24) + BmL2_38*(A22*Bm2_24 + A26*Bm3_24) + BmL3_38*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_24 + A16*Bm3_24) + BmL2_39*(A22*Bm2_24 + A26*Bm3_24) + BmL3_39*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_24 + A16*Bm3_24) + BmL2_40*(A22*Bm2_24 + A26*Bm3_24) + BmL3_40*(A26*Bm2_24 + A66*Bm3_24))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_25 + A16*Bm3_25) + BmL2_07*(A22*Bm2_25 + A26*Bm3_25) + BmL3_07*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_25 + A16*Bm3_25) + BmL2_08*(A22*Bm2_25 + A26*Bm3_25) + BmL3_08*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_25 + A16*Bm3_25) + BmL2_09*(A22*Bm2_25 + A26*Bm3_25) + BmL3_09*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_25 + A16*Bm3_25) + BmL2_10*(A22*Bm2_25 + A26*Bm3_25) + BmL3_10*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_25 + A16*Bm3_25) + BmL2_17*(A22*Bm2_25 + A26*Bm3_25) + BmL3_17*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_25 + A16*Bm3_25) + BmL2_18*(A22*Bm2_25 + A26*Bm3_25) + BmL3_18*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_25 + A16*Bm3_25) + BmL2_19*(A22*Bm2_25 + A26*Bm3_25) + BmL3_19*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_25 + A16*Bm3_25) + BmL2_20*(A22*Bm2_25 + A26*Bm3_25) + BmL3_20*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_25 + A16*Bm3_25) + BmL2_27*(A22*Bm2_25 + A26*Bm3_25) + BmL3_27*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_25 + A16*Bm3_25) + BmL2_28*(A22*Bm2_25 + A26*Bm3_25) + BmL3_28*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_25 + A16*Bm3_25) + BmL2_29*(A22*Bm2_25 + A26*Bm3_25) + BmL3_29*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_25 + A16*Bm3_25) + BmL2_30*(A22*Bm2_25 + A26*Bm3_25) + BmL3_30*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_25 + A16*Bm3_25) + BmL2_37*(A22*Bm2_25 + A26*Bm3_25) + BmL3_37*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_25 + A16*Bm3_25) + BmL2_38*(A22*Bm2_25 + A26*Bm3_25) + BmL3_38*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_25 + A16*Bm3_25) + BmL2_39*(A22*Bm2_25 + A26*Bm3_25) + BmL3_39*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_25 + A16*Bm3_25) + BmL2_40*(A22*Bm2_25 + A26*Bm3_25) + BmL3_40*(A26*Bm2_25 + A66*Bm3_25))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_26 + A16*Bm3_26) + BmL2_07*(A22*Bm2_26 + A26*Bm3_26) + BmL3_07*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_26 + A16*Bm3_26) + BmL2_08*(A22*Bm2_26 + A26*Bm3_26) + BmL3_08*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_26 + A16*Bm3_26) + BmL2_09*(A22*Bm2_26 + A26*Bm3_26) + BmL3_09*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_26 + A16*Bm3_26) + BmL2_10*(A22*Bm2_26 + A26*Bm3_26) + BmL3_10*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_26 + A16*Bm3_26) + BmL2_17*(A22*Bm2_26 + A26*Bm3_26) + BmL3_17*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_26 + A16*Bm3_26) + BmL2_18*(A22*Bm2_26 + A26*Bm3_26) + BmL3_18*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_26 + A16*Bm3_26) + BmL2_19*(A22*Bm2_26 + A26*Bm3_26) + BmL3_19*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_26 + A16*Bm3_26) + BmL2_20*(A22*Bm2_26 + A26*Bm3_26) + BmL3_20*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_26 + A16*Bm3_26) + BmL2_27*(A22*Bm2_26 + A26*Bm3_26) + BmL3_27*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_26 + A16*Bm3_26) + BmL2_28*(A22*Bm2_26 + A26*Bm3_26) + BmL3_28*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_26 + A16*Bm3_26) + BmL2_29*(A22*Bm2_26 + A26*Bm3_26) + BmL3_29*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_26 + A16*Bm3_26) + BmL2_30*(A22*Bm2_26 + A26*Bm3_26) + BmL3_30*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_26 + A16*Bm3_26) + BmL2_37*(A22*Bm2_26 + A26*Bm3_26) + BmL3_37*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_26 + A16*Bm3_26) + BmL2_38*(A22*Bm2_26 + A26*Bm3_26) + BmL3_38*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_26 + A16*Bm3_26) + BmL2_39*(A22*Bm2_26 + A26*Bm3_26) + BmL3_39*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_26 + A16*Bm3_26) + BmL2_40*(A22*Bm2_26 + A26*Bm3_26) + BmL3_40*(A26*Bm2_26 + A66*Bm3_26))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_01*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_02*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_03*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_04*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_05*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_06*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_07*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_07*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_07*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_07*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_07*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_07*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_07*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_07*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_08*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_08*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_08*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_08*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_08*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_08*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_08*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_08*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_09*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_09*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_09*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_09*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_09*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_09*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_09*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_09*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_10*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_10*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_10*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_10*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_10*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_10*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_10*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_10*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_11*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_12*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_13*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_14*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_15*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_16*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_17*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_17*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_17*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_17*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_17*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_17*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_17*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_17*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_18*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_18*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_18*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_18*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_18*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_18*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_18*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_18*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_19*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_19*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_19*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_19*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_19*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_19*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_19*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_19*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_20*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_20*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_20*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_20*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_20*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_20*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_20*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_20*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_21*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_22*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_23*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_24*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_25*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_26*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_27*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_27*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_27*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_27*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_27*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_27*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_27*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_27*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_28*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_28*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_28*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_28*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_28*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_28*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_28*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_28*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_29*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_29*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_29*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_29*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_29*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_29*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_29*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_29*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_30*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_30*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_30*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_30*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_30*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_30*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_30*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_30*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_31*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_32*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + Bm3_33*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_34*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_35*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + Bm3_36*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_37*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_37*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_37*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_37*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_37*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_37*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_37*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_37*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_38*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_38*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_38*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_38*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_38*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_38*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_38*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_38*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_39*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_39*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_39*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_39*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_39*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_39*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_39*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_39*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_27 + B12*BmL2_27 + B16*BmL3_27) + Bb2_40*(B12*BmL1_27 + B22*BmL2_27 + B26*BmL3_27) + Bb3_40*(B16*BmL1_27 + B26*BmL2_27 + B66*BmL3_27) + BmL1_40*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + BmL1_40*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + BmL2_40*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + BmL2_40*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + BmL3_40*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + BmL3_40*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_01*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_02*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_03*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_04*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_05*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_06*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_07*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_07*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_07*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_07*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_07*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_07*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_07*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_07*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_08*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_08*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_08*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_08*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_08*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_08*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_08*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_08*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_09*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_09*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_09*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_09*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_09*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_09*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_09*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_09*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_10*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_10*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_10*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_10*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_10*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_10*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_10*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_10*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_11*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_12*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_13*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_14*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_15*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_16*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_17*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_17*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_17*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_17*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_17*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_17*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_17*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_17*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_18*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_18*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_18*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_18*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_18*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_18*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_18*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_18*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_19*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_19*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_19*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_19*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_19*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_19*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_19*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_19*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_20*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_20*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_20*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_20*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_20*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_20*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_20*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_20*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_21*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_22*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_23*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_24*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_25*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_26*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_27*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_27*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_27*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_27*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_27*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_27*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_27*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_27*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_28*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_28*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_28*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_28*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_28*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_28*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_28*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_28*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_29*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_29*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_29*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_29*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_29*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_29*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_29*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_29*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_30*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_30*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_30*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_30*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_30*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_30*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_30*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_30*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_31*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_32*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + Bm3_33*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_34*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_35*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + Bm3_36*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_37*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_37*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_37*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_37*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_37*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_37*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_37*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_37*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_38*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_38*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_38*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_38*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_38*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_38*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_38*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_38*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_39*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_39*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_39*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_39*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_39*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_39*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_39*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_39*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_28 + B12*BmL2_28 + B16*BmL3_28) + Bb2_40*(B12*BmL1_28 + B22*BmL2_28 + B26*BmL3_28) + Bb3_40*(B16*BmL1_28 + B26*BmL2_28 + B66*BmL3_28) + BmL1_40*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + BmL1_40*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + BmL2_40*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + BmL2_40*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + BmL3_40*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + BmL3_40*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_01*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_02*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_03*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_04*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_05*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_06*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_07*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_07*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_07*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_07*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_07*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_07*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_07*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_07*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_08*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_08*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_08*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_08*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_08*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_08*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_08*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_08*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_09*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_09*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_09*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_09*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_09*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_09*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_09*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_09*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_10*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_10*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_10*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_10*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_10*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_10*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_10*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_10*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_11*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_12*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_13*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_14*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_15*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_16*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_17*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_17*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_17*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_17*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_17*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_17*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_17*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_17*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_18*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_18*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_18*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_18*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_18*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_18*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_18*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_18*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_19*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_19*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_19*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_19*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_19*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_19*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_19*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_19*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_20*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_20*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_20*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_20*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_20*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_20*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_20*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_20*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_21*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_22*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_23*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_24*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_25*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_26*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_27*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_27*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_27*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_27*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_27*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_27*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_27*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_27*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_28*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_28*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_28*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_28*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_28*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_28*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_28*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_28*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_29*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_29*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_29*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_29*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_29*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_29*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_29*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_29*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_30*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_30*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_30*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_30*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_30*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_30*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_30*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_30*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_31*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_32*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + Bm3_33*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_34*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_35*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + Bm3_36*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_37*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_37*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_37*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_37*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_37*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_37*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_37*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_37*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_38*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_38*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_38*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_38*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_38*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_38*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_38*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_38*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_39*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_39*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_39*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_39*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_39*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_39*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_39*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_39*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_29 + B12*BmL2_29 + B16*BmL3_29) + Bb2_40*(B12*BmL1_29 + B22*BmL2_29 + B26*BmL3_29) + Bb3_40*(B16*BmL1_29 + B26*BmL2_29 + B66*BmL3_29) + BmL1_40*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + BmL1_40*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + BmL2_40*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + BmL2_40*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + BmL3_40*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + BmL3_40*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_01*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_02*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_03*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_04*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_05*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_06*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_07*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_07*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_07*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_07*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_07*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_07*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_07*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_07*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_08*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_08*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_08*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_08*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_08*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_08*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_08*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_08*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_09*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_09*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_09*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_09*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_09*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_09*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_09*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_09*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_10*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_10*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_10*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_10*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_10*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_10*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_10*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_10*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_11*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_12*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_13*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_14*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_15*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_16*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_17*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_17*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_17*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_17*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_17*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_17*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_17*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_17*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_18*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_18*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_18*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_18*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_18*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_18*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_18*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_18*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_19*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_19*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_19*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_19*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_19*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_19*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_19*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_19*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_20*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_20*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_20*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_20*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_20*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_20*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_20*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_20*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_21*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_22*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_23*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_24*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_25*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_26*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_27*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_27*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_27*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_27*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_27*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_27*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_27*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_27*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_28*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_28*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_28*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_28*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_28*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_28*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_28*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_28*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_29*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_29*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_29*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_29*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_29*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_29*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_29*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_29*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_30*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_30*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_30*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_30*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_30*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_30*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_30*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_30*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_31*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_32*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + Bm3_33*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_34*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_35*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + Bm3_36*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_37*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_37*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_37*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_37*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_37*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_37*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_37*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_37*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_38*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_38*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_38*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_38*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_38*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_38*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_38*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_38*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_39*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_39*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_39*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_39*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_39*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_39*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_39*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_39*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_30 + B12*BmL2_30 + B16*BmL3_30) + Bb2_40*(B12*BmL1_30 + B22*BmL2_30 + B26*BmL3_30) + Bb3_40*(B16*BmL1_30 + B26*BmL2_30 + B66*BmL3_30) + BmL1_40*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + BmL1_40*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + BmL2_40*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + BmL2_40*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + BmL3_40*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + BmL3_40*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_31 + A16*Bm3_31) + BmL2_07*(A12*Bm1_31 + A26*Bm3_31) + BmL3_07*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_31 + A16*Bm3_31) + BmL2_08*(A12*Bm1_31 + A26*Bm3_31) + BmL3_08*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_31 + A16*Bm3_31) + BmL2_09*(A12*Bm1_31 + A26*Bm3_31) + BmL3_09*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_31 + A16*Bm3_31) + BmL2_10*(A12*Bm1_31 + A26*Bm3_31) + BmL3_10*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_31 + A16*Bm3_31) + BmL2_17*(A12*Bm1_31 + A26*Bm3_31) + BmL3_17*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_31 + A16*Bm3_31) + BmL2_18*(A12*Bm1_31 + A26*Bm3_31) + BmL3_18*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_31 + A16*Bm3_31) + BmL2_19*(A12*Bm1_31 + A26*Bm3_31) + BmL3_19*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_31 + A16*Bm3_31) + BmL2_20*(A12*Bm1_31 + A26*Bm3_31) + BmL3_20*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_31 + A16*Bm3_31) + BmL2_27*(A12*Bm1_31 + A26*Bm3_31) + BmL3_27*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_31 + A16*Bm3_31) + BmL2_28*(A12*Bm1_31 + A26*Bm3_31) + BmL3_28*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_31 + A16*Bm3_31) + BmL2_29*(A12*Bm1_31 + A26*Bm3_31) + BmL3_29*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_31 + A16*Bm3_31) + BmL2_30*(A12*Bm1_31 + A26*Bm3_31) + BmL3_30*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_31 + A16*Bm3_31) + BmL2_37*(A12*Bm1_31 + A26*Bm3_31) + BmL3_37*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_31 + A16*Bm3_31) + BmL2_38*(A12*Bm1_31 + A26*Bm3_31) + BmL3_38*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_31 + A16*Bm3_31) + BmL2_39*(A12*Bm1_31 + A26*Bm3_31) + BmL3_39*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_31 + A16*Bm3_31) + BmL2_40*(A12*Bm1_31 + A26*Bm3_31) + BmL3_40*(A16*Bm1_31 + A66*Bm3_31))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_32 + A16*Bm3_32) + BmL2_07*(A12*Bm1_32 + A26*Bm3_32) + BmL3_07*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_32 + A16*Bm3_32) + BmL2_08*(A12*Bm1_32 + A26*Bm3_32) + BmL3_08*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_32 + A16*Bm3_32) + BmL2_09*(A12*Bm1_32 + A26*Bm3_32) + BmL3_09*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_32 + A16*Bm3_32) + BmL2_10*(A12*Bm1_32 + A26*Bm3_32) + BmL3_10*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_32 + A16*Bm3_32) + BmL2_17*(A12*Bm1_32 + A26*Bm3_32) + BmL3_17*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_32 + A16*Bm3_32) + BmL2_18*(A12*Bm1_32 + A26*Bm3_32) + BmL3_18*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_32 + A16*Bm3_32) + BmL2_19*(A12*Bm1_32 + A26*Bm3_32) + BmL3_19*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_32 + A16*Bm3_32) + BmL2_20*(A12*Bm1_32 + A26*Bm3_32) + BmL3_20*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_32 + A16*Bm3_32) + BmL2_27*(A12*Bm1_32 + A26*Bm3_32) + BmL3_27*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_32 + A16*Bm3_32) + BmL2_28*(A12*Bm1_32 + A26*Bm3_32) + BmL3_28*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_32 + A16*Bm3_32) + BmL2_29*(A12*Bm1_32 + A26*Bm3_32) + BmL3_29*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_32 + A16*Bm3_32) + BmL2_30*(A12*Bm1_32 + A26*Bm3_32) + BmL3_30*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_32 + A16*Bm3_32) + BmL2_37*(A12*Bm1_32 + A26*Bm3_32) + BmL3_37*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_32 + A16*Bm3_32) + BmL2_38*(A12*Bm1_32 + A26*Bm3_32) + BmL3_38*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_32 + A16*Bm3_32) + BmL2_39*(A12*Bm1_32 + A26*Bm3_32) + BmL3_39*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_32 + A16*Bm3_32) + BmL2_40*(A12*Bm1_32 + A26*Bm3_32) + BmL3_40*(A16*Bm1_32 + A66*Bm3_32))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A11*Bm1_33 + A16*Bm3_33) + BmL2_07*(A12*Bm1_33 + A26*Bm3_33) + BmL3_07*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A11*Bm1_33 + A16*Bm3_33) + BmL2_08*(A12*Bm1_33 + A26*Bm3_33) + BmL3_08*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A11*Bm1_33 + A16*Bm3_33) + BmL2_09*(A12*Bm1_33 + A26*Bm3_33) + BmL3_09*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A11*Bm1_33 + A16*Bm3_33) + BmL2_10*(A12*Bm1_33 + A26*Bm3_33) + BmL3_10*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A11*Bm1_33 + A16*Bm3_33) + BmL2_17*(A12*Bm1_33 + A26*Bm3_33) + BmL3_17*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A11*Bm1_33 + A16*Bm3_33) + BmL2_18*(A12*Bm1_33 + A26*Bm3_33) + BmL3_18*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A11*Bm1_33 + A16*Bm3_33) + BmL2_19*(A12*Bm1_33 + A26*Bm3_33) + BmL3_19*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A11*Bm1_33 + A16*Bm3_33) + BmL2_20*(A12*Bm1_33 + A26*Bm3_33) + BmL3_20*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A11*Bm1_33 + A16*Bm3_33) + BmL2_27*(A12*Bm1_33 + A26*Bm3_33) + BmL3_27*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A11*Bm1_33 + A16*Bm3_33) + BmL2_28*(A12*Bm1_33 + A26*Bm3_33) + BmL3_28*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A11*Bm1_33 + A16*Bm3_33) + BmL2_29*(A12*Bm1_33 + A26*Bm3_33) + BmL3_29*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A11*Bm1_33 + A16*Bm3_33) + BmL2_30*(A12*Bm1_33 + A26*Bm3_33) + BmL3_30*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A11*Bm1_33 + A16*Bm3_33) + BmL2_37*(A12*Bm1_33 + A26*Bm3_33) + BmL3_37*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A11*Bm1_33 + A16*Bm3_33) + BmL2_38*(A12*Bm1_33 + A26*Bm3_33) + BmL3_38*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A11*Bm1_33 + A16*Bm3_33) + BmL2_39*(A12*Bm1_33 + A26*Bm3_33) + BmL3_39*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A11*Bm1_33 + A16*Bm3_33) + BmL2_40*(A12*Bm1_33 + A26*Bm3_33) + BmL3_40*(A16*Bm1_33 + A66*Bm3_33))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_34 + A16*Bm3_34) + BmL2_07*(A22*Bm2_34 + A26*Bm3_34) + BmL3_07*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_34 + A16*Bm3_34) + BmL2_08*(A22*Bm2_34 + A26*Bm3_34) + BmL3_08*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_34 + A16*Bm3_34) + BmL2_09*(A22*Bm2_34 + A26*Bm3_34) + BmL3_09*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_34 + A16*Bm3_34) + BmL2_10*(A22*Bm2_34 + A26*Bm3_34) + BmL3_10*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_34 + A16*Bm3_34) + BmL2_17*(A22*Bm2_34 + A26*Bm3_34) + BmL3_17*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_34 + A16*Bm3_34) + BmL2_18*(A22*Bm2_34 + A26*Bm3_34) + BmL3_18*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_34 + A16*Bm3_34) + BmL2_19*(A22*Bm2_34 + A26*Bm3_34) + BmL3_19*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_34 + A16*Bm3_34) + BmL2_20*(A22*Bm2_34 + A26*Bm3_34) + BmL3_20*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_34 + A16*Bm3_34) + BmL2_27*(A22*Bm2_34 + A26*Bm3_34) + BmL3_27*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_34 + A16*Bm3_34) + BmL2_28*(A22*Bm2_34 + A26*Bm3_34) + BmL3_28*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_34 + A16*Bm3_34) + BmL2_29*(A22*Bm2_34 + A26*Bm3_34) + BmL3_29*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_34 + A16*Bm3_34) + BmL2_30*(A22*Bm2_34 + A26*Bm3_34) + BmL3_30*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_34 + A16*Bm3_34) + BmL2_37*(A22*Bm2_34 + A26*Bm3_34) + BmL3_37*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_34 + A16*Bm3_34) + BmL2_38*(A22*Bm2_34 + A26*Bm3_34) + BmL3_38*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_34 + A16*Bm3_34) + BmL2_39*(A22*Bm2_34 + A26*Bm3_34) + BmL3_39*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_34 + A16*Bm3_34) + BmL2_40*(A22*Bm2_34 + A26*Bm3_34) + BmL3_40*(A26*Bm2_34 + A66*Bm3_34))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_35 + A16*Bm3_35) + BmL2_07*(A22*Bm2_35 + A26*Bm3_35) + BmL3_07*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_35 + A16*Bm3_35) + BmL2_08*(A22*Bm2_35 + A26*Bm3_35) + BmL3_08*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_35 + A16*Bm3_35) + BmL2_09*(A22*Bm2_35 + A26*Bm3_35) + BmL3_09*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_35 + A16*Bm3_35) + BmL2_10*(A22*Bm2_35 + A26*Bm3_35) + BmL3_10*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_35 + A16*Bm3_35) + BmL2_17*(A22*Bm2_35 + A26*Bm3_35) + BmL3_17*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_35 + A16*Bm3_35) + BmL2_18*(A22*Bm2_35 + A26*Bm3_35) + BmL3_18*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_35 + A16*Bm3_35) + BmL2_19*(A22*Bm2_35 + A26*Bm3_35) + BmL3_19*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_35 + A16*Bm3_35) + BmL2_20*(A22*Bm2_35 + A26*Bm3_35) + BmL3_20*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_35 + A16*Bm3_35) + BmL2_27*(A22*Bm2_35 + A26*Bm3_35) + BmL3_27*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_35 + A16*Bm3_35) + BmL2_28*(A22*Bm2_35 + A26*Bm3_35) + BmL3_28*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_35 + A16*Bm3_35) + BmL2_29*(A22*Bm2_35 + A26*Bm3_35) + BmL3_29*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_35 + A16*Bm3_35) + BmL2_30*(A22*Bm2_35 + A26*Bm3_35) + BmL3_30*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_35 + A16*Bm3_35) + BmL2_37*(A22*Bm2_35 + A26*Bm3_35) + BmL3_37*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_35 + A16*Bm3_35) + BmL2_38*(A22*Bm2_35 + A26*Bm3_35) + BmL3_38*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_35 + A16*Bm3_35) + BmL2_39*(A22*Bm2_35 + A26*Bm3_35) + BmL3_39*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_35 + A16*Bm3_35) + BmL2_40*(A22*Bm2_35 + A26*Bm3_35) + BmL3_40*(A26*Bm2_35 + A66*Bm3_35))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_07*(A12*Bm2_36 + A16*Bm3_36) + BmL2_07*(A22*Bm2_36 + A26*Bm3_36) + BmL3_07*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_08*(A12*Bm2_36 + A16*Bm3_36) + BmL2_08*(A22*Bm2_36 + A26*Bm3_36) + BmL3_08*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_09*(A12*Bm2_36 + A16*Bm3_36) + BmL2_09*(A22*Bm2_36 + A26*Bm3_36) + BmL3_09*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_10*(A12*Bm2_36 + A16*Bm3_36) + BmL2_10*(A22*Bm2_36 + A26*Bm3_36) + BmL3_10*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_17*(A12*Bm2_36 + A16*Bm3_36) + BmL2_17*(A22*Bm2_36 + A26*Bm3_36) + BmL3_17*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_18*(A12*Bm2_36 + A16*Bm3_36) + BmL2_18*(A22*Bm2_36 + A26*Bm3_36) + BmL3_18*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_19*(A12*Bm2_36 + A16*Bm3_36) + BmL2_19*(A22*Bm2_36 + A26*Bm3_36) + BmL3_19*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_20*(A12*Bm2_36 + A16*Bm3_36) + BmL2_20*(A22*Bm2_36 + A26*Bm3_36) + BmL3_20*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_27*(A12*Bm2_36 + A16*Bm3_36) + BmL2_27*(A22*Bm2_36 + A26*Bm3_36) + BmL3_27*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_28*(A12*Bm2_36 + A16*Bm3_36) + BmL2_28*(A22*Bm2_36 + A26*Bm3_36) + BmL3_28*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_29*(A12*Bm2_36 + A16*Bm3_36) + BmL2_29*(A22*Bm2_36 + A26*Bm3_36) + BmL3_29*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_30*(A12*Bm2_36 + A16*Bm3_36) + BmL2_30*(A22*Bm2_36 + A26*Bm3_36) + BmL3_30*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_37*(A12*Bm2_36 + A16*Bm3_36) + BmL2_37*(A22*Bm2_36 + A26*Bm3_36) + BmL3_37*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_38*(A12*Bm2_36 + A16*Bm3_36) + BmL2_38*(A22*Bm2_36 + A26*Bm3_36) + BmL3_38*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_39*(A12*Bm2_36 + A16*Bm3_36) + BmL2_39*(A22*Bm2_36 + A26*Bm3_36) + BmL3_39*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(BmL1_40*(A12*Bm2_36 + A16*Bm3_36) + BmL2_40*(A22*Bm2_36 + A26*Bm3_36) + BmL3_40*(A26*Bm2_36 + A66*Bm3_36))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_01*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_02*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_03*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_04*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_05*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_06*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_07*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_07*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_07*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_07*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_07*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_07*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_07*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_07*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_08*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_08*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_08*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_08*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_08*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_08*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_08*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_08*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_09*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_09*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_09*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_09*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_09*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_09*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_09*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_09*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_10*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_10*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_10*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_10*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_10*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_10*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_10*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_10*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_11*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_12*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_13*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_14*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_15*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_16*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_17*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_17*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_17*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_17*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_17*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_17*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_17*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_17*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_18*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_18*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_18*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_18*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_18*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_18*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_18*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_18*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_19*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_19*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_19*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_19*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_19*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_19*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_19*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_19*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_20*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_20*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_20*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_20*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_20*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_20*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_20*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_20*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_21*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_22*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_23*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_24*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_25*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_26*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_27*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_27*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_27*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_27*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_27*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_27*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_27*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_27*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_28*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_28*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_28*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_28*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_28*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_28*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_28*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_28*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_29*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_29*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_29*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_29*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_29*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_29*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_29*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_29*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_30*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_30*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_30*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_30*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_30*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_30*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_30*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_30*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_31*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_32*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + Bm3_33*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_34*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_35*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + Bm3_36*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_37*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_37*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_37*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_37*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_37*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_37*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_37*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_37*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_38*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_38*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_38*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_38*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_38*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_38*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_38*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_38*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_39*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_39*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_39*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_39*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_39*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_39*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_39*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_39*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_37 + B12*BmL2_37 + B16*BmL3_37) + Bb2_40*(B12*BmL1_37 + B22*BmL2_37 + B26*BmL3_37) + Bb3_40*(B16*BmL1_37 + B26*BmL2_37 + B66*BmL3_37) + BmL1_40*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + BmL1_40*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + BmL2_40*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + BmL2_40*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + BmL3_40*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + BmL3_40*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_01*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_02*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_03*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_04*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_05*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_06*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_07*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_07*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_07*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_07*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_07*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_07*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_07*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_07*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_08*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_08*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_08*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_08*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_08*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_08*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_08*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_08*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_09*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_09*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_09*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_09*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_09*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_09*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_09*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_09*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_10*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_10*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_10*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_10*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_10*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_10*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_10*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_10*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_11*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_12*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_13*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_14*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_15*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_16*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_17*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_17*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_17*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_17*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_17*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_17*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_17*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_17*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_18*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_18*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_18*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_18*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_18*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_18*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_18*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_18*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_19*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_19*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_19*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_19*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_19*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_19*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_19*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_19*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_20*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_20*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_20*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_20*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_20*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_20*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_20*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_20*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_21*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_22*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_23*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_24*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_25*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_26*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_27*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_27*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_27*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_27*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_27*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_27*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_27*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_27*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_28*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_28*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_28*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_28*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_28*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_28*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_28*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_28*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_29*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_29*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_29*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_29*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_29*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_29*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_29*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_29*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_30*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_30*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_30*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_30*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_30*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_30*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_30*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_30*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_31*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_32*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + Bm3_33*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_34*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_35*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + Bm3_36*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_37*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_37*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_37*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_37*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_37*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_37*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_37*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_37*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_38*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_38*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_38*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_38*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_38*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_38*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_38*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_38*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_39*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_39*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_39*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_39*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_39*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_39*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_39*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_39*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_38 + B12*BmL2_38 + B16*BmL3_38) + Bb2_40*(B12*BmL1_38 + B22*BmL2_38 + B26*BmL3_38) + Bb3_40*(B16*BmL1_38 + B26*BmL2_38 + B66*BmL3_38) + BmL1_40*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + BmL1_40*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + BmL2_40*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + BmL2_40*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + BmL3_40*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + BmL3_40*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_01*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_02*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_03*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_04*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_05*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_06*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_07*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_07*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_07*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_07*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_07*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_07*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_07*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_07*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_08*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_08*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_08*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_08*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_08*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_08*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_08*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_08*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_09*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_09*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_09*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_09*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_09*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_09*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_09*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_09*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_10*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_10*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_10*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_10*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_10*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_10*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_10*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_10*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_11*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_12*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_13*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_14*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_15*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_16*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_17*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_17*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_17*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_17*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_17*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_17*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_17*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_17*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_18*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_18*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_18*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_18*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_18*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_18*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_18*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_18*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_19*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_19*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_19*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_19*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_19*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_19*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_19*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_19*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_20*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_20*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_20*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_20*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_20*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_20*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_20*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_20*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_21*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_22*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_23*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_24*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_25*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_26*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_27*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_27*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_27*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_27*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_27*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_27*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_27*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_27*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_28*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_28*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_28*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_28*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_28*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_28*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_28*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_28*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_29*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_29*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_29*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_29*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_29*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_29*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_29*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_29*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_30*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_30*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_30*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_30*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_30*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_30*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_30*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_30*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_31*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_32*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + Bm3_33*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_34*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_35*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + Bm3_36*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_37*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_37*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_37*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_37*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_37*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_37*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_37*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_37*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_38*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_38*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_38*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_38*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_38*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_38*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_38*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_38*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_39*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_39*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_39*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_39*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_39*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_39*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_39*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_39*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_39 + B12*BmL2_39 + B16*BmL3_39) + Bb2_40*(B12*BmL1_39 + B22*BmL2_39 + B26*BmL3_39) + Bb3_40*(B16*BmL1_39 + B26*BmL2_39 + B66*BmL3_39) + BmL1_40*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + BmL1_40*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + BmL2_40*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + BmL2_40*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + BmL3_40*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + BmL3_40*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_01*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_02*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_02*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_03*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_03*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_04*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_04*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_05*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_05*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_06*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_06*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_07*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_07*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_07*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_07*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_07*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_07*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_07*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_07*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_07*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_08*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_08*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_08*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_08*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_08*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_08*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_08*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_08*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_08*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_09*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_09*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_09*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_09*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_09*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_09*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_09*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_09*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_10*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_10*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_10*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_10*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_10*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_10*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_10*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_10*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_11*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_11*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_12*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_12*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_13*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_14*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_15*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_15*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_16*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_16*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_17*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_17*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_17*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_17*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_17*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_17*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_17*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_17*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_18*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_18*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_18*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_18*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_18*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_18*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_18*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_18*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_19*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_19*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_19*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_19*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_19*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_19*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_19*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_19*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_19*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_20*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_20*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_20*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_20*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_20*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_20*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_20*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_20*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_20*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_21*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_21*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_22*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_22*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_23*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_23*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_24*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_24*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_25*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_25*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_26*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_26*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_27*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_27*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_27*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_27*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_27*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_27*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_27*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_27*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_27*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_28*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_28*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_28*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_28*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_28*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_28*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_28*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_28*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_28*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_29*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_29*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_29*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_29*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_29*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_29*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_29*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_29*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_29*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_30*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_30*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_30*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_30*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_30*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_30*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_30*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_30*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_30*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_31*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_31*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_32*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_32*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm1_33*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + Bm3_33*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_34*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_34*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_35*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_35*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bm2_36*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + Bm3_36*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_37*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_37*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_37*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_37*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_37*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_37*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_37*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_37*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_37*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_38*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_38*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_38*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_38*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_38*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_38*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_38*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_38*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_38*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_39*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_39*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_39*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_39*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_39*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_39*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_39*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_39*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_39*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))
                k += 1
                KCNLv[k] += 0.25*lex*ley*weight*(Bb1_40*(B11*BmL1_40 + B12*BmL2_40 + B16*BmL3_40) + Bb2_40*(B12*BmL1_40 + B22*BmL2_40 + B26*BmL3_40) + Bb3_40*(B16*BmL1_40 + B26*BmL2_40 + B66*BmL3_40) + BmL1_40*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + BmL1_40*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + BmL2_40*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + BmL2_40*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + BmL3_40*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + BmL3_40*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40))


cpdef void update_KG(double [::1] u,
                     BFSCPlate2D plate,
                     double [::1] points,
                     double [::1] weights,
                     long [::1] KGr,
                     long [::1] KGc,
                     double [::1] KGv,
                     ):
    """Update sparse vectors for geometric stiffness matrix KG

    Properties
    ----------
    u : np.array
        Global displacement vector
    plate : `.BFSCPlate2D` object
        The plate element being added to KG
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KGr : np.array
       Array to store row positions of sparse values
    KGc : np.array
       Array to store column positions of sparse values
    KGv : np.array
        Array to store sparse values

    """
    cdef double *ue
    cdef int c1, c2, c3, c4, i, j, k, nint
    cdef double lex, ley, Nxx, Nyy, Nxy
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double Bm1_01, Bm1_02, Bm1_03, Bm1_11, Bm1_12, Bm1_13, Bm1_21, Bm1_22, Bm1_23, Bm1_31, Bm1_32, Bm1_33, Bm2_04, Bm2_05, Bm2_06, Bm2_14, Bm2_15, Bm2_16, Bm2_24, Bm2_25, Bm2_26, Bm2_34, Bm2_35, Bm2_36, Bm3_01, Bm3_02, Bm3_03, Bm3_04, Bm3_05, Bm3_06, Bm3_11, Bm3_12, Bm3_13, Bm3_14, Bm3_15, Bm3_16, Bm3_21, Bm3_22, Bm3_23, Bm3_24, Bm3_25, Bm3_26, Bm3_31, Bm3_32, Bm3_33, Bm3_34, Bm3_35, Bm3_36
    cdef double Bb1_07, Bb1_08, Bb1_09, Bb1_10, Bb1_17, Bb1_18, Bb1_19, Bb1_20, Bb1_27, Bb1_28, Bb1_29, Bb1_30, Bb1_37, Bb1_38, Bb1_39, Bb1_40, Bb2_07, Bb2_08, Bb2_09, Bb2_10, Bb2_17, Bb2_18, Bb2_19, Bb2_20, Bb2_27, Bb2_28, Bb2_29, Bb2_30, Bb2_37, Bb2_38, Bb2_39, Bb2_40, Bb3_07, Bb3_08, Bb3_09, Bb3_10, Bb3_17, Bb3_18, Bb3_19, Bb3_20, Bb3_27, Bb3_28, Bb3_29, Bb3_30, Bb3_37, Bb3_38, Bb3_39, Bb3_40
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66
    cdef double G1_07, G1_08, G1_09, G1_10, G1_17, G1_18, G1_19, G1_20, G1_27, G1_28, G1_29, G1_30, G1_37, G1_38, G1_39, G1_40, G2_07, G2_08, G2_09, G2_10, G2_17, G2_18, G2_19, G2_20, G2_27, G2_28, G2_29, G2_30, G2_37, G2_38, G2_39, G2_40

    with nogil:
        lex = plate.lex
        ley = plate.ley

        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        for i in range(DOF):
            plate.u[0*DOF + i] = u[c1 + i]
        for i in range(DOF):
            plate.u[1*DOF + i] = u[c2 + i]
        for i in range(DOF):
            plate.u[2*DOF + i] = u[c3 + i]
        for i in range(DOF):
            plate.u[3*DOF + i] = u[c4 + i]

        ue = &plate.u[0]

        nint = points.shape[0]

        k = plate.init_k_KG
        KGr[k] = 6+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                Bm1_01 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm1_02 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm1_03 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm1_11 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm1_12 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm1_13 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm1_21 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm1_22 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm1_23 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm1_31 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                Bm1_32 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                Bm1_33 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                Bm2_04 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm2_05 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                Bm2_06 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm2_14 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm2_15 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                Bm2_16 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm2_24 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm2_25 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                Bm2_26 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm2_34 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm2_35 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                Bm2_36 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm3_01 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm3_02 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                Bm3_03 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm3_04 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm3_05 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm3_06 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                Bm3_11 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm3_12 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                Bm3_13 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm3_14 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm3_15 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm3_16 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                Bm3_21 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm3_22 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                Bm3_23 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                Bm3_24 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm3_25 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm3_26 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                Bm3_31 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm3_32 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                Bm3_33 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                Bm3_34 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                Bm3_35 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                Bm3_36 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

                Bb1_07 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_08 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_09 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_10 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_17 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_18 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_19 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_20 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_27 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_28 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_29 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_30 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_37 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_38 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_39 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_40 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_07 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_08 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_09 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_10 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_17 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_18 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_19 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_20 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_27 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_28 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_29 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_30 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_37 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_38 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_39 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_40 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_07 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_08 = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_09 = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_10 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_17 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_18 = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_19 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_20 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_27 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_28 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_29 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_30 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_37 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_38 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_39 = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_40 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                G1_07 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_08 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_09 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_10 = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_17 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_18 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_19 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_27 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_28 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_29 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_30 = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_37 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_38 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_39 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_40 = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G2_07 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_08 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_09 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_10 = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_17 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_18 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_19 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_27 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_28 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_29 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_30 = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_37 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_38 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_39 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_40 = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley

                Nxx = ue[0]*(A11*Bm1_01 + A16*Bm3_01) + ue[10]*(A11*Bm1_11 + A16*Bm3_11) + ue[11]*(A11*Bm1_12 + A16*Bm3_12) + ue[12]*(A11*Bm1_13 + A16*Bm3_13) + ue[13]*(A12*Bm2_14 + A16*Bm3_14) + ue[14]*(A12*Bm2_15 + A16*Bm3_15) + ue[15]*(A12*Bm2_16 + A16*Bm3_16) + ue[16]*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + ue[17]*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + ue[18]*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + ue[19]*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + ue[1]*(A11*Bm1_02 + A16*Bm3_02) + ue[20]*(A11*Bm1_21 + A16*Bm3_21) + ue[21]*(A11*Bm1_22 + A16*Bm3_22) + ue[22]*(A11*Bm1_23 + A16*Bm3_23) + ue[23]*(A12*Bm2_24 + A16*Bm3_24) + ue[24]*(A12*Bm2_25 + A16*Bm3_25) + ue[25]*(A12*Bm2_26 + A16*Bm3_26) + ue[26]*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + ue[27]*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + ue[28]*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + ue[29]*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + ue[2]*(A11*Bm1_03 + A16*Bm3_03) + ue[30]*(A11*Bm1_31 + A16*Bm3_31) + ue[31]*(A11*Bm1_32 + A16*Bm3_32) + ue[32]*(A11*Bm1_33 + A16*Bm3_33) + ue[33]*(A12*Bm2_34 + A16*Bm3_34) + ue[34]*(A12*Bm2_35 + A16*Bm3_35) + ue[35]*(A12*Bm2_36 + A16*Bm3_36) + ue[36]*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + ue[37]*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + ue[38]*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + ue[39]*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + ue[3]*(A12*Bm2_04 + A16*Bm3_04) + ue[4]*(A12*Bm2_05 + A16*Bm3_05) + ue[5]*(A12*Bm2_06 + A16*Bm3_06) + ue[6]*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + ue[7]*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + ue[8]*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + ue[9]*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10)
                Nyy = ue[0]*(A12*Bm1_01 + A26*Bm3_01) + ue[10]*(A12*Bm1_11 + A26*Bm3_11) + ue[11]*(A12*Bm1_12 + A26*Bm3_12) + ue[12]*(A12*Bm1_13 + A26*Bm3_13) + ue[13]*(A22*Bm2_14 + A26*Bm3_14) + ue[14]*(A22*Bm2_15 + A26*Bm3_15) + ue[15]*(A22*Bm2_16 + A26*Bm3_16) + ue[16]*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + ue[17]*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + ue[18]*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + ue[19]*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + ue[1]*(A12*Bm1_02 + A26*Bm3_02) + ue[20]*(A12*Bm1_21 + A26*Bm3_21) + ue[21]*(A12*Bm1_22 + A26*Bm3_22) + ue[22]*(A12*Bm1_23 + A26*Bm3_23) + ue[23]*(A22*Bm2_24 + A26*Bm3_24) + ue[24]*(A22*Bm2_25 + A26*Bm3_25) + ue[25]*(A22*Bm2_26 + A26*Bm3_26) + ue[26]*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + ue[27]*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + ue[28]*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + ue[29]*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + ue[2]*(A12*Bm1_03 + A26*Bm3_03) + ue[30]*(A12*Bm1_31 + A26*Bm3_31) + ue[31]*(A12*Bm1_32 + A26*Bm3_32) + ue[32]*(A12*Bm1_33 + A26*Bm3_33) + ue[33]*(A22*Bm2_34 + A26*Bm3_34) + ue[34]*(A22*Bm2_35 + A26*Bm3_35) + ue[35]*(A22*Bm2_36 + A26*Bm3_36) + ue[36]*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + ue[37]*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + ue[38]*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + ue[39]*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + ue[3]*(A22*Bm2_04 + A26*Bm3_04) + ue[4]*(A22*Bm2_05 + A26*Bm3_05) + ue[5]*(A22*Bm2_06 + A26*Bm3_06) + ue[6]*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + ue[7]*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + ue[8]*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + ue[9]*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10)
                Nxy = ue[0]*(A16*Bm1_01 + A66*Bm3_01) + ue[10]*(A16*Bm1_11 + A66*Bm3_11) + ue[11]*(A16*Bm1_12 + A66*Bm3_12) + ue[12]*(A16*Bm1_13 + A66*Bm3_13) + ue[13]*(A26*Bm2_14 + A66*Bm3_14) + ue[14]*(A26*Bm2_15 + A66*Bm3_15) + ue[15]*(A26*Bm2_16 + A66*Bm3_16) + ue[16]*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17) + ue[17]*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18) + ue[18]*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19) + ue[19]*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20) + ue[1]*(A16*Bm1_02 + A66*Bm3_02) + ue[20]*(A16*Bm1_21 + A66*Bm3_21) + ue[21]*(A16*Bm1_22 + A66*Bm3_22) + ue[22]*(A16*Bm1_23 + A66*Bm3_23) + ue[23]*(A26*Bm2_24 + A66*Bm3_24) + ue[24]*(A26*Bm2_25 + A66*Bm3_25) + ue[25]*(A26*Bm2_26 + A66*Bm3_26) + ue[26]*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27) + ue[27]*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28) + ue[28]*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29) + ue[29]*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30) + ue[2]*(A16*Bm1_03 + A66*Bm3_03) + ue[30]*(A16*Bm1_31 + A66*Bm3_31) + ue[31]*(A16*Bm1_32 + A66*Bm3_32) + ue[32]*(A16*Bm1_33 + A66*Bm3_33) + ue[33]*(A26*Bm2_34 + A66*Bm3_34) + ue[34]*(A26*Bm2_35 + A66*Bm3_35) + ue[35]*(A26*Bm2_36 + A66*Bm3_36) + ue[36]*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37) + ue[37]*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38) + ue[38]*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39) + ue[39]*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40) + ue[3]*(A26*Bm2_04 + A66*Bm3_04) + ue[4]*(A26*Bm2_05 + A66*Bm3_05) + ue[5]*(A26*Bm2_06 + A66*Bm3_06) + ue[6]*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07) + ue[7]*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08) + ue[8]*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09) + ue[9]*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10)

                k = plate.init_k_KG
                KGv[k] += G1_07*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_07*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_08*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_09*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_10*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_17*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_18*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_19*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_20*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_27*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_28*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_29*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_30*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_37*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_38*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_39*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_40*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_07*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_08*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_09*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_10*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_17*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_18*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_19*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_20*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_27*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_28*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_29*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_30*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_37*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_38*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_39*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_40*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_07*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_08*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_09*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_10*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_17*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_18*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_19*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_20*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_27*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_28*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_29*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_30*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_37*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_38*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_39*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_40*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_07*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_08*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_09*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_10*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_17*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_18*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_19*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_20*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_27*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_28*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_29*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_30*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_37*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_38*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_39*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_40*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_07*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_08*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_09*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_10*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_17*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_18*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_19*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_20*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_27*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_28*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_29*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_30*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_37*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_38*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_39*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_40*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_07*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_08*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_09*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_10*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_17*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_18*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_19*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_20*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_27*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_28*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_29*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_30*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_37*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_38*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_39*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_40*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_07*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_08*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_09*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_10*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_17*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_18*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_19*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_20*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_27*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_28*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_29*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_30*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_37*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_38*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_39*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_40*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_07*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_08*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_09*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_10*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_17*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_18*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_19*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_20*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_27*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_28*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_29*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_30*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_37*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_38*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_39*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_40*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_07*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_08*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_09*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_10*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_17*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_18*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_19*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_20*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_27*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_28*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_29*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_30*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_37*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_38*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_39*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_40*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_07*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_08*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_09*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_10*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_17*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_18*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_19*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_20*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_27*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_28*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_29*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_30*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_37*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_38*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_39*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_40*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_07*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_08*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_09*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_10*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_17*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_18*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_19*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_20*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_27*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_28*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_29*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_30*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_37*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_38*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_39*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_40*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_07*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_08*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_09*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_10*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_17*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_18*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_19*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_20*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_27*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_28*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_29*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_30*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_37*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_38*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_39*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_40*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_07*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_08*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_09*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_10*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_17*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_18*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_19*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_20*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_27*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_28*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_29*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_30*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_37*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_38*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_39*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_40*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_07*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_08*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_09*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_10*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_17*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_18*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_19*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_20*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_27*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_28*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_29*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_30*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_37*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_38*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_39*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_40*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_07*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_08*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_09*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_10*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_17*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_18*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_19*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_20*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_27*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_28*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_29*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_30*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_37*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_38*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_39*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_40*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_07*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_08*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_09*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_10*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_17*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_18*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_19*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_20*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_27*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_28*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_29*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_30*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_37*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_38*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_39*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_40*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)


cpdef void update_KG_cte_N(double Nxx,
                           double Nyy,
                           double Nxy,
                           BFSCPlate2D plate,
                           double [::1] points,
                           double [::1] weights,
                           long [::1] KGr,
                           long [::1] KGc,
                           double [::1] KGv,
                           ):
    """Update sparse vectors for geometric stiffness matrix KG

    Properties
    ----------
    Nxx, Nyy, Nxy: float
        Constant membrane forces within element of the ``plate`` parameter
    plate : `.BFSCPlate2D` object
        The plate element being added to KG
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KGr : np.array
       Array to store row positions of sparse values
    KGc : np.array
       Array to store column positions of sparse values
    KGv : np.array
        Array to store sparse values

    """
    cdef double *ue
    cdef int c1, c2, c3, c4, i, j, k, nint
    cdef double lex, ley
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double G1_07, G1_08, G1_09, G1_10, G1_17, G1_18, G1_19, G1_20, G1_27, G1_28, G1_29, G1_30, G1_37, G1_38, G1_39, G1_40, G2_07, G2_08, G2_09, G2_10, G2_17, G2_18, G2_19, G2_20, G2_27, G2_28, G2_29, G2_30, G2_37, G2_38, G2_39, G2_40

    with nogil:
        lex = plate.lex
        ley = plate.ley

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        nint = points.shape[0]

        k = plate.init_k_KG
        KGr[k] = 6+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c1
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c2
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c3
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 6+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 7+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 8+c4
        KGc[k] = 9+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c1
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c2
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c3
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 6+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 7+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 8+c4
        k += 1
        KGr[k] = 9+c4
        KGc[k] = 9+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                G1_07 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_08 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_09 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_10 = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_17 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_18 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_19 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_27 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_28 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_29 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_30 = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_37 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_38 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_39 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_40 = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G2_07 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_08 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_09 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_10 = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_17 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_18 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_19 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_27 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_28 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_29 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_30 = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_37 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_38 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_39 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_40 = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley

                k = plate.init_k_KG
                KGv[k] += G1_07*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_07*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_08*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_09*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_10*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_17*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_18*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_19*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_20*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_27*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_28*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_29*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_30*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_37*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_38*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_39*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_07*Nxx*lex*ley*weight + 0.25*G2_07*Nxy*lex*ley*weight) + G2_40*(0.25*G1_07*Nxy*lex*ley*weight + 0.25*G2_07*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_07*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_08*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_09*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_10*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_17*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_18*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_19*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_20*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_27*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_28*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_29*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_30*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_37*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_38*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_39*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_08*Nxx*lex*ley*weight + 0.25*G2_08*Nxy*lex*ley*weight) + G2_40*(0.25*G1_08*Nxy*lex*ley*weight + 0.25*G2_08*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_07*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_08*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_09*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_10*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_17*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_18*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_19*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_20*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_27*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_28*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_29*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_30*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_37*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_38*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_39*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_40*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_07*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_08*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_09*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_10*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_17*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_18*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_19*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_20*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_27*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_28*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_29*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_30*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_37*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_38*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_39*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_40*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_07*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_08*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_09*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_10*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_17*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_18*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_19*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_20*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_27*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_28*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_29*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_30*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_37*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_38*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_39*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_40*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_07*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_08*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_09*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_10*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_17*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_18*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_19*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_20*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_27*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_28*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_29*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_30*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_37*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_38*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_39*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_40*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_07*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_08*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_09*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_10*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_17*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_18*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_19*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_20*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_27*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_28*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_29*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_30*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_37*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_38*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_39*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_19*Nxx*lex*ley*weight + 0.25*G2_19*Nxy*lex*ley*weight) + G2_40*(0.25*G1_19*Nxy*lex*ley*weight + 0.25*G2_19*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_07*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_08*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_09*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_10*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_17*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_18*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_19*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_20*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_27*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_28*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_29*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_30*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_37*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_38*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_39*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_20*Nxx*lex*ley*weight + 0.25*G2_20*Nxy*lex*ley*weight) + G2_40*(0.25*G1_20*Nxy*lex*ley*weight + 0.25*G2_20*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_07*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_08*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_09*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_10*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_17*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_18*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_19*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_20*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_27*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_28*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_29*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_30*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_37*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_38*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_39*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_27*Nxx*lex*ley*weight + 0.25*G2_27*Nxy*lex*ley*weight) + G2_40*(0.25*G1_27*Nxy*lex*ley*weight + 0.25*G2_27*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_07*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_08*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_09*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_10*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_17*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_18*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_19*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_20*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_27*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_28*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_29*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_30*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_37*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_38*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_39*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_28*Nxx*lex*ley*weight + 0.25*G2_28*Nxy*lex*ley*weight) + G2_40*(0.25*G1_28*Nxy*lex*ley*weight + 0.25*G2_28*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_07*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_08*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_09*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_10*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_17*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_18*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_19*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_20*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_27*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_28*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_29*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_30*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_37*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_38*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_39*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_29*Nxx*lex*ley*weight + 0.25*G2_29*Nxy*lex*ley*weight) + G2_40*(0.25*G1_29*Nxy*lex*ley*weight + 0.25*G2_29*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_07*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_08*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_09*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_10*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_17*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_18*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_19*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_20*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_27*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_28*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_29*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_30*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_37*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_38*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_39*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_30*Nxx*lex*ley*weight + 0.25*G2_30*Nxy*lex*ley*weight) + G2_40*(0.25*G1_30*Nxy*lex*ley*weight + 0.25*G2_30*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_07*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_08*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_09*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_10*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_17*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_18*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_19*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_20*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_27*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_28*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_29*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_30*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_37*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_38*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_39*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_37*Nxx*lex*ley*weight + 0.25*G2_37*Nxy*lex*ley*weight) + G2_40*(0.25*G1_37*Nxy*lex*ley*weight + 0.25*G2_37*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_07*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_08*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_09*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_10*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_17*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_18*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_19*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_20*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_27*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_28*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_29*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_30*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_37*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_38*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_39*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_38*Nxx*lex*ley*weight + 0.25*G2_38*Nxy*lex*ley*weight) + G2_40*(0.25*G1_38*Nxy*lex*ley*weight + 0.25*G2_38*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_07*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_08*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_09*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_10*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_17*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_18*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_19*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_20*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_27*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_28*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_29*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_30*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_37*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_38*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_39*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_39*Nxx*lex*ley*weight + 0.25*G2_39*Nxy*lex*ley*weight) + G2_40*(0.25*G1_39*Nxy*lex*ley*weight + 0.25*G2_39*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_07*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_07*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_08*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_08*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_09*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_10*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_17*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_18*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_19*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_19*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_20*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_20*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_27*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_27*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_28*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_28*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_29*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_29*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_30*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_30*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_37*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_37*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_38*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_38*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_39*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_39*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_40*(0.25*G1_40*Nxx*lex*ley*weight + 0.25*G2_40*Nxy*lex*ley*weight) + G2_40*(0.25*G1_40*Nxy*lex*ley*weight + 0.25*G2_40*Nyy*lex*ley*weight)


cpdef void update_M(BFSCPlate2D plate,
                    long [::1] Mr,
                    long [::1] Mc,
                    double [::1] Mv,
                    ):
    """Update sparse vectors for mass matrix M

    Properties
    ----------
    plate : `.BFSCPlate2D` object
        The plate element being added to M
    Mr : np.array
        Array to store row positions of sparse values
    Mc : np.array
        Array to store column positions of sparse values
    Mv : np.array
        Array to store sparse values

    """
    cdef int c1, c2, c3, c4, k
    cdef double lex, ley, h, rho

    with nogil:
        lex = plate.lex
        ley = plate.ley
        h = plate.h
        rho = plate.rho

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        k = plate.init_k_M
        Mr[k] = 0+c1
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 6+c1
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 7+c1
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 8+c1
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 9+c1
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 6+c2
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 7+c2
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 8+c2
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 9+c2
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 6+c3
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 7+c3
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 8+c3
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 9+c3
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 6+c4
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 7+c4
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 8+c4
        Mc[k] = 9+c4
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 6+c1
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 7+c1
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 8+c1
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 9+c1
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 6+c2
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 7+c2
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 8+c2
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 9+c2
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 6+c3
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 7+c3
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 8+c3
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 9+c3
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 6+c4
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 7+c4
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 8+c4
        k += 1
        Mr[k] = 9+c4
        Mc[k] = 9+c4

        k = plate.init_k_M
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0035374149659864*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0035374149659864*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0035374149659864*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.016530612244898*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex**3*ley*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.0035374149659864*h*lex**3*ley*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0114965986394558*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.00162131519274377*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.0026530612244898*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00397959183673469*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.000958049886621315*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += -0.000918367346938776*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.00673469387755102*h*lex*ley**2*rho
        k += 1
        Mv[k] += 0.00162131519274376*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00122448979591837*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0194557823129252*h*lex*ley**2*rho
        k += 1
        Mv[k] += -0.0027437641723356*h*lex**2*ley**2*rho
        k += 1
        Mv[k] += 0.00353741496598639*h*lex*ley**3*rho
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)


cpdef void update_fint(double [::1] u,
                       BFSCPlate2D plate,
                       double [::1] points,
                       double [::1] weights,
                       double [::1] fint,
                       ):
    """Update global internal force vector

    Properties
    ----------
    u : np.array
        Global displacement vector
    plate : `.BFSCylinder` object
        The plate element being added to fint
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    fint : np.array
        Global internal force array

    """
    cdef double *ue
    cdef int c1, c2, c3, c4, nint, i, j
    cdef double Bm1_01, Bm1_02, Bm1_03, Bm1_11, Bm1_12, Bm1_13, Bm1_21, Bm1_22, Bm1_23, Bm1_31, Bm1_32, Bm1_33, Bm2_04, Bm2_05, Bm2_06, Bm2_14, Bm2_15, Bm2_16, Bm2_24, Bm2_25, Bm2_26, Bm2_34, Bm2_35, Bm2_36, Bm3_01, Bm3_02, Bm3_03, Bm3_04, Bm3_05, Bm3_06, Bm3_11, Bm3_12, Bm3_13, Bm3_14, Bm3_15, Bm3_16, Bm3_21, Bm3_22, Bm3_23, Bm3_24, Bm3_25, Bm3_26, Bm3_31, Bm3_32, Bm3_33, Bm3_34, Bm3_35, Bm3_36
    cdef double BmL1_07, BmL1_08, BmL1_09, BmL1_10, BmL1_17, BmL1_18, BmL1_19, BmL1_20, BmL1_27, BmL1_28, BmL1_29, BmL1_30, BmL1_37, BmL1_38, BmL1_39, BmL1_40, BmL2_07, BmL2_08, BmL2_09, BmL2_10, BmL2_17, BmL2_18, BmL2_19, BmL2_20, BmL2_27, BmL2_28, BmL2_29, BmL2_30, BmL2_37, BmL2_38, BmL2_39, BmL2_40, BmL3_07, BmL3_08, BmL3_09, BmL3_10, BmL3_17, BmL3_18, BmL3_19, BmL3_20, BmL3_27, BmL3_28, BmL3_29, BmL3_30, BmL3_37, BmL3_38, BmL3_39, BmL3_40
    cdef double Bb1_07, Bb1_08, Bb1_09, Bb1_10, Bb1_17, Bb1_18, Bb1_19, Bb1_20, Bb1_27, Bb1_28, Bb1_29, Bb1_30, Bb1_37, Bb1_38, Bb1_39, Bb1_40, Bb2_07, Bb2_08, Bb2_09, Bb2_10, Bb2_17, Bb2_18, Bb2_19, Bb2_20, Bb2_27, Bb2_28, Bb2_29, Bb2_30, Bb2_37, Bb2_38, Bb2_39, Bb2_40, Bb3_07, Bb3_08, Bb3_09, Bb3_10, Bb3_17, Bb3_18, Bb3_19, Bb3_20, Bb3_27, Bb3_28, Bb3_29, Bb3_30, Bb3_37, Bb3_38, Bb3_39, Bb3_40
    cdef double G1_07, G1_08, G1_09, G1_10, G1_17, G1_18, G1_19, G1_20, G1_27, G1_28, G1_29, G1_30, G1_37, G1_38, G1_39, G1_40, G2_07, G2_08, G2_09, G2_10, G2_17, G2_18, G2_19, G2_20, G2_27, G2_28, G2_29, G2_30, G2_37, G2_38, G2_39, G2_40
    cdef double lex, ley, w_x, w_y
    cdef double Nxx0, Nyy0, Nxy0, Mxx0, Mxy0, Myy0
    cdef double NxxL, NyyL, NxyL
    cdef double NG1_01, NG2_01
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66
    cdef double D11, D12, D16, D22, D26, D66

    with nogil:
        lex = plate.lex
        ley = plate.ley

        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]
        D11 = plate.ABD[0+3, 0+3]
        D12 = plate.ABD[0+3, 1+3]
        D16 = plate.ABD[0+3, 2+3]
        D22 = plate.ABD[1+3, 1+3]
        D26 = plate.ABD[1+3, 2+3]
        D66 = plate.ABD[2+3, 2+3]

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        for i in range(DOF):
            plate.u[0*DOF + i] = u[c1 + i]
        for i in range(DOF):
            plate.u[1*DOF + i] = u[c2 + i]
        for i in range(DOF):
            plate.u[2*DOF + i] = u[c3 + i]
        for i in range(DOF):
            plate.u[3*DOF + i] = u[c4 + i]

        ue = &plate.u[0]

        nint = points.shape[0]

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                w_x = 2*(lex*ley*ue[19]*(eta - 1)**2*(eta + 1)*(0.046875*xi - 0.015625)*(xi + 1) + lex*ley*ue[29]*(eta - 1)*(eta + 1)**2*(0.046875*xi - 0.015625)*(xi + 1) + lex*ley*ue[39]*(eta - 1)*(eta + 1)**2*(0.046875*xi + 0.015625)*(xi - 1) + lex*ley*ue[9]*(eta - 1)**2*(eta + 1)*(0.046875*xi + 0.015625)*(xi - 1) + lex*ue[17]*(eta - 1)**2*(eta + 2)*(0.09375*xi - 0.03125)*(xi + 1) - lex*ue[27]*(eta - 2)*(eta + 1)**2*(0.09375*xi - 0.03125)*(xi + 1) - lex*ue[37]*(eta - 2)*(eta + 1)**2*(0.09375*xi + 0.03125)*(xi - 1) + lex*ue[7]*(eta - 1)**2*(eta + 2)*(0.09375*xi + 0.03125)*(xi - 1) - 0.09375*ley*ue[18]*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1) - 0.09375*ley*ue[28]*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1) + 0.09375*ley*ue[38]*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1) + 0.09375*ley*ue[8]*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1) - ue[16]*(eta - 1)**2*(xi + 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2)) + ue[26]*(eta + 1)**2*(xi + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2)) - ue[36]*(eta + 1)**2*(xi - 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2)) + ue[6]*(eta - 1)**2*(xi - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2)))/lex
                w_y = 2*(lex*ley*ue[19]*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)*(xi + 1)**2 + lex*ley*ue[29]*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)*(xi + 1)**2 + lex*ley*ue[39]*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)**2*(xi + 1) + lex*ley*ue[9]*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)**2*(xi + 1) + 0.09375*lex*ue[17]*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2 - 0.09375*lex*ue[27]*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2 - 0.09375*lex*ue[37]*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1) + 0.09375*lex*ue[7]*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1) - ley*ue[18]*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 2)*(xi + 1)**2 - ley*ue[28]*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 2)*(xi + 1)**2 + ley*ue[38]*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 1)**2*(xi + 2) + ley*ue[8]*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 1)**2*(xi + 2) - ue[16]*(eta - 1)*(xi + 1)**2*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2)) + ue[26]*(eta + 1)*(xi + 1)**2*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125)) - ue[36]*(eta + 1)*(xi - 1)**2*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125)) + ue[6]*(eta - 1)*(xi - 1)**2*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2)))/ley

                Bm1_01 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm1_02 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_03 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm1_11 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm1_12 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm1_13 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm1_21 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm1_22 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm1_23 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm1_31 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm1_32 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm1_33 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                Bm2_04 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm2_05 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_06 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm2_14 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm2_15 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_16 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm2_24 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm2_25 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm2_26 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm2_34 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm2_35 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm2_36 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_01 = (eta - 1)*(xi - 1)**2*((eta - 1)*(0.125*xi + 0.25) + 0.25*(eta + 2)*(xi + 2))/ley
                Bm3_02 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_03 = (0.1875*eta + 0.0625)*(eta - 1)*(xi - 1)**2*(xi + 2)
                Bm3_04 = (eta - 1)**2*(xi - 1)*((0.125*eta + 0.25)*(xi - 1) + 0.25*(eta + 2)*(xi + 2))/lex
                Bm3_05 = (eta - 1)**2*(eta + 2)*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_06 = 0.1875*ley*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                Bm3_11 = (eta - 1)*(xi + 1)**2*((0.25 - 0.125*xi)*(eta - 1) - 0.25*(eta + 2)*(xi - 2))/ley
                Bm3_12 = 0.1875*lex*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_13 = -(0.1875*eta + 0.0625)*(eta - 1)*(xi - 2)*(xi + 1)**2
                Bm3_14 = -(eta - 1)**2*(xi + 1)*((0.125*eta + 0.25)*(xi + 1) + 0.25*(eta + 2)*(xi - 2))/lex
                Bm3_15 = (eta - 1)**2*(eta + 2)*(0.1875*xi - 0.0625)*(xi + 1)
                Bm3_16 = 0.1875*ley*(1 - xi)*(eta - 1)**2*(eta + 1)*(xi + 1)/lex
                Bm3_21 = (eta + 1)*(xi + 1)**2*(0.25*(eta - 2)*(xi - 2) + (eta + 1)*(0.125*xi - 0.25))/ley
                Bm3_22 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                Bm3_23 = (0.0625 - 0.1875*eta)*(eta + 1)*(xi - 2)*(xi + 1)**2
                Bm3_24 = (eta + 1)**2*(xi + 1)*((0.125*eta - 0.25)*(xi + 1) + 0.25*(eta - 2)*(xi - 2))/lex
                Bm3_25 = (0.0625 - 0.1875*xi)*(eta - 2)*(eta + 1)**2*(xi + 1)
                Bm3_26 = 0.1875*ley*(1 - xi)*(eta - 1)*(eta + 1)**2*(xi + 1)/lex
                Bm3_31 = -(eta + 1)*(xi - 1)**2*(0.25*(eta - 2)*(xi + 2) + (eta + 1)*(0.125*xi + 0.25))/ley
                Bm3_32 = 0.1875*lex*(1 - eta)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                Bm3_33 = (0.1875*eta - 0.0625)*(eta + 1)*(xi - 1)**2*(xi + 2)
                Bm3_34 = (eta + 1)**2*(xi - 1)*((0.25 - 0.125*eta)*(xi - 1) - 0.25*(eta - 2)*(xi + 2))/lex
                Bm3_35 = -(eta - 2)*(eta + 1)**2*(0.1875*xi + 0.0625)*(xi - 1)
                Bm3_36 = 0.1875*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex

                BmL1_07 = 2*w_x*(eta - 1)**2*(xi - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2))/lex
                BmL1_08 = 2*w_x*(eta - 1)**2*(eta + 2)*(0.09375*xi + 0.03125)*(xi - 1)
                BmL1_09 = 0.1875*ley*w_x*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                BmL1_10 = 2*ley*w_x*(eta - 1)**2*(eta + 1)*(0.046875*xi + 0.015625)*(xi - 1)
                BmL1_17 = -2*w_x*(eta - 1)**2*(xi + 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2))/lex
                BmL1_18 = 2*w_x*(eta - 1)**2*(eta + 2)*(0.09375*xi - 0.03125)*(xi + 1)
                BmL1_19 = -0.1875*ley*w_x*(eta - 1)**2*(eta + 1)*(xi - 1)*(xi + 1)/lex
                BmL1_20 = 2*ley*w_x*(eta - 1)**2*(eta + 1)*(0.046875*xi - 0.015625)*(xi + 1)
                BmL1_27 = 2*w_x*(eta + 1)**2*(xi + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2))/lex
                BmL1_28 = -2*w_x*(eta - 2)*(eta + 1)**2*(0.09375*xi - 0.03125)*(xi + 1)
                BmL1_29 = -0.1875*ley*w_x*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                BmL1_30 = 2*ley*w_x*(eta - 1)*(eta + 1)**2*(0.046875*xi - 0.015625)*(xi + 1)
                BmL1_37 = -2*w_x*(eta + 1)**2*(xi - 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2))/lex
                BmL1_38 = -2*w_x*(eta - 2)*(eta + 1)**2*(0.09375*xi + 0.03125)*(xi - 1)
                BmL1_39 = 0.1875*ley*w_x*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)/lex
                BmL1_40 = 2*ley*w_x*(eta - 1)*(eta + 1)**2*(0.046875*xi + 0.015625)*(xi - 1)
                BmL2_07 = 2*w_y*(eta - 1)*(xi - 1)**2*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2))/ley
                BmL2_08 = 0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                BmL2_09 = 2*w_y*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 1)**2*(xi + 2)
                BmL2_10 = 2*lex*w_y*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)**2*(xi + 1)
                BmL2_17 = -2*w_y*(eta - 1)*(xi + 1)**2*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2))/ley
                BmL2_18 = 0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                BmL2_19 = -2*w_y*(0.09375*eta + 0.03125)*(eta - 1)*(xi - 2)*(xi + 1)**2
                BmL2_20 = 2*lex*w_y*(0.046875*eta + 0.015625)*(eta - 1)*(xi - 1)*(xi + 1)**2
                BmL2_27 = 2*w_y*(eta + 1)*(xi + 1)**2*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125))/ley
                BmL2_28 = -0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)**2/ley
                BmL2_29 = -2*w_y*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 2)*(xi + 1)**2
                BmL2_30 = 2*lex*w_y*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)*(xi + 1)**2
                BmL2_37 = -2*w_y*(eta + 1)*(xi - 1)**2*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125))/ley
                BmL2_38 = -0.1875*lex*w_y*(eta - 1)*(eta + 1)*(xi - 1)**2*(xi + 1)/ley
                BmL2_39 = 2*w_y*(0.09375*eta - 0.03125)*(eta + 1)*(xi - 1)**2*(xi + 2)
                BmL2_40 = 2*lex*w_y*(0.046875*eta - 0.015625)*(eta + 1)*(xi - 1)**2*(xi + 1)
                BmL3_07 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(xi - 1)*((eta - 1)*(0.0625*xi + 0.125) + 0.125*(eta + 2)*(xi + 2)) + ley*w_y*(eta - 1)*((0.0625*eta + 0.125)*(xi - 1) + 0.125*(eta + 2)*(xi + 2)))/(lex*ley)
                BmL3_08 = 2*(eta - 1)*(xi - 1)*(0.09375*lex*w_x*(eta + 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 2)*(0.09375*xi + 0.03125))/ley
                BmL3_09 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(0.09375*eta + 0.03125)*(xi - 1)*(xi + 2) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi + 1))/lex
                BmL3_10 = 2*(eta - 1)*(xi - 1)*(lex*w_x*(0.046875*eta + 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi + 0.015625))
                BmL3_17 = -2*(eta - 1)*(xi + 1)*(lex*w_x*(xi + 1)*((eta - 1)*(0.0625*xi - 0.125) + 0.125*(eta + 2)*(xi - 2)) + ley*w_y*(eta - 1)*((0.0625*eta + 0.125)*(xi + 1) + 0.125*(eta + 2)*(xi - 2)))/(lex*ley)
                BmL3_18 = 2*(eta - 1)*(xi + 1)*(0.09375*lex*w_x*(eta + 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 2)*(0.09375*xi - 0.03125))/ley
                BmL3_19 = -2*(eta - 1)*(xi + 1)*(lex*w_x*(0.09375*eta + 0.03125)*(xi - 2)*(xi + 1) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi - 1))/lex
                BmL3_20 = 2*(eta - 1)*(xi + 1)*(lex*w_x*(0.046875*eta + 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi - 0.015625))
                BmL3_27 = 2*(eta + 1)*(xi + 1)*(lex*w_x*(xi + 1)*(0.125*(eta - 2)*(xi - 2) + (eta + 1)*(0.0625*xi - 0.125)) + ley*w_y*(eta + 1)*((0.0625*eta - 0.125)*(xi + 1) + 0.125*(eta - 2)*(xi - 2)))/(lex*ley)
                BmL3_28 = -2*(eta + 1)*(xi + 1)*(0.09375*lex*w_x*(eta - 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 2)*(eta + 1)*(0.09375*xi - 0.03125))/ley
                BmL3_29 = -2*(eta + 1)*(xi + 1)*(lex*w_x*(0.09375*eta - 0.03125)*(xi - 2)*(xi + 1) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi - 1))/lex
                BmL3_30 = 2*(eta + 1)*(xi + 1)*(lex*w_x*(0.046875*eta - 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi - 0.015625))
                BmL3_37 = -2*(eta + 1)*(xi - 1)*(lex*w_x*(xi - 1)*(0.125*(eta - 2)*(xi + 2) + (eta + 1)*(0.0625*xi + 0.125)) + ley*w_y*(eta + 1)*((0.0625*eta - 0.125)*(xi - 1) + 0.125*(eta - 2)*(xi + 2)))/(lex*ley)
                BmL3_38 = -2*(eta + 1)*(xi - 1)*(0.09375*lex*w_x*(eta - 1)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 2)*(eta + 1)*(0.09375*xi + 0.03125))/ley
                BmL3_39 = 2*(eta + 1)*(xi - 1)*(lex*w_x*(0.09375*eta - 0.03125)*(xi - 1)*(xi + 2) + 0.09375*ley*w_y*(eta - 1)*(eta + 1)*(xi + 1))/lex
                BmL3_40 = 2*(eta + 1)*(xi - 1)*(lex*w_x*(0.046875*eta - 0.015625)*(xi - 1)*(xi + 1) + ley*w_y*(eta - 1)*(eta + 1)*(0.046875*xi + 0.015625))

                Bb1_07 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_08 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_09 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_10 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_17 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_18 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_19 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_20 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_27 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_28 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_29 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_30 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_37 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_38 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_39 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_40 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_07 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_08 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_09 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_10 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_17 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_18 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_19 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_20 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_27 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_28 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_29 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_30 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_37 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_38 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_39 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_40 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_07 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_08 = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_09 = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_10 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_17 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_18 = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_19 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_20 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_27 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_28 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_29 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_30 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_37 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_38 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_39 = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_40 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                G1_07 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_08 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_09 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_10 = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_17 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_18 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_19 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_27 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_28 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_29 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_30 = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_37 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_38 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_39 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_40 = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G2_07 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_08 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_09 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_10 = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_17 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_18 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_19 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_20 = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_27 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_28 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_29 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_30 = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_37 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_38 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_39 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_40 = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley

                Nxx0 = ue[0]*(A11*Bm1_01 + A16*Bm3_01) + ue[10]*(A11*Bm1_11 + A16*Bm3_11) + ue[11]*(A11*Bm1_12 + A16*Bm3_12) + ue[12]*(A11*Bm1_13 + A16*Bm3_13) + ue[13]*(A12*Bm2_14 + A16*Bm3_14) + ue[14]*(A12*Bm2_15 + A16*Bm3_15) + ue[15]*(A12*Bm2_16 + A16*Bm3_16) + ue[16]*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + ue[17]*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + ue[18]*(B11*Bb1_19 + B12*Bb2_19 + B16*Bb3_19) + ue[19]*(B11*Bb1_20 + B12*Bb2_20 + B16*Bb3_20) + ue[1]*(A11*Bm1_02 + A16*Bm3_02) + ue[20]*(A11*Bm1_21 + A16*Bm3_21) + ue[21]*(A11*Bm1_22 + A16*Bm3_22) + ue[22]*(A11*Bm1_23 + A16*Bm3_23) + ue[23]*(A12*Bm2_24 + A16*Bm3_24) + ue[24]*(A12*Bm2_25 + A16*Bm3_25) + ue[25]*(A12*Bm2_26 + A16*Bm3_26) + ue[26]*(B11*Bb1_27 + B12*Bb2_27 + B16*Bb3_27) + ue[27]*(B11*Bb1_28 + B12*Bb2_28 + B16*Bb3_28) + ue[28]*(B11*Bb1_29 + B12*Bb2_29 + B16*Bb3_29) + ue[29]*(B11*Bb1_30 + B12*Bb2_30 + B16*Bb3_30) + ue[2]*(A11*Bm1_03 + A16*Bm3_03) + ue[30]*(A11*Bm1_31 + A16*Bm3_31) + ue[31]*(A11*Bm1_32 + A16*Bm3_32) + ue[32]*(A11*Bm1_33 + A16*Bm3_33) + ue[33]*(A12*Bm2_34 + A16*Bm3_34) + ue[34]*(A12*Bm2_35 + A16*Bm3_35) + ue[35]*(A12*Bm2_36 + A16*Bm3_36) + ue[36]*(B11*Bb1_37 + B12*Bb2_37 + B16*Bb3_37) + ue[37]*(B11*Bb1_38 + B12*Bb2_38 + B16*Bb3_38) + ue[38]*(B11*Bb1_39 + B12*Bb2_39 + B16*Bb3_39) + ue[39]*(B11*Bb1_40 + B12*Bb2_40 + B16*Bb3_40) + ue[3]*(A12*Bm2_04 + A16*Bm3_04) + ue[4]*(A12*Bm2_05 + A16*Bm3_05) + ue[5]*(A12*Bm2_06 + A16*Bm3_06) + ue[6]*(B11*Bb1_07 + B12*Bb2_07 + B16*Bb3_07) + ue[7]*(B11*Bb1_08 + B12*Bb2_08 + B16*Bb3_08) + ue[8]*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + ue[9]*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10)
                Nyy0 = ue[0]*(A12*Bm1_01 + A26*Bm3_01) + ue[10]*(A12*Bm1_11 + A26*Bm3_11) + ue[11]*(A12*Bm1_12 + A26*Bm3_12) + ue[12]*(A12*Bm1_13 + A26*Bm3_13) + ue[13]*(A22*Bm2_14 + A26*Bm3_14) + ue[14]*(A22*Bm2_15 + A26*Bm3_15) + ue[15]*(A22*Bm2_16 + A26*Bm3_16) + ue[16]*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + ue[17]*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + ue[18]*(B12*Bb1_19 + B22*Bb2_19 + B26*Bb3_19) + ue[19]*(B12*Bb1_20 + B22*Bb2_20 + B26*Bb3_20) + ue[1]*(A12*Bm1_02 + A26*Bm3_02) + ue[20]*(A12*Bm1_21 + A26*Bm3_21) + ue[21]*(A12*Bm1_22 + A26*Bm3_22) + ue[22]*(A12*Bm1_23 + A26*Bm3_23) + ue[23]*(A22*Bm2_24 + A26*Bm3_24) + ue[24]*(A22*Bm2_25 + A26*Bm3_25) + ue[25]*(A22*Bm2_26 + A26*Bm3_26) + ue[26]*(B12*Bb1_27 + B22*Bb2_27 + B26*Bb3_27) + ue[27]*(B12*Bb1_28 + B22*Bb2_28 + B26*Bb3_28) + ue[28]*(B12*Bb1_29 + B22*Bb2_29 + B26*Bb3_29) + ue[29]*(B12*Bb1_30 + B22*Bb2_30 + B26*Bb3_30) + ue[2]*(A12*Bm1_03 + A26*Bm3_03) + ue[30]*(A12*Bm1_31 + A26*Bm3_31) + ue[31]*(A12*Bm1_32 + A26*Bm3_32) + ue[32]*(A12*Bm1_33 + A26*Bm3_33) + ue[33]*(A22*Bm2_34 + A26*Bm3_34) + ue[34]*(A22*Bm2_35 + A26*Bm3_35) + ue[35]*(A22*Bm2_36 + A26*Bm3_36) + ue[36]*(B12*Bb1_37 + B22*Bb2_37 + B26*Bb3_37) + ue[37]*(B12*Bb1_38 + B22*Bb2_38 + B26*Bb3_38) + ue[38]*(B12*Bb1_39 + B22*Bb2_39 + B26*Bb3_39) + ue[39]*(B12*Bb1_40 + B22*Bb2_40 + B26*Bb3_40) + ue[3]*(A22*Bm2_04 + A26*Bm3_04) + ue[4]*(A22*Bm2_05 + A26*Bm3_05) + ue[5]*(A22*Bm2_06 + A26*Bm3_06) + ue[6]*(B12*Bb1_07 + B22*Bb2_07 + B26*Bb3_07) + ue[7]*(B12*Bb1_08 + B22*Bb2_08 + B26*Bb3_08) + ue[8]*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + ue[9]*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10)
                Nxy0 = ue[0]*(A16*Bm1_01 + A66*Bm3_01) + ue[10]*(A16*Bm1_11 + A66*Bm3_11) + ue[11]*(A16*Bm1_12 + A66*Bm3_12) + ue[12]*(A16*Bm1_13 + A66*Bm3_13) + ue[13]*(A26*Bm2_14 + A66*Bm3_14) + ue[14]*(A26*Bm2_15 + A66*Bm3_15) + ue[15]*(A26*Bm2_16 + A66*Bm3_16) + ue[16]*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17) + ue[17]*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18) + ue[18]*(B16*Bb1_19 + B26*Bb2_19 + B66*Bb3_19) + ue[19]*(B16*Bb1_20 + B26*Bb2_20 + B66*Bb3_20) + ue[1]*(A16*Bm1_02 + A66*Bm3_02) + ue[20]*(A16*Bm1_21 + A66*Bm3_21) + ue[21]*(A16*Bm1_22 + A66*Bm3_22) + ue[22]*(A16*Bm1_23 + A66*Bm3_23) + ue[23]*(A26*Bm2_24 + A66*Bm3_24) + ue[24]*(A26*Bm2_25 + A66*Bm3_25) + ue[25]*(A26*Bm2_26 + A66*Bm3_26) + ue[26]*(B16*Bb1_27 + B26*Bb2_27 + B66*Bb3_27) + ue[27]*(B16*Bb1_28 + B26*Bb2_28 + B66*Bb3_28) + ue[28]*(B16*Bb1_29 + B26*Bb2_29 + B66*Bb3_29) + ue[29]*(B16*Bb1_30 + B26*Bb2_30 + B66*Bb3_30) + ue[2]*(A16*Bm1_03 + A66*Bm3_03) + ue[30]*(A16*Bm1_31 + A66*Bm3_31) + ue[31]*(A16*Bm1_32 + A66*Bm3_32) + ue[32]*(A16*Bm1_33 + A66*Bm3_33) + ue[33]*(A26*Bm2_34 + A66*Bm3_34) + ue[34]*(A26*Bm2_35 + A66*Bm3_35) + ue[35]*(A26*Bm2_36 + A66*Bm3_36) + ue[36]*(B16*Bb1_37 + B26*Bb2_37 + B66*Bb3_37) + ue[37]*(B16*Bb1_38 + B26*Bb2_38 + B66*Bb3_38) + ue[38]*(B16*Bb1_39 + B26*Bb2_39 + B66*Bb3_39) + ue[39]*(B16*Bb1_40 + B26*Bb2_40 + B66*Bb3_40) + ue[3]*(A26*Bm2_04 + A66*Bm3_04) + ue[4]*(A26*Bm2_05 + A66*Bm3_05) + ue[5]*(A26*Bm2_06 + A66*Bm3_06) + ue[6]*(B16*Bb1_07 + B26*Bb2_07 + B66*Bb3_07) + ue[7]*(B16*Bb1_08 + B26*Bb2_08 + B66*Bb3_08) + ue[8]*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09) + ue[9]*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10)
                Mxx0 = ue[0]*(B11*Bm1_01 + B16*Bm3_01) + ue[10]*(B11*Bm1_11 + B16*Bm3_11) + ue[11]*(B11*Bm1_12 + B16*Bm3_12) + ue[12]*(B11*Bm1_13 + B16*Bm3_13) + ue[13]*(B12*Bm2_14 + B16*Bm3_14) + ue[14]*(B12*Bm2_15 + B16*Bm3_15) + ue[15]*(B12*Bm2_16 + B16*Bm3_16) + ue[16]*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + ue[17]*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + ue[18]*(Bb1_19*D11 + Bb2_19*D12 + Bb3_19*D16) + ue[19]*(Bb1_20*D11 + Bb2_20*D12 + Bb3_20*D16) + ue[1]*(B11*Bm1_02 + B16*Bm3_02) + ue[20]*(B11*Bm1_21 + B16*Bm3_21) + ue[21]*(B11*Bm1_22 + B16*Bm3_22) + ue[22]*(B11*Bm1_23 + B16*Bm3_23) + ue[23]*(B12*Bm2_24 + B16*Bm3_24) + ue[24]*(B12*Bm2_25 + B16*Bm3_25) + ue[25]*(B12*Bm2_26 + B16*Bm3_26) + ue[26]*(Bb1_27*D11 + Bb2_27*D12 + Bb3_27*D16) + ue[27]*(Bb1_28*D11 + Bb2_28*D12 + Bb3_28*D16) + ue[28]*(Bb1_29*D11 + Bb2_29*D12 + Bb3_29*D16) + ue[29]*(Bb1_30*D11 + Bb2_30*D12 + Bb3_30*D16) + ue[2]*(B11*Bm1_03 + B16*Bm3_03) + ue[30]*(B11*Bm1_31 + B16*Bm3_31) + ue[31]*(B11*Bm1_32 + B16*Bm3_32) + ue[32]*(B11*Bm1_33 + B16*Bm3_33) + ue[33]*(B12*Bm2_34 + B16*Bm3_34) + ue[34]*(B12*Bm2_35 + B16*Bm3_35) + ue[35]*(B12*Bm2_36 + B16*Bm3_36) + ue[36]*(Bb1_37*D11 + Bb2_37*D12 + Bb3_37*D16) + ue[37]*(Bb1_38*D11 + Bb2_38*D12 + Bb3_38*D16) + ue[38]*(Bb1_39*D11 + Bb2_39*D12 + Bb3_39*D16) + ue[39]*(Bb1_40*D11 + Bb2_40*D12 + Bb3_40*D16) + ue[3]*(B12*Bm2_04 + B16*Bm3_04) + ue[4]*(B12*Bm2_05 + B16*Bm3_05) + ue[5]*(B12*Bm2_06 + B16*Bm3_06) + ue[6]*(Bb1_07*D11 + Bb2_07*D12 + Bb3_07*D16) + ue[7]*(Bb1_08*D11 + Bb2_08*D12 + Bb3_08*D16) + ue[8]*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + ue[9]*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16)
                Myy0 = ue[0]*(B12*Bm1_01 + B26*Bm3_01) + ue[10]*(B12*Bm1_11 + B26*Bm3_11) + ue[11]*(B12*Bm1_12 + B26*Bm3_12) + ue[12]*(B12*Bm1_13 + B26*Bm3_13) + ue[13]*(B22*Bm2_14 + B26*Bm3_14) + ue[14]*(B22*Bm2_15 + B26*Bm3_15) + ue[15]*(B22*Bm2_16 + B26*Bm3_16) + ue[16]*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + ue[17]*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + ue[18]*(Bb1_19*D12 + Bb2_19*D22 + Bb3_19*D26) + ue[19]*(Bb1_20*D12 + Bb2_20*D22 + Bb3_20*D26) + ue[1]*(B12*Bm1_02 + B26*Bm3_02) + ue[20]*(B12*Bm1_21 + B26*Bm3_21) + ue[21]*(B12*Bm1_22 + B26*Bm3_22) + ue[22]*(B12*Bm1_23 + B26*Bm3_23) + ue[23]*(B22*Bm2_24 + B26*Bm3_24) + ue[24]*(B22*Bm2_25 + B26*Bm3_25) + ue[25]*(B22*Bm2_26 + B26*Bm3_26) + ue[26]*(Bb1_27*D12 + Bb2_27*D22 + Bb3_27*D26) + ue[27]*(Bb1_28*D12 + Bb2_28*D22 + Bb3_28*D26) + ue[28]*(Bb1_29*D12 + Bb2_29*D22 + Bb3_29*D26) + ue[29]*(Bb1_30*D12 + Bb2_30*D22 + Bb3_30*D26) + ue[2]*(B12*Bm1_03 + B26*Bm3_03) + ue[30]*(B12*Bm1_31 + B26*Bm3_31) + ue[31]*(B12*Bm1_32 + B26*Bm3_32) + ue[32]*(B12*Bm1_33 + B26*Bm3_33) + ue[33]*(B22*Bm2_34 + B26*Bm3_34) + ue[34]*(B22*Bm2_35 + B26*Bm3_35) + ue[35]*(B22*Bm2_36 + B26*Bm3_36) + ue[36]*(Bb1_37*D12 + Bb2_37*D22 + Bb3_37*D26) + ue[37]*(Bb1_38*D12 + Bb2_38*D22 + Bb3_38*D26) + ue[38]*(Bb1_39*D12 + Bb2_39*D22 + Bb3_39*D26) + ue[39]*(Bb1_40*D12 + Bb2_40*D22 + Bb3_40*D26) + ue[3]*(B22*Bm2_04 + B26*Bm3_04) + ue[4]*(B22*Bm2_05 + B26*Bm3_05) + ue[5]*(B22*Bm2_06 + B26*Bm3_06) + ue[6]*(Bb1_07*D12 + Bb2_07*D22 + Bb3_07*D26) + ue[7]*(Bb1_08*D12 + Bb2_08*D22 + Bb3_08*D26) + ue[8]*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + ue[9]*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26)
                Mxy0 = ue[0]*(B16*Bm1_01 + B66*Bm3_01) + ue[10]*(B16*Bm1_11 + B66*Bm3_11) + ue[11]*(B16*Bm1_12 + B66*Bm3_12) + ue[12]*(B16*Bm1_13 + B66*Bm3_13) + ue[13]*(B26*Bm2_14 + B66*Bm3_14) + ue[14]*(B26*Bm2_15 + B66*Bm3_15) + ue[15]*(B26*Bm2_16 + B66*Bm3_16) + ue[16]*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66) + ue[17]*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66) + ue[18]*(Bb1_19*D16 + Bb2_19*D26 + Bb3_19*D66) + ue[19]*(Bb1_20*D16 + Bb2_20*D26 + Bb3_20*D66) + ue[1]*(B16*Bm1_02 + B66*Bm3_02) + ue[20]*(B16*Bm1_21 + B66*Bm3_21) + ue[21]*(B16*Bm1_22 + B66*Bm3_22) + ue[22]*(B16*Bm1_23 + B66*Bm3_23) + ue[23]*(B26*Bm2_24 + B66*Bm3_24) + ue[24]*(B26*Bm2_25 + B66*Bm3_25) + ue[25]*(B26*Bm2_26 + B66*Bm3_26) + ue[26]*(Bb1_27*D16 + Bb2_27*D26 + Bb3_27*D66) + ue[27]*(Bb1_28*D16 + Bb2_28*D26 + Bb3_28*D66) + ue[28]*(Bb1_29*D16 + Bb2_29*D26 + Bb3_29*D66) + ue[29]*(Bb1_30*D16 + Bb2_30*D26 + Bb3_30*D66) + ue[2]*(B16*Bm1_03 + B66*Bm3_03) + ue[30]*(B16*Bm1_31 + B66*Bm3_31) + ue[31]*(B16*Bm1_32 + B66*Bm3_32) + ue[32]*(B16*Bm1_33 + B66*Bm3_33) + ue[33]*(B26*Bm2_34 + B66*Bm3_34) + ue[34]*(B26*Bm2_35 + B66*Bm3_35) + ue[35]*(B26*Bm2_36 + B66*Bm3_36) + ue[36]*(Bb1_37*D16 + Bb2_37*D26 + Bb3_37*D66) + ue[37]*(Bb1_38*D16 + Bb2_38*D26 + Bb3_38*D66) + ue[38]*(Bb1_39*D16 + Bb2_39*D26 + Bb3_39*D66) + ue[39]*(Bb1_40*D16 + Bb2_40*D26 + Bb3_40*D66) + ue[3]*(B26*Bm2_04 + B66*Bm3_04) + ue[4]*(B26*Bm2_05 + B66*Bm3_05) + ue[5]*(B26*Bm2_06 + B66*Bm3_06) + ue[6]*(Bb1_07*D16 + Bb2_07*D26 + Bb3_07*D66) + ue[7]*(Bb1_08*D16 + Bb2_08*D26 + Bb3_08*D66) + ue[8]*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66) + ue[9]*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66)
                NxxL = ue[16]*(A11*BmL1_17 + A12*BmL2_17 + A16*BmL3_17) + ue[17]*(A11*BmL1_18 + A12*BmL2_18 + A16*BmL3_18) + ue[18]*(A11*BmL1_19 + A12*BmL2_19 + A16*BmL3_19) + ue[19]*(A11*BmL1_20 + A12*BmL2_20 + A16*BmL3_20) + ue[26]*(A11*BmL1_27 + A12*BmL2_27 + A16*BmL3_27) + ue[27]*(A11*BmL1_28 + A12*BmL2_28 + A16*BmL3_28) + ue[28]*(A11*BmL1_29 + A12*BmL2_29 + A16*BmL3_29) + ue[29]*(A11*BmL1_30 + A12*BmL2_30 + A16*BmL3_30) + ue[36]*(A11*BmL1_37 + A12*BmL2_37 + A16*BmL3_37) + ue[37]*(A11*BmL1_38 + A12*BmL2_38 + A16*BmL3_38) + ue[38]*(A11*BmL1_39 + A12*BmL2_39 + A16*BmL3_39) + ue[39]*(A11*BmL1_40 + A12*BmL2_40 + A16*BmL3_40) + ue[6]*(A11*BmL1_07 + A12*BmL2_07 + A16*BmL3_07) + ue[7]*(A11*BmL1_08 + A12*BmL2_08 + A16*BmL3_08) + ue[8]*(A11*BmL1_09 + A12*BmL2_09 + A16*BmL3_09) + ue[9]*(A11*BmL1_10 + A12*BmL2_10 + A16*BmL3_10)
                NyyL = ue[16]*(A12*BmL1_17 + A22*BmL2_17 + A26*BmL3_17) + ue[17]*(A12*BmL1_18 + A22*BmL2_18 + A26*BmL3_18) + ue[18]*(A12*BmL1_19 + A22*BmL2_19 + A26*BmL3_19) + ue[19]*(A12*BmL1_20 + A22*BmL2_20 + A26*BmL3_20) + ue[26]*(A12*BmL1_27 + A22*BmL2_27 + A26*BmL3_27) + ue[27]*(A12*BmL1_28 + A22*BmL2_28 + A26*BmL3_28) + ue[28]*(A12*BmL1_29 + A22*BmL2_29 + A26*BmL3_29) + ue[29]*(A12*BmL1_30 + A22*BmL2_30 + A26*BmL3_30) + ue[36]*(A12*BmL1_37 + A22*BmL2_37 + A26*BmL3_37) + ue[37]*(A12*BmL1_38 + A22*BmL2_38 + A26*BmL3_38) + ue[38]*(A12*BmL1_39 + A22*BmL2_39 + A26*BmL3_39) + ue[39]*(A12*BmL1_40 + A22*BmL2_40 + A26*BmL3_40) + ue[6]*(A12*BmL1_07 + A22*BmL2_07 + A26*BmL3_07) + ue[7]*(A12*BmL1_08 + A22*BmL2_08 + A26*BmL3_08) + ue[8]*(A12*BmL1_09 + A22*BmL2_09 + A26*BmL3_09) + ue[9]*(A12*BmL1_10 + A22*BmL2_10 + A26*BmL3_10)
                NxyL = ue[16]*(A16*BmL1_17 + A26*BmL2_17 + A66*BmL3_17) + ue[17]*(A16*BmL1_18 + A26*BmL2_18 + A66*BmL3_18) + ue[18]*(A16*BmL1_19 + A26*BmL2_19 + A66*BmL3_19) + ue[19]*(A16*BmL1_20 + A26*BmL2_20 + A66*BmL3_20) + ue[26]*(A16*BmL1_27 + A26*BmL2_27 + A66*BmL3_27) + ue[27]*(A16*BmL1_28 + A26*BmL2_28 + A66*BmL3_28) + ue[28]*(A16*BmL1_29 + A26*BmL2_29 + A66*BmL3_29) + ue[29]*(A16*BmL1_30 + A26*BmL2_30 + A66*BmL3_30) + ue[36]*(A16*BmL1_37 + A26*BmL2_37 + A66*BmL3_37) + ue[37]*(A16*BmL1_38 + A26*BmL2_38 + A66*BmL3_38) + ue[38]*(A16*BmL1_39 + A26*BmL2_39 + A66*BmL3_39) + ue[39]*(A16*BmL1_40 + A26*BmL2_40 + A66*BmL3_40) + ue[6]*(A16*BmL1_07 + A26*BmL2_07 + A66*BmL3_07) + ue[7]*(A16*BmL1_08 + A26*BmL2_08 + A66*BmL3_08) + ue[8]*(A16*BmL1_09 + A26*BmL2_09 + A66*BmL3_09) + ue[9]*(A16*BmL1_10 + A26*BmL2_10 + A66*BmL3_10)

                NG1_01 = ue[16]*(G1_17*Nxx0 + G2_17*Nxy0) + ue[17]*(G1_18*Nxx0 + G2_18*Nxy0) + ue[18]*(G1_19*Nxx0 + G2_19*Nxy0) + ue[19]*(G1_20*Nxx0 + G2_20*Nxy0) + ue[26]*(G1_27*Nxx0 + G2_27*Nxy0) + ue[27]*(G1_28*Nxx0 + G2_28*Nxy0) + ue[28]*(G1_29*Nxx0 + G2_29*Nxy0) + ue[29]*(G1_30*Nxx0 + G2_30*Nxy0) + ue[36]*(G1_37*Nxx0 + G2_37*Nxy0) + ue[37]*(G1_38*Nxx0 + G2_38*Nxy0) + ue[38]*(G1_39*Nxx0 + G2_39*Nxy0) + ue[39]*(G1_40*Nxx0 + G2_40*Nxy0) + ue[6]*(G1_07*Nxx0 + G2_07*Nxy0) + ue[7]*(G1_08*Nxx0 + G2_08*Nxy0) + ue[8]*(G1_09*Nxx0 + G2_09*Nxy0) + ue[9]*(G1_10*Nxx0 + G2_10*Nxy0)
                NG2_01 = ue[16]*(G1_17*Nxy0 + G2_17*Nyy0) + ue[17]*(G1_18*Nxy0 + G2_18*Nyy0) + ue[18]*(G1_19*Nxy0 + G2_19*Nyy0) + ue[19]*(G1_20*Nxy0 + G2_20*Nyy0) + ue[26]*(G1_27*Nxy0 + G2_27*Nyy0) + ue[27]*(G1_28*Nxy0 + G2_28*Nyy0) + ue[28]*(G1_29*Nxy0 + G2_29*Nyy0) + ue[29]*(G1_30*Nxy0 + G2_30*Nyy0) + ue[36]*(G1_37*Nxy0 + G2_37*Nyy0) + ue[37]*(G1_38*Nxy0 + G2_38*Nyy0) + ue[38]*(G1_39*Nxy0 + G2_39*Nyy0) + ue[39]*(G1_40*Nxy0 + G2_40*Nyy0) + ue[6]*(G1_07*Nxy0 + G2_07*Nyy0) + ue[7]*(G1_08*Nxy0 + G2_08*Nyy0) + ue[8]*(G1_09*Nxy0 + G2_09*Nyy0) + ue[9]*(G1_10*Nxy0 + G2_10*Nyy0)

                fint[0 + c1] += 0.25*lex*ley*weight*(Bm1_01*Nxx0 + Bm1_01*NxxL + Bm3_01*Nxy0 + Bm3_01*NxyL)
                fint[1 + c1] += 0.25*lex*ley*weight*(Bm1_02*Nxx0 + Bm1_02*NxxL + Bm3_02*Nxy0 + Bm3_02*NxyL)
                fint[2 + c1] += 0.25*lex*ley*weight*(Bm1_03*Nxx0 + Bm1_03*NxxL + Bm3_03*Nxy0 + Bm3_03*NxyL)
                fint[3 + c1] += 0.25*lex*ley*weight*(Bm2_04*Nyy0 + Bm2_04*NyyL + Bm3_04*Nxy0 + Bm3_04*NxyL)
                fint[4 + c1] += 0.25*lex*ley*weight*(Bm2_05*Nyy0 + Bm2_05*NyyL + Bm3_05*Nxy0 + Bm3_05*NxyL)
                fint[5 + c1] += 0.25*lex*ley*weight*(Bm2_06*Nyy0 + Bm2_06*NyyL + Bm3_06*Nxy0 + Bm3_06*NxyL)
                fint[6 + c1] += 0.25*lex*ley*weight*(Bb1_07*Mxx0 + Bb2_07*Myy0 + Bb3_07*Mxy0 + BmL1_07*Nxx0 + BmL1_07*NxxL + BmL2_07*Nyy0 + BmL2_07*NyyL + BmL3_07*Nxy0 + BmL3_07*NxyL + G1_07*NG1_01 + G2_07*NG2_01)
                fint[7 + c1] += 0.25*lex*ley*weight*(Bb1_08*Mxx0 + Bb2_08*Myy0 + Bb3_08*Mxy0 + BmL1_08*Nxx0 + BmL1_08*NxxL + BmL2_08*Nyy0 + BmL2_08*NyyL + BmL3_08*Nxy0 + BmL3_08*NxyL + G1_08*NG1_01 + G2_08*NG2_01)
                fint[8 + c1] += 0.25*lex*ley*weight*(Bb1_09*Mxx0 + Bb2_09*Myy0 + Bb3_09*Mxy0 + BmL1_09*Nxx0 + BmL1_09*NxxL + BmL2_09*Nyy0 + BmL2_09*NyyL + BmL3_09*Nxy0 + BmL3_09*NxyL + G1_09*NG1_01 + G2_09*NG2_01)
                fint[9 + c1] += 0.25*lex*ley*weight*(Bb1_10*Mxx0 + Bb2_10*Myy0 + Bb3_10*Mxy0 + BmL1_10*Nxx0 + BmL1_10*NxxL + BmL2_10*Nyy0 + BmL2_10*NyyL + BmL3_10*Nxy0 + BmL3_10*NxyL + G1_10*NG1_01 + G2_10*NG2_01)
                fint[0 + c2] += 0.25*lex*ley*weight*(Bm1_11*Nxx0 + Bm1_11*NxxL + Bm3_11*Nxy0 + Bm3_11*NxyL)
                fint[1 + c2] += 0.25*lex*ley*weight*(Bm1_12*Nxx0 + Bm1_12*NxxL + Bm3_12*Nxy0 + Bm3_12*NxyL)
                fint[2 + c2] += 0.25*lex*ley*weight*(Bm1_13*Nxx0 + Bm1_13*NxxL + Bm3_13*Nxy0 + Bm3_13*NxyL)
                fint[3 + c2] += 0.25*lex*ley*weight*(Bm2_14*Nyy0 + Bm2_14*NyyL + Bm3_14*Nxy0 + Bm3_14*NxyL)
                fint[4 + c2] += 0.25*lex*ley*weight*(Bm2_15*Nyy0 + Bm2_15*NyyL + Bm3_15*Nxy0 + Bm3_15*NxyL)
                fint[5 + c2] += 0.25*lex*ley*weight*(Bm2_16*Nyy0 + Bm2_16*NyyL + Bm3_16*Nxy0 + Bm3_16*NxyL)
                fint[6 + c2] += 0.25*lex*ley*weight*(Bb1_17*Mxx0 + Bb2_17*Myy0 + Bb3_17*Mxy0 + BmL1_17*Nxx0 + BmL1_17*NxxL + BmL2_17*Nyy0 + BmL2_17*NyyL + BmL3_17*Nxy0 + BmL3_17*NxyL + G1_17*NG1_01 + G2_17*NG2_01)
                fint[7 + c2] += 0.25*lex*ley*weight*(Bb1_18*Mxx0 + Bb2_18*Myy0 + Bb3_18*Mxy0 + BmL1_18*Nxx0 + BmL1_18*NxxL + BmL2_18*Nyy0 + BmL2_18*NyyL + BmL3_18*Nxy0 + BmL3_18*NxyL + G1_18*NG1_01 + G2_18*NG2_01)
                fint[8 + c2] += 0.25*lex*ley*weight*(Bb1_19*Mxx0 + Bb2_19*Myy0 + Bb3_19*Mxy0 + BmL1_19*Nxx0 + BmL1_19*NxxL + BmL2_19*Nyy0 + BmL2_19*NyyL + BmL3_19*Nxy0 + BmL3_19*NxyL + G1_19*NG1_01 + G2_19*NG2_01)
                fint[9 + c2] += 0.25*lex*ley*weight*(Bb1_20*Mxx0 + Bb2_20*Myy0 + Bb3_20*Mxy0 + BmL1_20*Nxx0 + BmL1_20*NxxL + BmL2_20*Nyy0 + BmL2_20*NyyL + BmL3_20*Nxy0 + BmL3_20*NxyL + G1_20*NG1_01 + G2_20*NG2_01)
                fint[0 + c3] += 0.25*lex*ley*weight*(Bm1_21*Nxx0 + Bm1_21*NxxL + Bm3_21*Nxy0 + Bm3_21*NxyL)
                fint[1 + c3] += 0.25*lex*ley*weight*(Bm1_22*Nxx0 + Bm1_22*NxxL + Bm3_22*Nxy0 + Bm3_22*NxyL)
                fint[2 + c3] += 0.25*lex*ley*weight*(Bm1_23*Nxx0 + Bm1_23*NxxL + Bm3_23*Nxy0 + Bm3_23*NxyL)
                fint[3 + c3] += 0.25*lex*ley*weight*(Bm2_24*Nyy0 + Bm2_24*NyyL + Bm3_24*Nxy0 + Bm3_24*NxyL)
                fint[4 + c3] += 0.25*lex*ley*weight*(Bm2_25*Nyy0 + Bm2_25*NyyL + Bm3_25*Nxy0 + Bm3_25*NxyL)
                fint[5 + c3] += 0.25*lex*ley*weight*(Bm2_26*Nyy0 + Bm2_26*NyyL + Bm3_26*Nxy0 + Bm3_26*NxyL)
                fint[6 + c3] += 0.25*lex*ley*weight*(Bb1_27*Mxx0 + Bb2_27*Myy0 + Bb3_27*Mxy0 + BmL1_27*Nxx0 + BmL1_27*NxxL + BmL2_27*Nyy0 + BmL2_27*NyyL + BmL3_27*Nxy0 + BmL3_27*NxyL + G1_27*NG1_01 + G2_27*NG2_01)
                fint[7 + c3] += 0.25*lex*ley*weight*(Bb1_28*Mxx0 + Bb2_28*Myy0 + Bb3_28*Mxy0 + BmL1_28*Nxx0 + BmL1_28*NxxL + BmL2_28*Nyy0 + BmL2_28*NyyL + BmL3_28*Nxy0 + BmL3_28*NxyL + G1_28*NG1_01 + G2_28*NG2_01)
                fint[8 + c3] += 0.25*lex*ley*weight*(Bb1_29*Mxx0 + Bb2_29*Myy0 + Bb3_29*Mxy0 + BmL1_29*Nxx0 + BmL1_29*NxxL + BmL2_29*Nyy0 + BmL2_29*NyyL + BmL3_29*Nxy0 + BmL3_29*NxyL + G1_29*NG1_01 + G2_29*NG2_01)
                fint[9 + c3] += 0.25*lex*ley*weight*(Bb1_30*Mxx0 + Bb2_30*Myy0 + Bb3_30*Mxy0 + BmL1_30*Nxx0 + BmL1_30*NxxL + BmL2_30*Nyy0 + BmL2_30*NyyL + BmL3_30*Nxy0 + BmL3_30*NxyL + G1_30*NG1_01 + G2_30*NG2_01)
                fint[0 + c4] += 0.25*lex*ley*weight*(Bm1_31*Nxx0 + Bm1_31*NxxL + Bm3_31*Nxy0 + Bm3_31*NxyL)
                fint[1 + c4] += 0.25*lex*ley*weight*(Bm1_32*Nxx0 + Bm1_32*NxxL + Bm3_32*Nxy0 + Bm3_32*NxyL)
                fint[2 + c4] += 0.25*lex*ley*weight*(Bm1_33*Nxx0 + Bm1_33*NxxL + Bm3_33*Nxy0 + Bm3_33*NxyL)
                fint[3 + c4] += 0.25*lex*ley*weight*(Bm2_34*Nyy0 + Bm2_34*NyyL + Bm3_34*Nxy0 + Bm3_34*NxyL)
                fint[4 + c4] += 0.25*lex*ley*weight*(Bm2_35*Nyy0 + Bm2_35*NyyL + Bm3_35*Nxy0 + Bm3_35*NxyL)
                fint[5 + c4] += 0.25*lex*ley*weight*(Bm2_36*Nyy0 + Bm2_36*NyyL + Bm3_36*Nxy0 + Bm3_36*NxyL)
                fint[6 + c4] += 0.25*lex*ley*weight*(Bb1_37*Mxx0 + Bb2_37*Myy0 + Bb3_37*Mxy0 + BmL1_37*Nxx0 + BmL1_37*NxxL + BmL2_37*Nyy0 + BmL2_37*NyyL + BmL3_37*Nxy0 + BmL3_37*NxyL + G1_37*NG1_01 + G2_37*NG2_01)
                fint[7 + c4] += 0.25*lex*ley*weight*(Bb1_38*Mxx0 + Bb2_38*Myy0 + Bb3_38*Mxy0 + BmL1_38*Nxx0 + BmL1_38*NxxL + BmL2_38*Nyy0 + BmL2_38*NyyL + BmL3_38*Nxy0 + BmL3_38*NxyL + G1_38*NG1_01 + G2_38*NG2_01)
                fint[8 + c4] += 0.25*lex*ley*weight*(Bb1_39*Mxx0 + Bb2_39*Myy0 + Bb3_39*Mxy0 + BmL1_39*Nxx0 + BmL1_39*NxxL + BmL2_39*Nyy0 + BmL2_39*NyyL + BmL3_39*Nxy0 + BmL3_39*NxyL + G1_39*NG1_01 + G2_39*NG2_01)
                fint[9 + c4] += 0.25*lex*ley*weight*(Bb1_40*Mxx0 + Bb2_40*Myy0 + Bb3_40*Mxy0 + BmL1_40*Nxx0 + BmL1_40*NxxL + BmL2_40*Nyy0 + BmL2_40*NyyL + BmL3_40*Nxy0 + BmL3_40*NxyL + G1_40*NG1_01 + G2_40*NG2_01)
